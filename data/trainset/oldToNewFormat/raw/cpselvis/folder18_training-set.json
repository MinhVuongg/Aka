[
  {
    "fm": "bool hasCycle(ListNode *head) {\r \r     if (head == NULL || head -> next == NULL)\r     {\r       return false;\r     }\r \r     ListNode *fast = head;\r     ListNode *slow = head;\r \r     while (fast -> next && fast -> next -> next)\r     {\r       fast = fast -> next -> next;\r       slow = slow -> next;\r       if (slow == fast)\r       {\r \treturn true;\r       }\r     }  \r \r     return false;\r   }",
    "f": [],
    "path_fm": "D:\\py\\test\\folder_18\\solution141.cpp\\Solution\\hasCycle(ListNode*)",
    "c": [
      ""
    ],
    "fc": "class Solution {\r public:\r   bool hasCycle(ListNode *head) {\r \r     if (head == NULL || head -> next == NULL)\r     {\r       return false;\r     }\r \r     ListNode *fast = head;\r     ListNode *slow = head;\r \r     while (fast -> next && fast -> next -> next)\r     {\r       fast = fast -> next -> next;\r       slow = slow -> next;\r       if (slow == fast)\r       {\r \treturn true;\r       }\r     }  \r \r     return false;\r   }\r };",
    "m": [],
    "datatest": [
      {
        "id": 0,
        "dt": {},
        "td": [
          "void AKA_TEST_Solution_hasCycle_ListNodemul_random_4(void) {\n{\nAKA_test_case_name=\"Solution_hasCycle_ListNodemul_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution141.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=-1683194015;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next0_x=642173484;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_0 = new ::ListNode(head0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_0);\n(*AKA_VECTOR_INIT_head_0).next = AKA_VECTOR_INIT_head_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=406690961;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head2_x=2091203122;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_2\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_2 = new ::ListNode(head2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_2).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_2);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_hasCycle_ListNodemul_random_4\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->hasCycle(head);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_18\\\\solution141.cpp\\\\Solution\\\\hasCycle(ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
          "void AKA_TEST_Solution_hasCycle_ListNodemul_random_2(void) {\n{\nAKA_test_case_name=\"Solution_hasCycle_ListNodemul_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution141.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=-934544087;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next0_x=1536746782;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_0 = new ::ListNode(head0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next1_x=0;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_1 = new ::ListNode(head0_next1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_1).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_1);\n(*AKA_VECTOR_INIT_head_0).next = AKA_VECTOR_INIT_head_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=696131081;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_hasCycle_ListNodemul_random_2\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->hasCycle(head);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_18\\\\solution141.cpp\\\\Solution\\\\hasCycle(ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
          "void AKA_TEST_Solution_hasCycle_ListNodemul_random_3(void) {\n{\nAKA_test_case_name=\"Solution_hasCycle_ListNodemul_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution141.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=756253360;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=566452003;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head2_x=1958624824;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_2\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_2 = new ::ListNode(head2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_2).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_2);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_hasCycle_ListNodemul_random_3\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->hasCycle(head);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_18\\\\solution141.cpp\\\\Solution\\\\hasCycle(ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
          "void AKA_TEST_Solution_hasCycle_ListNodemul_random_0(void) {\n{\nAKA_test_case_name=\"Solution_hasCycle_ListNodemul_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution141.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=1987694709;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=1991926947;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head2_x=1610278044;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_2\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_2 = new ::ListNode(head2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_2).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_2);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_hasCycle_ListNodemul_random_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->hasCycle(head);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_18\\\\solution141.cpp\\\\Solution\\\\hasCycle(ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n"
        ],
        "simplified_t": [
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution141.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=-1683194015;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next0_x=642173484;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_0 = new ::ListNode(head0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_0);\n(*AKA_VECTOR_INIT_head_0).next = AKA_VECTOR_INIT_head_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=406690961;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head2_x=2091203122;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_2\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_2 = new ::ListNode(head2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_2).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_2);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode RETURN */\n\n",
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution141.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=-934544087;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next0_x=1536746782;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_0 = new ::ListNode(head0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next1_x=0;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_1 = new ::ListNode(head0_next1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_1).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_1);\n(*AKA_VECTOR_INIT_head_0).next = AKA_VECTOR_INIT_head_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=696131081;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode RETURN */\n\n",
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution141.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=756253360;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=566452003;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head2_x=1958624824;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_2\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_2 = new ::ListNode(head2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_2).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_2);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode RETURN */\n\n",
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution141.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=1987694709;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=1991926947;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head2_x=1610278044;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution141.cpp\\\\hasCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_2\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_2 = new ::ListNode(head2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_2).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_2);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode RETURN */\n\n"
        ],
        "isAutomated": true
      }
    ]
  },
  {
    "fm": "ListNode *detectCycle(ListNode *head) {\r     ListNode *fast = head;\r     ListNode *slow = head;\r \r     bool hasCycle = false;\r \r     if (head == NULL || head -> next == NULL)\r     {\r       return NULL;\r     }\r     \r     while (fast && fast -> next)\r     {\r       fast = fast -> next -> next;\r       slow = slow -> next;\r \r       if (fast == slow)\r       {\r \thasCycle = true;\r \tbreak;\r       }\t\r     }\r \r     if (!hasCycle)\r     {\r       return NULL;\r     }\r \r     slow = head;\r     while (slow != fast)\r     {\r       slow = slow -> next;\r       fast = fast -> next;\r     }\r     \r     return slow;\r   }",
    "f": [],
    "path_fm": "D:\\py\\test\\folder_18\\solution142.cpp\\Solution\\detectCycle(ListNode*)",
    "c": [
      ""
    ],
    "fc": "class Solution {\r public:\r   ListNode *detectCycle(ListNode *head) {\r     ListNode *fast = head;\r     ListNode *slow = head;\r \r     bool hasCycle = false;\r \r     if (head == NULL || head -> next == NULL)\r     {\r       return NULL;\r     }\r     \r     while (fast && fast -> next)\r     {\r       fast = fast -> next -> next;\r       slow = slow -> next;\r \r       if (fast == slow)\r       {\r \thasCycle = true;\r \tbreak;\r       }\t\r     }\r \r     if (!hasCycle)\r     {\r       return NULL;\r     }\r \r     slow = head;\r     while (slow != fast)\r     {\r       slow = slow -> next;\r       fast = fast -> next;\r     }\r     \r     return slow;\r   }\r };",
    "m": [],
    "datatest": [
      {
        "id": 0,
        "dt": {},
        "td": [
          "void AKA_TEST_Solution_detectCycle_ListNodemul_random_0(void) {\n{\nAKA_test_case_name=\"Solution_detectCycle_ListNodemul_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution142.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=63712071;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution142.cpp\\\\detectCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_detectCycle_ListNodemul_random_0\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->detectCycle(head);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_18\\\\solution142.cpp\\\\Solution\\\\detectCycle(ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
          "void AKA_TEST_Solution_detectCycle_ListNodemul_random_5(void) {\n{\nAKA_test_case_name=\"Solution_detectCycle_ListNodemul_random_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution142.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=241160708;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution142.cpp\\\\detectCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=-1753983803;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution142.cpp\\\\detectCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_detectCycle_ListNodemul_random_5\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->detectCycle(head);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_18\\\\solution142.cpp\\\\Solution\\\\detectCycle(ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
          "void AKA_TEST_Solution_detectCycle_ListNodemul_random_3(void) {\n{\nAKA_test_case_name=\"Solution_detectCycle_ListNodemul_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution142.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=-2039888616;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution142.cpp\\\\detectCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next0_x=-176950656;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution142.cpp\\\\detectCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_0 = new ::ListNode(head0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next1_x=0;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution142.cpp\\\\detectCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_1 = new ::ListNode(head0_next1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_1).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_1);\n(*AKA_VECTOR_INIT_head_0).next = AKA_VECTOR_INIT_head_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_detectCycle_ListNodemul_random_3\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->detectCycle(head);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_18\\\\solution142.cpp\\\\Solution\\\\detectCycle(ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
          "void AKA_TEST_Solution_detectCycle_ListNodemul_random_4(void) {\n{\nAKA_test_case_name=\"Solution_detectCycle_ListNodemul_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution142.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=-470089884;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution142.cpp\\\\detectCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next0_x=-1625194039;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution142.cpp\\\\detectCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_0 = new ::ListNode(head0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_0);\n(*AKA_VECTOR_INIT_head_0).next = AKA_VECTOR_INIT_head_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_detectCycle_ListNodemul_random_4\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->detectCycle(head);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_18\\\\solution142.cpp\\\\Solution\\\\detectCycle(ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n"
        ],
        "simplified_t": [
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution142.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=63712071;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution142.cpp\\\\detectCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* PointerStructureDataNode RETURN */\n\n",
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution142.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=241160708;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution142.cpp\\\\detectCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=-1753983803;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution142.cpp\\\\detectCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* PointerStructureDataNode RETURN */\n\n",
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution142.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=-2039888616;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution142.cpp\\\\detectCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next0_x=-176950656;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution142.cpp\\\\detectCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_0 = new ::ListNode(head0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next1_x=0;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution142.cpp\\\\detectCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_1 = new ::ListNode(head0_next1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_1).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_1);\n(*AKA_VECTOR_INIT_head_0).next = AKA_VECTOR_INIT_head_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* PointerStructureDataNode RETURN */\n\n",
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution142.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=-470089884;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution142.cpp\\\\detectCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next0_x=-1625194039;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution141.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution142.cpp\\\\detectCycle(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_0 = new ::ListNode(head0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_0);\n(*AKA_VECTOR_INIT_head_0).next = AKA_VECTOR_INIT_head_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* PointerStructureDataNode RETURN */\n\n"
        ],
        "isAutomated": true
      }
    ]
  },
  {
    "fm": "vector<int> preorderTraversal(TreeNode* root) {\r     vector<int> ret;\r     dfs(ret, root);\r     return ret;\r   }",
    "f": [],
    "path_fm": "D:\\py\\test\\folder_18\\solution144.cpp\\Solution\\preorderTraversal(TreeNode*)",
    "c": [
      ""
    ],
    "fc": "class Solution {\r public:\r   vector<int> preorderTraversal(TreeNode* root) {\r     vector<int> ret;\r     dfs(ret, root);\r     return ret;\r   }\r   void dfs(vector<int> &ret, TreeNode *root)\r   {\r     if (root != NULL)\r     {\r       ret.push_back(root -> val);\r       dfs(ret, root -> left);\r       dfs(ret, root -> right);\r     }  \r   }  \r };",
    "m": [
      "void dfs(vector<int> &ret, TreeNode *root)\r\n  {\r\n    if (root != NULL)\r\n    {\r\n      ret.push_back(root -> val);\r\n      dfs(ret, root -> left);\r\n      dfs(ret, root -> right);\r\n    }  \r\n  }"
    ],
    "datatest": [
      {
        "id": 0,
        "dt": {},
        "td": [
          "void AKA_TEST_Solution_preorderTraversal_TreeNodemul_random_0(void) {\n{\nAKA_test_case_name=\"Solution_preorderTraversal_TreeNodemul_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution144.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=481897426;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\preorderTraversal(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_preorderTraversal_TreeNodemul_random_0\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->preorderTraversal(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_18\\\\solution144.cpp\\\\Solution\\\\preorderTraversal(TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
          "void AKA_TEST_Solution_preorderTraversal_TreeNodemul_random_2(void) {\n{\nAKA_test_case_name=\"Solution_preorderTraversal_TreeNodemul_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution144.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1495654234;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\preorderTraversal(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_preorderTraversal_TreeNodemul_random_2\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->preorderTraversal(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_18\\\\solution144.cpp\\\\Solution\\\\preorderTraversal(TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n"
        ],
        "simplified_t": [
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution144.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=481897426;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\preorderTraversal(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n",
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution144.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1495654234;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\preorderTraversal(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n"
        ],
        "isAutomated": true
      }
    ]
  },
  {
    "fm": "void dfs(vector<int> &ret, TreeNode *root)\r   {\r     if (root != NULL)\r     {\r       ret.push_back(root -> val);\r       dfs(ret, root -> left);\r       dfs(ret, root -> right);\r     }  \r   }",
    "f": [],
    "path_fm": "D:\\py\\test\\folder_18\\solution144.cpp\\Solution\\dfs(vector<int>&,TreeNode*)",
    "c": [
      ""
    ],
    "fc": "class Solution {\r public:\r   vector<int> preorderTraversal(TreeNode* root) {\r     vector<int> ret;\r     dfs(ret, root);\r     return ret;\r   }\r   void dfs(vector<int> &ret, TreeNode *root)\r   {\r     if (root != NULL)\r     {\r       ret.push_back(root -> val);\r       dfs(ret, root -> left);\r       dfs(ret, root -> right);\r     }  \r   }  \r };",
    "m": [
      "vector<int> preorderTraversal(TreeNode* root) {\r\n    vector<int> ret;\r\n    dfs(ret, root);\r\n    return ret;\r\n  }",
      "void dfs(vector<int> &ret, TreeNode *root)\r\n  {\r\n    if (root != NULL)\r\n    {\r\n      ret.push_back(root -> val);\r\n      dfs(ret, root -> left);\r\n      dfs(ret, root -> right);\r\n    }  \r\n  }"
    ],
    "datatest": [
      {
        "id": 0,
        "dt": {},
        "td": [
          "void AKA_TEST_Solution_dfs_vector_int_TreeNodemul_random_1(void) {\n{\nAKA_test_case_name=\"Solution_dfs_vector_int_TreeNodemul_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution144.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> ret;\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1584567091;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1474996238;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-784158602;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=1357992760;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=614152938;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=900552322;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-539699348;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=488258902;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left0_x=-498040383;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-133422653;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=297231632;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=421562258;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left2_x=-1146044251;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_2 = new ::TreeNode(root1_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).val=-1329599647;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_2);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right0_x=-1031046516;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=-1499460194;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right1_x=987439303;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_1 = new ::TreeNode(root1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).val=2123513089;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_1);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=394330866;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2).val=909333799;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_left0_x=569118620;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_left_0 = new ::TreeNode(root2_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).val=-1536163431;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).right;\nAKA_VECTOR_INIT_root_2_DOT_left.push_back(AKA_VECTOR_INIT_root_2_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_left1_x=-1853641704;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_left_1 = new ::TreeNode(root2_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).val=2121914947;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).right;\nAKA_VECTOR_INIT_root_2_DOT_left.push_back(AKA_VECTOR_INIT_root_2_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_left2_x=-961834644;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_left_2 = new ::TreeNode(root2_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_left_2).val=-821383057;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_left_2).right;\nAKA_VECTOR_INIT_root_2_DOT_left.push_back(AKA_VECTOR_INIT_root_2_DOT_left_2);\n(*AKA_VECTOR_INIT_root_2).left = AKA_VECTOR_INIT_root_2_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* VectorDataNode ret */\nint ret_element0=-1971715666;\nret.push_back(ret_element0);\nint ret_element1=1381548045;\nret.push_back(ret_element1);\nint ret_element2=-1748511101;\nret.push_back(ret_element2);\n/* PointerStructureDataNode root */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_dfs_vector_int_TreeNodemul_random_1\");AKA_INSTANCE___Solution->dfs(ret,root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_18\\\\solution144.cpp\\\\Solution\\\\dfs(vector<int>&,TreeNode*)\");\n\n/* error assertion */\nvector<int> EXPECTED_ret;\n\n\n\n// tear down\n;\n}\n}\n",
          "void AKA_TEST_Solution_dfs_vector_int_TreeNodemul_random_2(void) {\n{\nAKA_test_case_name=\"Solution_dfs_vector_int_TreeNodemul_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution144.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> ret;\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1684240060;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1141445050;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=991895384;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-1742843584;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=185186976;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=-1961960873;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=-700521138;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2).val=-1240361910;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_right0_x=1435660690;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_0 = new ::TreeNode(root2_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).val=1842974473;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_right1_x=-696654537;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_1 = new ::TreeNode(root2_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).val=-210593793;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_1);\n(*AKA_VECTOR_INIT_root_2).right = AKA_VECTOR_INIT_root_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* VectorDataNode ret */\nint ret_element0=-217657125;\nret.push_back(ret_element0);\nint ret_element1=-1448086107;\nret.push_back(ret_element1);\n/* PointerStructureDataNode root */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_dfs_vector_int_TreeNodemul_random_2\");AKA_INSTANCE___Solution->dfs(ret,root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_18\\\\solution144.cpp\\\\Solution\\\\dfs(vector<int>&,TreeNode*)\");\n\n/* error assertion */\nvector<int> EXPECTED_ret;\n\n\n\n// tear down\n;\n}\n}\n"
        ],
        "simplified_t": [
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution144.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> ret;\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1584567091;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1474996238;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-784158602;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=1357992760;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=614152938;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=900552322;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-539699348;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=488258902;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left0_x=-498040383;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-133422653;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=297231632;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=421562258;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left2_x=-1146044251;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_2 = new ::TreeNode(root1_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).val=-1329599647;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_2).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_2);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right0_x=-1031046516;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=-1499460194;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right1_x=987439303;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_1 = new ::TreeNode(root1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).val=2123513089;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_1);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=394330866;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2).val=909333799;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_left0_x=569118620;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_left_0 = new ::TreeNode(root2_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).val=-1536163431;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).right;\nAKA_VECTOR_INIT_root_2_DOT_left.push_back(AKA_VECTOR_INIT_root_2_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_left1_x=-1853641704;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_left_1 = new ::TreeNode(root2_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).val=2121914947;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).right;\nAKA_VECTOR_INIT_root_2_DOT_left.push_back(AKA_VECTOR_INIT_root_2_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_left2_x=-961834644;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_left_2 = new ::TreeNode(root2_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_left_2).val=-821383057;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_left_2).right;\nAKA_VECTOR_INIT_root_2_DOT_left.push_back(AKA_VECTOR_INIT_root_2_DOT_left_2);\n(*AKA_VECTOR_INIT_root_2).left = AKA_VECTOR_INIT_root_2_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* VectorDataNode ret */\nint ret_element0=-1971715666;\nret.push_back(ret_element0);\nint ret_element1=1381548045;\nret.push_back(ret_element1);\nint ret_element2=-1748511101;\nret.push_back(ret_element2);\n/* PointerStructureDataNode root */\n\n",
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution144.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> ret;\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1684240060;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=1141445050;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=991895384;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-1742843584;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=185186976;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=-1961960873;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=-700521138;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2).val=-1240361910;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_right0_x=1435660690;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_0 = new ::TreeNode(root2_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).val=1842974473;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_right1_x=-696654537;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution144.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_1 = new ::TreeNode(root2_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).val=-210593793;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_1);\n(*AKA_VECTOR_INIT_root_2).right = AKA_VECTOR_INIT_root_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* VectorDataNode ret */\nint ret_element0=-217657125;\nret.push_back(ret_element0);\nint ret_element1=-1448086107;\nret.push_back(ret_element1);\n/* PointerStructureDataNode root */\n\n"
        ],
        "isAutomated": true
      }
    ]
  },
  {
    "fm": "vector<int> postorderTraversal(TreeNode* root) {\r     vector<int> ret;\r     dfs(ret, root);\r     return ret;\r   }",
    "f": [],
    "path_fm": "D:\\py\\test\\folder_18\\solution145.cpp\\Solution\\postorderTraversal(TreeNode*)",
    "c": [
      ""
    ],
    "fc": "class Solution {\r public:\r   vector<int> postorderTraversal(TreeNode* root) {\r     vector<int> ret;\r     dfs(ret, root);\r     return ret;\r   }\r   void dfs(vector<int> &ret, TreeNode *root)\r   {\r     if (root != NULL)\r     {\r       dfs(ret, root -> left);\r       dfs(ret, root -> right);\r       ret.push_back(root -> val);\r     }\r   }\r };",
    "m": [
      "void dfs(vector<int> &ret, TreeNode *root)\r\n  {\r\n    if (root != NULL)\r\n    {\r\n      dfs(ret, root -> left);\r\n      dfs(ret, root -> right);\r\n      ret.push_back(root -> val);\r\n    }\r\n  }"
    ],
    "datatest": [
      {
        "id": 0,
        "dt": {},
        "td": [
          "void AKA_TEST_Solution_postorderTraversal_TreeNodemul_random_2(void) {\n{\nAKA_test_case_name=\"Solution_postorderTraversal_TreeNodemul_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution145.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-884777404;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\postorderTraversal(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-601659708;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\postorderTraversal(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_postorderTraversal_TreeNodemul_random_2\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->postorderTraversal(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_18\\\\solution145.cpp\\\\Solution\\\\postorderTraversal(TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
          "void AKA_TEST_Solution_postorderTraversal_TreeNodemul_random_3(void) {\n{\nAKA_test_case_name=\"Solution_postorderTraversal_TreeNodemul_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution145.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1142955561;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\postorderTraversal(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_postorderTraversal_TreeNodemul_random_3\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->postorderTraversal(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_18\\\\solution145.cpp\\\\Solution\\\\postorderTraversal(TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n"
        ],
        "simplified_t": [
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution145.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-884777404;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\postorderTraversal(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-601659708;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\postorderTraversal(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n",
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution145.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1142955561;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\postorderTraversal(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n"
        ],
        "isAutomated": true
      }
    ]
  },
  {
    "fm": "void dfs(vector<int> &ret, TreeNode *root)\r   {\r     if (root != NULL)\r     {\r       dfs(ret, root -> left);\r       dfs(ret, root -> right);\r       ret.push_back(root -> val);\r     }\r   }",
    "f": [],
    "path_fm": "D:\\py\\test\\folder_18\\solution145.cpp\\Solution\\dfs(vector<int>&,TreeNode*)",
    "c": [
      ""
    ],
    "fc": "class Solution {\r public:\r   vector<int> postorderTraversal(TreeNode* root) {\r     vector<int> ret;\r     dfs(ret, root);\r     return ret;\r   }\r   void dfs(vector<int> &ret, TreeNode *root)\r   {\r     if (root != NULL)\r     {\r       dfs(ret, root -> left);\r       dfs(ret, root -> right);\r       ret.push_back(root -> val);\r     }\r   }\r };",
    "m": [
      "vector<int> postorderTraversal(TreeNode* root) {\r\n    vector<int> ret;\r\n    dfs(ret, root);\r\n    return ret;\r\n  }",
      "void dfs(vector<int> &ret, TreeNode *root)\r\n  {\r\n    if (root != NULL)\r\n    {\r\n      dfs(ret, root -> left);\r\n      dfs(ret, root -> right);\r\n      ret.push_back(root -> val);\r\n    }\r\n  }"
    ],
    "datatest": [
      {
        "id": 0,
        "dt": {},
        "td": [
          "void AKA_TEST_Solution_dfs_vector_int_TreeNodemul_random_3(void) {\n{\nAKA_test_case_name=\"Solution_dfs_vector_int_TreeNodemul_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution145.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> ret;\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-118235836;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-1792249129;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-2073546719;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=1870772298;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-1082287029;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-1394082801;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left2_x=1709123252;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode(root0_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=-1259116773;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1750751341;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-473693168;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-1637665530;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1281015828;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left0_x=1935654106;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=207578671;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=-435929386;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=1120061645;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right0_x=-1850507630;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=1737462159;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right1_x=-2141142108;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_1 = new ::TreeNode(root1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).val=-518845644;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_1);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=1515550272;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2).val=-1413447607;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_left0_x=1779123486;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_left_0 = new ::TreeNode(root2_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).val=2065355599;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).right;\nAKA_VECTOR_INIT_root_2_DOT_left.push_back(AKA_VECTOR_INIT_root_2_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_left1_x=-1447387233;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_left_1 = new ::TreeNode(root2_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).val=-91740088;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).right;\nAKA_VECTOR_INIT_root_2_DOT_left.push_back(AKA_VECTOR_INIT_root_2_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_left2_x=-1143682255;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_left_2 = new ::TreeNode(root2_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_left_2).val=-574404224;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_left_2).right;\nAKA_VECTOR_INIT_root_2_DOT_left.push_back(AKA_VECTOR_INIT_root_2_DOT_left_2);\n(*AKA_VECTOR_INIT_root_2).left = AKA_VECTOR_INIT_root_2_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* VectorDataNode ret */\nint ret_element0=-1766138612;\nret.push_back(ret_element0);\n/* PointerStructureDataNode root */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_dfs_vector_int_TreeNodemul_random_3\");AKA_INSTANCE___Solution->dfs(ret,root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_18\\\\solution145.cpp\\\\Solution\\\\dfs(vector<int>&,TreeNode*)\");\n\n/* error assertion */\nvector<int> EXPECTED_ret;\n\n\n\n// tear down\n;\n}\n}\n",
          "void AKA_TEST_Solution_dfs_vector_int_TreeNodemul_random_0(void) {\n{\nAKA_test_case_name=\"Solution_dfs_vector_int_TreeNodemul_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution145.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> ret;\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1942910030;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=674621956;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-1754268080;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=1672816261;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=88916391;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=2036772923;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left2_x=-1404959184;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode(root0_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=1227277054;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=462253167;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-1190481963;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right1_x=1311755879;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=713690833;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-704060852;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1142223866;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left0_x=-422153464;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=1209242457;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right0_x=-1448613402;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=761519363;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right1_x=-955005158;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_1 = new ::TreeNode(root1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).val=-758775277;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_1);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=-1057597377;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2).val=1410089543;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_left0_x=23182768;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_left_0 = new ::TreeNode(root2_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).val=-1237754706;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).right;\nAKA_VECTOR_INIT_root_2_DOT_left.push_back(AKA_VECTOR_INIT_root_2_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_left1_x=-795195855;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_left_1 = new ::TreeNode(root2_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).val=1334258792;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).right;\nAKA_VECTOR_INIT_root_2_DOT_left.push_back(AKA_VECTOR_INIT_root_2_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_left2_x=-172063239;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_left_2 = new ::TreeNode(root2_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_left_2).val=1281148775;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_left_2).right;\nAKA_VECTOR_INIT_root_2_DOT_left.push_back(AKA_VECTOR_INIT_root_2_DOT_left_2);\n(*AKA_VECTOR_INIT_root_2).left = AKA_VECTOR_INIT_root_2_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_right0_x=148796431;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_0 = new ::TreeNode(root2_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).val=685604641;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_right1_x=895257279;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_1 = new ::TreeNode(root2_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).val=353589567;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_1);\n(*AKA_VECTOR_INIT_root_2).right = AKA_VECTOR_INIT_root_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* VectorDataNode ret */\nint ret_element0=-262037816;\nret.push_back(ret_element0);\nint ret_element1=2025098958;\nret.push_back(ret_element1);\nint ret_element2=-835426345;\nret.push_back(ret_element2);\n/* PointerStructureDataNode root */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_dfs_vector_int_TreeNodemul_random_0\");AKA_INSTANCE___Solution->dfs(ret,root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_18\\\\solution145.cpp\\\\Solution\\\\dfs(vector<int>&,TreeNode*)\");\n\n/* error assertion */\nvector<int> EXPECTED_ret;\n\n\n\n// tear down\n;\n}\n}\n"
        ],
        "simplified_t": [
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution145.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> ret;\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-118235836;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-1792249129;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-2073546719;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=1870772298;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=-1082287029;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-1394082801;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left2_x=1709123252;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode(root0_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=-1259116773;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1750751341;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-473693168;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-1637665530;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1281015828;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left0_x=1935654106;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=207578671;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=-435929386;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=1120061645;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right0_x=-1850507630;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=1737462159;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right1_x=-2141142108;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_1 = new ::TreeNode(root1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).val=-518845644;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_1);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=1515550272;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2).val=-1413447607;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_left0_x=1779123486;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_left_0 = new ::TreeNode(root2_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).val=2065355599;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).right;\nAKA_VECTOR_INIT_root_2_DOT_left.push_back(AKA_VECTOR_INIT_root_2_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_left1_x=-1447387233;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_left_1 = new ::TreeNode(root2_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).val=-91740088;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).right;\nAKA_VECTOR_INIT_root_2_DOT_left.push_back(AKA_VECTOR_INIT_root_2_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_left2_x=-1143682255;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_left_2 = new ::TreeNode(root2_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_left_2).val=-574404224;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_left_2).right;\nAKA_VECTOR_INIT_root_2_DOT_left.push_back(AKA_VECTOR_INIT_root_2_DOT_left_2);\n(*AKA_VECTOR_INIT_root_2).left = AKA_VECTOR_INIT_root_2_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* VectorDataNode ret */\nint ret_element0=-1766138612;\nret.push_back(ret_element0);\n/* PointerStructureDataNode root */\n\n",
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution145.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> ret;\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-1942910030;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=674621956;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-1754268080;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=1672816261;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=88916391;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=2036772923;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left2_x=-1404959184;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode(root0_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=1227277054;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=462253167;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-1190481963;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right1_x=1311755879;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=713690833;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-704060852;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=1142223866;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left0_x=-422153464;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=1209242457;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right0_x=-1448613402;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode(root1_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=761519363;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right1_x=-955005158;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_1 = new ::TreeNode(root1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).val=-758775277;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_1);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=-1057597377;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2).val=1410089543;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_left0_x=23182768;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_left_0 = new ::TreeNode(root2_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).val=-1237754706;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).right;\nAKA_VECTOR_INIT_root_2_DOT_left.push_back(AKA_VECTOR_INIT_root_2_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_left1_x=-795195855;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_left_1 = new ::TreeNode(root2_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).val=1334258792;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).right;\nAKA_VECTOR_INIT_root_2_DOT_left.push_back(AKA_VECTOR_INIT_root_2_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_left2_x=-172063239;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_left_2 = new ::TreeNode(root2_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_left_2).val=1281148775;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_left_2).right;\nAKA_VECTOR_INIT_root_2_DOT_left.push_back(AKA_VECTOR_INIT_root_2_DOT_left_2);\n(*AKA_VECTOR_INIT_root_2).left = AKA_VECTOR_INIT_root_2_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_right0_x=148796431;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_0 = new ::TreeNode(root2_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).val=685604641;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_right1_x=895257279;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution144.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution145.cpp\\\\dfs(vector<int>&,TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_1 = new ::TreeNode(root2_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).val=353589567;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_1).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_1);\n(*AKA_VECTOR_INIT_root_2).right = AKA_VECTOR_INIT_root_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n/* RootDataNode STATIC */\n/* VectorDataNode ret */\nint ret_element0=-262037816;\nret.push_back(ret_element0);\nint ret_element1=2025098958;\nret.push_back(ret_element1);\nint ret_element2=-835426345;\nret.push_back(ret_element2);\n/* PointerStructureDataNode root */\n\n"
        ],
        "isAutomated": true
      }
    ]
  },
  {
    "fm": "int get(int key)\r   {\r     map<int, CacheNode *>::iterator it = mp.find(key);\r     if (it != mp.end())\r     {\r       CacheNode *node = it -> second;\r       remove(node);\r       setHead(node);\r       return node -> value;\r     }\r     else\r     {\r       return -1;\r     }\r   }",
    "f": [
      "int size;",
      "CacheNode *head;",
      "CacheNode *tail;",
      "map<int, CacheNode *> mp;"
    ],
    "path_fm": "D:\\py\\test\\folder_18\\solution146.cpp\\LRUCache\\get(int)",
    "c": [
      "LRUCache(int capacity)\r\n  {\r\n    size = capacity;\r\n    head = NULL;\r\n    tail = NULL;\r\n  }"
    ],
    "fc": "class LRUCache{\r private:\r   int size;                     // Maximum of cachelist size.\r   CacheNode *head, *tail;\r   map<int, CacheNode *> mp;          // Use hashmap to store\r public:\r   LRUCache(int capacity)\r   {\r     size = capacity;\r     head = NULL;\r     tail = NULL;\r   }\r \r   int get(int key)\r   {\r     map<int, CacheNode *>::iterator it = mp.find(key);\r     if (it != mp.end())\r     {\r       CacheNode *node = it -> second;\r       remove(node);\r       setHead(node);\r       return node -> value;\r     }\r     else\r     {\r       return -1;\r     }\r   }\r \r   void set(int key, int value)\r   {\r     map<int, CacheNode *>::iterator it = mp.find(key);\r     if (it != mp.end())\r     {\r       CacheNode *node = it -> second;\r       node -> value = value;\r       remove(node);\r       setHead(node);\r     }\r     else\r     {\r       CacheNode *newNode = new CacheNode(key, value);\r       if (mp.size() >= size)\r       {\r \tmap<int, CacheNode *>::iterator iter = mp.find(tail -> key);\r       \tremove(tail);\r \tmp.erase(iter);\r       }\r       setHead(newNode);\r       mp[key] = newNode;\r     }\r   }\r \r   void remove(CacheNode *node)\r   {\r     if (node -> pre != NULL)\r     {\r       node -> pre -> next = node -> next;\r     }\r     else\r     {\r       head = node -> next;\r     }\r     if (node -> next != NULL)\r     {\r       node -> next -> pre = node -> pre;\r     }\r     else\r     {\r       tail = node -> pre;\r     }\r   }\r \r   void setHead(CacheNode *node)\r   {\r     node -> next = head;\r     node -> pre = NULL;\r \r     if (head != NULL)\r     {\r       head -> pre = node;\r     }\r     head = node;\r     if (tail == NULL)\r     {\r       tail = head;\r     }\r   }\r };",
    "m": [
      "void remove(CacheNode *node)\r\n  {\r\n    if (node -> pre != NULL)\r\n    {\r\n      node -> pre -> next = node -> next;\r\n    }\r\n    else\r\n    {\r\n      head = node -> next;\r\n    }\r\n    if (node -> next != NULL)\r\n    {\r\n      node -> next -> pre = node -> pre;\r\n    }\r\n    else\r\n    {\r\n      tail = node -> pre;\r\n    }\r\n  }",
      "void setHead(CacheNode *node)\r\n  {\r\n    node -> next = head;\r\n    node -> pre = NULL;\r\n\r\n    if (head != NULL)\r\n    {\r\n      head -> pre = node;\r\n    }\r\n    head = node;\r\n    if (tail == NULL)\r\n    {\r\n      tail = head;\r\n    }\r\n  }"
    ],
    "datatest": [
      {
        "id": 0,
        "dt": {},
        "td": [
          "void AKA_TEST_LRUCache_get_int_random_2(void) {\n{\nAKA_test_case_name=\"LRUCache_get_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___LRUCache */\n/* ConstructorDataNode LRUCache(int) */\n/* NormalNumberDataNode capacity */\nint AKA_INSTANCE___LRUCache_capacity=-1773516089;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution146.cpp\\\\LRUCache\\\\LRUCache(int)|ROOT\\\\solution146.cpp\\\\GLOBAL\\\\AKA_INSTANCE___LRUCache\\\\AKA_INSTANCE___LRUCache\\\\LRUCache(int)\");AKA_fCall++;AKA_INSTANCE___LRUCache = new ::LRUCache(AKA_INSTANCE___LRUCache_capacity);\n/* NormalNumberDataNode size */\n/* size : null value -> no code */\n/* PointerStructureDataNode head */\nAKA_INSTANCE___LRUCache->head;\n/* PointerStructureDataNode tail */\nAKA_INSTANCE___LRUCache->tail;\n/* MapDataNode mp */\n\n\n\n\nint key=-1917881925;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode key */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test LRUCache_get_int_random_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___LRUCache->get(key);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_18\\\\solution146.cpp\\\\LRUCache\\\\get(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
          "void AKA_TEST_LRUCache_get_int_random_5(void) {\n{\nAKA_test_case_name=\"LRUCache_get_int_random_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___LRUCache */\n/* ConstructorDataNode LRUCache(int) */\n/* NormalNumberDataNode capacity */\nint AKA_INSTANCE___LRUCache_capacity=-77752676;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution146.cpp\\\\LRUCache\\\\LRUCache(int)|ROOT\\\\solution146.cpp\\\\GLOBAL\\\\AKA_INSTANCE___LRUCache\\\\AKA_INSTANCE___LRUCache\\\\LRUCache(int)\");AKA_fCall++;AKA_INSTANCE___LRUCache = new ::LRUCache(AKA_INSTANCE___LRUCache_capacity);\n/* NormalNumberDataNode size */\n/* size : null value -> no code */\n/* PointerStructureDataNode head */\nAKA_INSTANCE___LRUCache->head;\n/* PointerStructureDataNode tail */\nAKA_INSTANCE___LRUCache->tail;\n/* MapDataNode mp */\n\n\n\n\nint key=882253371;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode key */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test LRUCache_get_int_random_5\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___LRUCache->get(key);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_18\\\\solution146.cpp\\\\LRUCache\\\\get(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n"
        ],
        "simplified_t": [
          "\n\n/* SubClassDataNode AKA_INSTANCE___LRUCache */\n/* ConstructorDataNode LRUCache(int) */\n/* NormalNumberDataNode capacity */\nint AKA_INSTANCE___LRUCache_capacity=-1773516089;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution146.cpp\\\\LRUCache\\\\LRUCache(int)|ROOT\\\\solution146.cpp\\\\GLOBAL\\\\AKA_INSTANCE___LRUCache\\\\AKA_INSTANCE___LRUCache\\\\LRUCache(int)\");AKA_fCall++;AKA_INSTANCE___LRUCache = new ::LRUCache(AKA_INSTANCE___LRUCache_capacity);\n/* NormalNumberDataNode size */\n/* size : null value -> no code */\n/* PointerStructureDataNode head */\nAKA_INSTANCE___LRUCache->head;\n/* PointerStructureDataNode tail */\nAKA_INSTANCE___LRUCache->tail;\n/* MapDataNode mp */\n\n\n\n\nint key=-1917881925;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode key */\n/* NormalNumberDataNode RETURN */\n\n",
          "\n\n/* SubClassDataNode AKA_INSTANCE___LRUCache */\n/* ConstructorDataNode LRUCache(int) */\n/* NormalNumberDataNode capacity */\nint AKA_INSTANCE___LRUCache_capacity=-77752676;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution146.cpp\\\\LRUCache\\\\LRUCache(int)|ROOT\\\\solution146.cpp\\\\GLOBAL\\\\AKA_INSTANCE___LRUCache\\\\AKA_INSTANCE___LRUCache\\\\LRUCache(int)\");AKA_fCall++;AKA_INSTANCE___LRUCache = new ::LRUCache(AKA_INSTANCE___LRUCache_capacity);\n/* NormalNumberDataNode size */\n/* size : null value -> no code */\n/* PointerStructureDataNode head */\nAKA_INSTANCE___LRUCache->head;\n/* PointerStructureDataNode tail */\nAKA_INSTANCE___LRUCache->tail;\n/* MapDataNode mp */\n\n\n\n\nint key=882253371;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode key */\n/* NormalNumberDataNode RETURN */\n\n"
        ],
        "isAutomated": true
      }
    ]
  },
  {
    "fm": "void set(int key, int value)\r   {\r     map<int, CacheNode *>::iterator it = mp.find(key);\r     if (it != mp.end())\r     {\r       CacheNode *node = it -> second;\r       node -> value = value;\r       remove(node);\r       setHead(node);\r     }\r     else\r     {\r       CacheNode *newNode = new CacheNode(key, value);\r       if (mp.size() >= size)\r       {\r \tmap<int, CacheNode *>::iterator iter = mp.find(tail -> key);\r       \tremove(tail);\r \tmp.erase(iter);\r       }\r       setHead(newNode);\r       mp[key] = newNode;\r     }\r   }",
    "f": [
      "int size;",
      "CacheNode *head;",
      "CacheNode *tail;",
      "map<int, CacheNode *> mp;"
    ],
    "path_fm": "D:\\py\\test\\folder_18\\solution146.cpp\\LRUCache\\set(int,int)",
    "c": [
      "LRUCache(int capacity)\r\n  {\r\n    size = capacity;\r\n    head = NULL;\r\n    tail = NULL;\r\n  }"
    ],
    "fc": "class LRUCache{\r private:\r   int size;                     // Maximum of cachelist size.\r   CacheNode *head, *tail;\r   map<int, CacheNode *> mp;          // Use hashmap to store\r public:\r   LRUCache(int capacity)\r   {\r     size = capacity;\r     head = NULL;\r     tail = NULL;\r   }\r \r   int get(int key)\r   {\r     map<int, CacheNode *>::iterator it = mp.find(key);\r     if (it != mp.end())\r     {\r       CacheNode *node = it -> second;\r       remove(node);\r       setHead(node);\r       return node -> value;\r     }\r     else\r     {\r       return -1;\r     }\r   }\r \r   void set(int key, int value)\r   {\r     map<int, CacheNode *>::iterator it = mp.find(key);\r     if (it != mp.end())\r     {\r       CacheNode *node = it -> second;\r       node -> value = value;\r       remove(node);\r       setHead(node);\r     }\r     else\r     {\r       CacheNode *newNode = new CacheNode(key, value);\r       if (mp.size() >= size)\r       {\r \tmap<int, CacheNode *>::iterator iter = mp.find(tail -> key);\r       \tremove(tail);\r \tmp.erase(iter);\r       }\r       setHead(newNode);\r       mp[key] = newNode;\r     }\r   }\r \r   void remove(CacheNode *node)\r   {\r     if (node -> pre != NULL)\r     {\r       node -> pre -> next = node -> next;\r     }\r     else\r     {\r       head = node -> next;\r     }\r     if (node -> next != NULL)\r     {\r       node -> next -> pre = node -> pre;\r     }\r     else\r     {\r       tail = node -> pre;\r     }\r   }\r \r   void setHead(CacheNode *node)\r   {\r     node -> next = head;\r     node -> pre = NULL;\r \r     if (head != NULL)\r     {\r       head -> pre = node;\r     }\r     head = node;\r     if (tail == NULL)\r     {\r       tail = head;\r     }\r   }\r };",
    "m": [
      "void remove(CacheNode *node)\r\n  {\r\n    if (node -> pre != NULL)\r\n    {\r\n      node -> pre -> next = node -> next;\r\n    }\r\n    else\r\n    {\r\n      head = node -> next;\r\n    }\r\n    if (node -> next != NULL)\r\n    {\r\n      node -> next -> pre = node -> pre;\r\n    }\r\n    else\r\n    {\r\n      tail = node -> pre;\r\n    }\r\n  }",
      "void setHead(CacheNode *node)\r\n  {\r\n    node -> next = head;\r\n    node -> pre = NULL;\r\n\r\n    if (head != NULL)\r\n    {\r\n      head -> pre = node;\r\n    }\r\n    head = node;\r\n    if (tail == NULL)\r\n    {\r\n      tail = head;\r\n    }\r\n  }"
    ],
    "datatest": [
      {
        "id": 0,
        "dt": {},
        "td": [
          "void AKA_TEST_LRUCache_set_int_int_random_0(void) {\n{\nAKA_test_case_name=\"LRUCache_set_int_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___LRUCache */\n/* ConstructorDataNode LRUCache(int) */\n/* NormalNumberDataNode capacity */\nint AKA_INSTANCE___LRUCache_capacity=1376685339;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution146.cpp\\\\LRUCache\\\\LRUCache(int)|ROOT\\\\solution146.cpp\\\\GLOBAL\\\\AKA_INSTANCE___LRUCache\\\\AKA_INSTANCE___LRUCache\\\\LRUCache(int)\");AKA_fCall++;AKA_INSTANCE___LRUCache = new ::LRUCache(AKA_INSTANCE___LRUCache_capacity);\n/* NormalNumberDataNode size */\n/* size : null value -> no code */\n/* PointerStructureDataNode head */\nAKA_INSTANCE___LRUCache->head;\n/* PointerStructureDataNode tail */\nAKA_INSTANCE___LRUCache->tail;\n/* MapDataNode mp */\n\n\n\n\nint key=993679532;\n\n\nint value=-1711500356;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode key */\n/* NormalNumberDataNode value */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test LRUCache_set_int_int_random_0\");AKA_INSTANCE___LRUCache->set(key,value);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_18\\\\solution146.cpp\\\\LRUCache\\\\set(int,int)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
          "void AKA_TEST_LRUCache_set_int_int_random_3(void) {\n{\nAKA_test_case_name=\"LRUCache_set_int_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___LRUCache */\n/* ConstructorDataNode LRUCache(int) */\n/* NormalNumberDataNode capacity */\nint AKA_INSTANCE___LRUCache_capacity=-1407794618;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution146.cpp\\\\LRUCache\\\\LRUCache(int)|ROOT\\\\solution146.cpp\\\\GLOBAL\\\\AKA_INSTANCE___LRUCache\\\\AKA_INSTANCE___LRUCache\\\\LRUCache(int)\");AKA_fCall++;AKA_INSTANCE___LRUCache = new ::LRUCache(AKA_INSTANCE___LRUCache_capacity);\n/* NormalNumberDataNode size */\n/* size : null value -> no code */\n/* PointerStructureDataNode head */\nAKA_INSTANCE___LRUCache->head;\n/* PointerStructureDataNode tail */\nAKA_INSTANCE___LRUCache->tail;\n/* MapDataNode mp */\n\n\n\n\nint key=-1169251303;\n\n\nint value=1043617327;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode key */\n/* NormalNumberDataNode value */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test LRUCache_set_int_int_random_3\");AKA_INSTANCE___LRUCache->set(key,value);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_18\\\\solution146.cpp\\\\LRUCache\\\\set(int,int)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n"
        ],
        "simplified_t": [
          "\n\n/* SubClassDataNode AKA_INSTANCE___LRUCache */\n/* ConstructorDataNode LRUCache(int) */\n/* NormalNumberDataNode capacity */\nint AKA_INSTANCE___LRUCache_capacity=1376685339;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution146.cpp\\\\LRUCache\\\\LRUCache(int)|ROOT\\\\solution146.cpp\\\\GLOBAL\\\\AKA_INSTANCE___LRUCache\\\\AKA_INSTANCE___LRUCache\\\\LRUCache(int)\");AKA_fCall++;AKA_INSTANCE___LRUCache = new ::LRUCache(AKA_INSTANCE___LRUCache_capacity);\n/* NormalNumberDataNode size */\n/* size : null value -> no code */\n/* PointerStructureDataNode head */\nAKA_INSTANCE___LRUCache->head;\n/* PointerStructureDataNode tail */\nAKA_INSTANCE___LRUCache->tail;\n/* MapDataNode mp */\n\n\n\n\nint key=993679532;\n\n\nint value=-1711500356;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode key */\n/* NormalNumberDataNode value */\n\n",
          "\n\n/* SubClassDataNode AKA_INSTANCE___LRUCache */\n/* ConstructorDataNode LRUCache(int) */\n/* NormalNumberDataNode capacity */\nint AKA_INSTANCE___LRUCache_capacity=-1407794618;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution146.cpp\\\\LRUCache\\\\LRUCache(int)|ROOT\\\\solution146.cpp\\\\GLOBAL\\\\AKA_INSTANCE___LRUCache\\\\AKA_INSTANCE___LRUCache\\\\LRUCache(int)\");AKA_fCall++;AKA_INSTANCE___LRUCache = new ::LRUCache(AKA_INSTANCE___LRUCache_capacity);\n/* NormalNumberDataNode size */\n/* size : null value -> no code */\n/* PointerStructureDataNode head */\nAKA_INSTANCE___LRUCache->head;\n/* PointerStructureDataNode tail */\nAKA_INSTANCE___LRUCache->tail;\n/* MapDataNode mp */\n\n\n\n\nint key=-1169251303;\n\n\nint value=1043617327;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode key */\n/* NormalNumberDataNode value */\n\n"
        ],
        "isAutomated": true
      }
    ]
  },
  {
    "fm": "void remove(CacheNode *node)\r   {\r     if (node -> pre != NULL)\r     {\r       node -> pre -> next = node -> next;\r     }\r     else\r     {\r       head = node -> next;\r     }\r     if (node -> next != NULL)\r     {\r       node -> next -> pre = node -> pre;\r     }\r     else\r     {\r       tail = node -> pre;\r     }\r   }",
    "f": [
      "int size;",
      "CacheNode *head;",
      "CacheNode *tail;",
      "map<int, CacheNode *> mp;"
    ],
    "path_fm": "D:\\py\\test\\folder_18\\solution146.cpp\\LRUCache\\remove(CacheNode*)",
    "c": [
      "LRUCache(int capacity)\r\n  {\r\n    size = capacity;\r\n    head = NULL;\r\n    tail = NULL;\r\n  }"
    ],
    "fc": "class LRUCache{\r private:\r   int size;                     // Maximum of cachelist size.\r   CacheNode *head, *tail;\r   map<int, CacheNode *> mp;          // Use hashmap to store\r public:\r   LRUCache(int capacity)\r   {\r     size = capacity;\r     head = NULL;\r     tail = NULL;\r   }\r \r   int get(int key)\r   {\r     map<int, CacheNode *>::iterator it = mp.find(key);\r     if (it != mp.end())\r     {\r       CacheNode *node = it -> second;\r       remove(node);\r       setHead(node);\r       return node -> value;\r     }\r     else\r     {\r       return -1;\r     }\r   }\r \r   void set(int key, int value)\r   {\r     map<int, CacheNode *>::iterator it = mp.find(key);\r     if (it != mp.end())\r     {\r       CacheNode *node = it -> second;\r       node -> value = value;\r       remove(node);\r       setHead(node);\r     }\r     else\r     {\r       CacheNode *newNode = new CacheNode(key, value);\r       if (mp.size() >= size)\r       {\r \tmap<int, CacheNode *>::iterator iter = mp.find(tail -> key);\r       \tremove(tail);\r \tmp.erase(iter);\r       }\r       setHead(newNode);\r       mp[key] = newNode;\r     }\r   }\r \r   void remove(CacheNode *node)\r   {\r     if (node -> pre != NULL)\r     {\r       node -> pre -> next = node -> next;\r     }\r     else\r     {\r       head = node -> next;\r     }\r     if (node -> next != NULL)\r     {\r       node -> next -> pre = node -> pre;\r     }\r     else\r     {\r       tail = node -> pre;\r     }\r   }\r \r   void setHead(CacheNode *node)\r   {\r     node -> next = head;\r     node -> pre = NULL;\r \r     if (head != NULL)\r     {\r       head -> pre = node;\r     }\r     head = node;\r     if (tail == NULL)\r     {\r       tail = head;\r     }\r   }\r };",
    "m": [
      "int get(int key)\r\n  {\r\n    map<int, CacheNode *>::iterator it = mp.find(key);\r\n    if (it != mp.end())\r\n    {\r\n      CacheNode *node = it -> second;\r\n      remove(node);\r\n      setHead(node);\r\n      return node -> value;\r\n    }\r\n    else\r\n    {\r\n      return -1;\r\n    }\r\n  }",
      "void set(int key, int value)\r\n  {\r\n    map<int, CacheNode *>::iterator it = mp.find(key);\r\n    if (it != mp.end())\r\n    {\r\n      CacheNode *node = it -> second;\r\n      node -> value = value;\r\n      remove(node);\r\n      setHead(node);\r\n    }\r\n    else\r\n    {\r\n      CacheNode *newNode = new CacheNode(key, value);\r\n      if (mp.size() >= size)\r\n      {\r\n\tmap<int, CacheNode *>::iterator iter = mp.find(tail -> key);\r\n      \tremove(tail);\r\n\tmp.erase(iter);\r\n      }\r\n      setHead(newNode);\r\n      mp[key] = newNode;\r\n    }\r\n  }"
    ],
    "datatest": [
      {
        "id": 0,
        "dt": {},
        "td": [
          "void AKA_TEST_LRUCache_remove_CacheNodemul_random_1(void) {\n{\nAKA_test_case_name=\"LRUCache_remove_CacheNodemul_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___LRUCache */\n/* ConstructorDataNode LRUCache(int) */\n/* NormalNumberDataNode capacity */\nint AKA_INSTANCE___LRUCache_capacity=22790677;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution146.cpp\\\\LRUCache\\\\LRUCache(int)|ROOT\\\\solution146.cpp\\\\GLOBAL\\\\AKA_INSTANCE___LRUCache\\\\AKA_INSTANCE___LRUCache\\\\LRUCache(int)\");AKA_fCall++;AKA_INSTANCE___LRUCache = new ::LRUCache(AKA_INSTANCE___LRUCache_capacity);\n/* NormalNumberDataNode size */\n/* size : null value -> no code */\n/* PointerStructureDataNode head */\nAKA_INSTANCE___LRUCache->head;\n/* PointerStructureDataNode tail */\nAKA_INSTANCE___LRUCache->tail;\n/* MapDataNode mp */\n\n\nstd::vector<CacheNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode CacheNode(int,int) */\n/* NormalNumberDataNode k */\nint node0_k=875879775;\n/* NormalNumberDataNode v */\nint node0_v=-1828492322;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution146.cpp\\\\CacheNode\\\\CacheNode(int,int)|ROOT\\\\solution146.cpp\\\\remove(CacheNode*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\CacheNode(int,int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::CacheNode(node0_k,node0_v);\n/* NormalNumberDataNode key */\n/* key : null value -> no code */\n/* NormalNumberDataNode value */\n/* value : null value -> no code */\n/* PointerStructureDataNode pre */\n(*AKA_VECTOR_INIT_node_0).pre;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_0).next;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode CacheNode(int,int) */\n/* NormalNumberDataNode k */\nint node1_k=-1972609906;\n/* NormalNumberDataNode v */\nint node1_v=140422444;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution146.cpp\\\\CacheNode\\\\CacheNode(int,int)|ROOT\\\\solution146.cpp\\\\remove(CacheNode*)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\CacheNode(int,int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::CacheNode(node1_k,node1_v);\n/* NormalNumberDataNode key */\n/* key : null value -> no code */\n/* NormalNumberDataNode value */\n/* value : null value -> no code */\n/* PointerStructureDataNode pre */\n(*AKA_VECTOR_INIT_node_1).pre;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_1).next;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode CacheNode(int,int) */\n/* NormalNumberDataNode k */\nint node2_k=0;\n/* NormalNumberDataNode v */\nint node2_v=0;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution146.cpp\\\\CacheNode\\\\CacheNode(int,int)|ROOT\\\\solution146.cpp\\\\remove(CacheNode*)\\\\node\\\\AKA_VECTOR_INIT_node_2\\\\node\\\\CacheNode(int,int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_2 = new ::CacheNode(node2_k,node2_v);\n/* NormalNumberDataNode key */\n/* key : null value -> no code */\n/* NormalNumberDataNode value */\n/* value : null value -> no code */\n/* PointerStructureDataNode pre */\n(*AKA_VECTOR_INIT_node_2).pre;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_2).next;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_2);\n\nCacheNode* node = AKA_VECTOR_INIT_node[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test LRUCache_remove_CacheNodemul_random_1\");AKA_INSTANCE___LRUCache->remove(node);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_18\\\\solution146.cpp\\\\LRUCache\\\\remove(CacheNode*)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
          "void AKA_TEST_LRUCache_remove_CacheNodemul_random_4(void) {\n{\nAKA_test_case_name=\"LRUCache_remove_CacheNodemul_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___LRUCache */\n/* ConstructorDataNode LRUCache(int) */\n/* NormalNumberDataNode capacity */\nint AKA_INSTANCE___LRUCache_capacity=-955664313;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution146.cpp\\\\LRUCache\\\\LRUCache(int)|ROOT\\\\solution146.cpp\\\\GLOBAL\\\\AKA_INSTANCE___LRUCache\\\\AKA_INSTANCE___LRUCache\\\\LRUCache(int)\");AKA_fCall++;AKA_INSTANCE___LRUCache = new ::LRUCache(AKA_INSTANCE___LRUCache_capacity);\n/* NormalNumberDataNode size */\n/* size : null value -> no code */\n/* PointerStructureDataNode head */\nAKA_INSTANCE___LRUCache->head;\n/* PointerStructureDataNode tail */\nAKA_INSTANCE___LRUCache->tail;\n/* MapDataNode mp */\n\n\nstd::vector<CacheNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode CacheNode(int,int) */\n/* NormalNumberDataNode k */\nint node0_k=927145039;\n/* NormalNumberDataNode v */\nint node0_v=628142865;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution146.cpp\\\\CacheNode\\\\CacheNode(int,int)|ROOT\\\\solution146.cpp\\\\remove(CacheNode*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\CacheNode(int,int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::CacheNode(node0_k,node0_v);\n/* NormalNumberDataNode key */\n/* key : null value -> no code */\n/* NormalNumberDataNode value */\n/* value : null value -> no code */\n/* PointerStructureDataNode pre */\n(*AKA_VECTOR_INIT_node_0).pre;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_0).next;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode CacheNode(int,int) */\n/* NormalNumberDataNode k */\nint node1_k=-934194895;\n/* NormalNumberDataNode v */\nint node1_v=-474471147;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution146.cpp\\\\CacheNode\\\\CacheNode(int,int)|ROOT\\\\solution146.cpp\\\\remove(CacheNode*)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\CacheNode(int,int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::CacheNode(node1_k,node1_v);\n/* NormalNumberDataNode key */\n/* key : null value -> no code */\n/* NormalNumberDataNode value */\n/* value : null value -> no code */\n/* PointerStructureDataNode pre */\n(*AKA_VECTOR_INIT_node_1).pre;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_1).next;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nCacheNode* node = AKA_VECTOR_INIT_node[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test LRUCache_remove_CacheNodemul_random_4\");AKA_INSTANCE___LRUCache->remove(node);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_18\\\\solution146.cpp\\\\LRUCache\\\\remove(CacheNode*)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n"
        ],
        "simplified_t": [
          "\n\n/* SubClassDataNode AKA_INSTANCE___LRUCache */\n/* ConstructorDataNode LRUCache(int) */\n/* NormalNumberDataNode capacity */\nint AKA_INSTANCE___LRUCache_capacity=22790677;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution146.cpp\\\\LRUCache\\\\LRUCache(int)|ROOT\\\\solution146.cpp\\\\GLOBAL\\\\AKA_INSTANCE___LRUCache\\\\AKA_INSTANCE___LRUCache\\\\LRUCache(int)\");AKA_fCall++;AKA_INSTANCE___LRUCache = new ::LRUCache(AKA_INSTANCE___LRUCache_capacity);\n/* NormalNumberDataNode size */\n/* size : null value -> no code */\n/* PointerStructureDataNode head */\nAKA_INSTANCE___LRUCache->head;\n/* PointerStructureDataNode tail */\nAKA_INSTANCE___LRUCache->tail;\n/* MapDataNode mp */\n\n\nstd::vector<CacheNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode CacheNode(int,int) */\n/* NormalNumberDataNode k */\nint node0_k=875879775;\n/* NormalNumberDataNode v */\nint node0_v=-1828492322;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution146.cpp\\\\CacheNode\\\\CacheNode(int,int)|ROOT\\\\solution146.cpp\\\\remove(CacheNode*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\CacheNode(int,int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::CacheNode(node0_k,node0_v);\n/* NormalNumberDataNode key */\n/* key : null value -> no code */\n/* NormalNumberDataNode value */\n/* value : null value -> no code */\n/* PointerStructureDataNode pre */\n(*AKA_VECTOR_INIT_node_0).pre;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_0).next;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode CacheNode(int,int) */\n/* NormalNumberDataNode k */\nint node1_k=-1972609906;\n/* NormalNumberDataNode v */\nint node1_v=140422444;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution146.cpp\\\\CacheNode\\\\CacheNode(int,int)|ROOT\\\\solution146.cpp\\\\remove(CacheNode*)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\CacheNode(int,int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::CacheNode(node1_k,node1_v);\n/* NormalNumberDataNode key */\n/* key : null value -> no code */\n/* NormalNumberDataNode value */\n/* value : null value -> no code */\n/* PointerStructureDataNode pre */\n(*AKA_VECTOR_INIT_node_1).pre;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_1).next;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode CacheNode(int,int) */\n/* NormalNumberDataNode k */\nint node2_k=0;\n/* NormalNumberDataNode v */\nint node2_v=0;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution146.cpp\\\\CacheNode\\\\CacheNode(int,int)|ROOT\\\\solution146.cpp\\\\remove(CacheNode*)\\\\node\\\\AKA_VECTOR_INIT_node_2\\\\node\\\\CacheNode(int,int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_2 = new ::CacheNode(node2_k,node2_v);\n/* NormalNumberDataNode key */\n/* key : null value -> no code */\n/* NormalNumberDataNode value */\n/* value : null value -> no code */\n/* PointerStructureDataNode pre */\n(*AKA_VECTOR_INIT_node_2).pre;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_2).next;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_2);\n\nCacheNode* node = AKA_VECTOR_INIT_node[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n\n",
          "\n\n/* SubClassDataNode AKA_INSTANCE___LRUCache */\n/* ConstructorDataNode LRUCache(int) */\n/* NormalNumberDataNode capacity */\nint AKA_INSTANCE___LRUCache_capacity=-955664313;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution146.cpp\\\\LRUCache\\\\LRUCache(int)|ROOT\\\\solution146.cpp\\\\GLOBAL\\\\AKA_INSTANCE___LRUCache\\\\AKA_INSTANCE___LRUCache\\\\LRUCache(int)\");AKA_fCall++;AKA_INSTANCE___LRUCache = new ::LRUCache(AKA_INSTANCE___LRUCache_capacity);\n/* NormalNumberDataNode size */\n/* size : null value -> no code */\n/* PointerStructureDataNode head */\nAKA_INSTANCE___LRUCache->head;\n/* PointerStructureDataNode tail */\nAKA_INSTANCE___LRUCache->tail;\n/* MapDataNode mp */\n\n\nstd::vector<CacheNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode CacheNode(int,int) */\n/* NormalNumberDataNode k */\nint node0_k=927145039;\n/* NormalNumberDataNode v */\nint node0_v=628142865;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution146.cpp\\\\CacheNode\\\\CacheNode(int,int)|ROOT\\\\solution146.cpp\\\\remove(CacheNode*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\CacheNode(int,int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::CacheNode(node0_k,node0_v);\n/* NormalNumberDataNode key */\n/* key : null value -> no code */\n/* NormalNumberDataNode value */\n/* value : null value -> no code */\n/* PointerStructureDataNode pre */\n(*AKA_VECTOR_INIT_node_0).pre;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_0).next;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode CacheNode(int,int) */\n/* NormalNumberDataNode k */\nint node1_k=-934194895;\n/* NormalNumberDataNode v */\nint node1_v=-474471147;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution146.cpp\\\\CacheNode\\\\CacheNode(int,int)|ROOT\\\\solution146.cpp\\\\remove(CacheNode*)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\CacheNode(int,int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::CacheNode(node1_k,node1_v);\n/* NormalNumberDataNode key */\n/* key : null value -> no code */\n/* NormalNumberDataNode value */\n/* value : null value -> no code */\n/* PointerStructureDataNode pre */\n(*AKA_VECTOR_INIT_node_1).pre;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_1).next;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\nCacheNode* node = AKA_VECTOR_INIT_node[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n\n"
        ],
        "isAutomated": true
      }
    ]
  },
  {
    "fm": "void setHead(CacheNode *node)\r   {\r     node -> next = head;\r     node -> pre = NULL;\r \r     if (head != NULL)\r     {\r       head -> pre = node;\r     }\r     head = node;\r     if (tail == NULL)\r     {\r       tail = head;\r     }\r   }",
    "f": [
      "int size;",
      "CacheNode *head;",
      "CacheNode *tail;",
      "map<int, CacheNode *> mp;"
    ],
    "path_fm": "D:\\py\\test\\folder_18\\solution146.cpp\\LRUCache\\setHead(CacheNode*)",
    "c": [
      "LRUCache(int capacity)\r\n  {\r\n    size = capacity;\r\n    head = NULL;\r\n    tail = NULL;\r\n  }"
    ],
    "fc": "class LRUCache{\r private:\r   int size;                     // Maximum of cachelist size.\r   CacheNode *head, *tail;\r   map<int, CacheNode *> mp;          // Use hashmap to store\r public:\r   LRUCache(int capacity)\r   {\r     size = capacity;\r     head = NULL;\r     tail = NULL;\r   }\r \r   int get(int key)\r   {\r     map<int, CacheNode *>::iterator it = mp.find(key);\r     if (it != mp.end())\r     {\r       CacheNode *node = it -> second;\r       remove(node);\r       setHead(node);\r       return node -> value;\r     }\r     else\r     {\r       return -1;\r     }\r   }\r \r   void set(int key, int value)\r   {\r     map<int, CacheNode *>::iterator it = mp.find(key);\r     if (it != mp.end())\r     {\r       CacheNode *node = it -> second;\r       node -> value = value;\r       remove(node);\r       setHead(node);\r     }\r     else\r     {\r       CacheNode *newNode = new CacheNode(key, value);\r       if (mp.size() >= size)\r       {\r \tmap<int, CacheNode *>::iterator iter = mp.find(tail -> key);\r       \tremove(tail);\r \tmp.erase(iter);\r       }\r       setHead(newNode);\r       mp[key] = newNode;\r     }\r   }\r \r   void remove(CacheNode *node)\r   {\r     if (node -> pre != NULL)\r     {\r       node -> pre -> next = node -> next;\r     }\r     else\r     {\r       head = node -> next;\r     }\r     if (node -> next != NULL)\r     {\r       node -> next -> pre = node -> pre;\r     }\r     else\r     {\r       tail = node -> pre;\r     }\r   }\r \r   void setHead(CacheNode *node)\r   {\r     node -> next = head;\r     node -> pre = NULL;\r \r     if (head != NULL)\r     {\r       head -> pre = node;\r     }\r     head = node;\r     if (tail == NULL)\r     {\r       tail = head;\r     }\r   }\r };",
    "m": [
      "int get(int key)\r\n  {\r\n    map<int, CacheNode *>::iterator it = mp.find(key);\r\n    if (it != mp.end())\r\n    {\r\n      CacheNode *node = it -> second;\r\n      remove(node);\r\n      setHead(node);\r\n      return node -> value;\r\n    }\r\n    else\r\n    {\r\n      return -1;\r\n    }\r\n  }",
      "void set(int key, int value)\r\n  {\r\n    map<int, CacheNode *>::iterator it = mp.find(key);\r\n    if (it != mp.end())\r\n    {\r\n      CacheNode *node = it -> second;\r\n      node -> value = value;\r\n      remove(node);\r\n      setHead(node);\r\n    }\r\n    else\r\n    {\r\n      CacheNode *newNode = new CacheNode(key, value);\r\n      if (mp.size() >= size)\r\n      {\r\n\tmap<int, CacheNode *>::iterator iter = mp.find(tail -> key);\r\n      \tremove(tail);\r\n\tmp.erase(iter);\r\n      }\r\n      setHead(newNode);\r\n      mp[key] = newNode;\r\n    }\r\n  }"
    ],
    "datatest": [
      {
        "id": 0,
        "dt": {},
        "td": [
          "void AKA_TEST_LRUCache_setHead_CacheNodemul_random_4(void) {\n{\nAKA_test_case_name=\"LRUCache_setHead_CacheNodemul_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___LRUCache */\n/* ConstructorDataNode LRUCache(int) */\n/* NormalNumberDataNode capacity */\nint AKA_INSTANCE___LRUCache_capacity=-1820391646;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution146.cpp\\\\LRUCache\\\\LRUCache(int)|ROOT\\\\solution146.cpp\\\\GLOBAL\\\\AKA_INSTANCE___LRUCache\\\\AKA_INSTANCE___LRUCache\\\\LRUCache(int)\");AKA_fCall++;AKA_INSTANCE___LRUCache = new ::LRUCache(AKA_INSTANCE___LRUCache_capacity);\n/* NormalNumberDataNode size */\n/* size : null value -> no code */\n/* PointerStructureDataNode head */\nAKA_INSTANCE___LRUCache->head;\n/* PointerStructureDataNode tail */\nAKA_INSTANCE___LRUCache->tail;\n/* MapDataNode mp */\n\n\nCacheNode* node;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test LRUCache_setHead_CacheNodemul_random_4\");AKA_INSTANCE___LRUCache->setHead(node);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_18\\\\solution146.cpp\\\\LRUCache\\\\setHead(CacheNode*)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n",
          "void AKA_TEST_LRUCache_setHead_CacheNodemul_random_5(void) {\n{\nAKA_test_case_name=\"LRUCache_setHead_CacheNodemul_random_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___LRUCache */\n/* ConstructorDataNode LRUCache(int) */\n/* NormalNumberDataNode capacity */\nint AKA_INSTANCE___LRUCache_capacity=1047485203;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution146.cpp\\\\LRUCache\\\\LRUCache(int)|ROOT\\\\solution146.cpp\\\\GLOBAL\\\\AKA_INSTANCE___LRUCache\\\\AKA_INSTANCE___LRUCache\\\\LRUCache(int)\");AKA_fCall++;AKA_INSTANCE___LRUCache = new ::LRUCache(AKA_INSTANCE___LRUCache_capacity);\n/* NormalNumberDataNode size */\n/* size : null value -> no code */\n/* PointerStructureDataNode head */\nAKA_INSTANCE___LRUCache->head;\n/* PointerStructureDataNode tail */\nAKA_INSTANCE___LRUCache->tail;\n/* MapDataNode mp */\n\n\nCacheNode* node;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test LRUCache_setHead_CacheNodemul_random_5\");AKA_INSTANCE___LRUCache->setHead(node);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_18\\\\solution146.cpp\\\\LRUCache\\\\setHead(CacheNode*)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n"
        ],
        "simplified_t": [
          "\n\n/* SubClassDataNode AKA_INSTANCE___LRUCache */\n/* ConstructorDataNode LRUCache(int) */\n/* NormalNumberDataNode capacity */\nint AKA_INSTANCE___LRUCache_capacity=-1820391646;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution146.cpp\\\\LRUCache\\\\LRUCache(int)|ROOT\\\\solution146.cpp\\\\GLOBAL\\\\AKA_INSTANCE___LRUCache\\\\AKA_INSTANCE___LRUCache\\\\LRUCache(int)\");AKA_fCall++;AKA_INSTANCE___LRUCache = new ::LRUCache(AKA_INSTANCE___LRUCache_capacity);\n/* NormalNumberDataNode size */\n/* size : null value -> no code */\n/* PointerStructureDataNode head */\nAKA_INSTANCE___LRUCache->head;\n/* PointerStructureDataNode tail */\nAKA_INSTANCE___LRUCache->tail;\n/* MapDataNode mp */\n\n\nCacheNode* node;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n\n",
          "\n\n/* SubClassDataNode AKA_INSTANCE___LRUCache */\n/* ConstructorDataNode LRUCache(int) */\n/* NormalNumberDataNode capacity */\nint AKA_INSTANCE___LRUCache_capacity=1047485203;\nAKA_mark(\"Calling: .\\\\folder_18\\\\solution146.cpp\\\\LRUCache\\\\LRUCache(int)|ROOT\\\\solution146.cpp\\\\GLOBAL\\\\AKA_INSTANCE___LRUCache\\\\AKA_INSTANCE___LRUCache\\\\LRUCache(int)\");AKA_fCall++;AKA_INSTANCE___LRUCache = new ::LRUCache(AKA_INSTANCE___LRUCache_capacity);\n/* NormalNumberDataNode size */\n/* size : null value -> no code */\n/* PointerStructureDataNode head */\nAKA_INSTANCE___LRUCache->head;\n/* PointerStructureDataNode tail */\nAKA_INSTANCE___LRUCache->tail;\n/* MapDataNode mp */\n\n\nCacheNode* node;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n\n"
        ],
        "isAutomated": true
      }
    ]
  }
]