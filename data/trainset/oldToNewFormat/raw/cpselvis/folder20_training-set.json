[
  {
    "fm": "ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {\r \r     ListNode *p = headA;\r     ListNode *q = headB;\r \r     bool flag1 = true;\r     bool flag2 = true;\r     \r     while (headA != NULL && headB != NULL)\r     {\r       if (headA == headB)\r       {\r \treturn headA;\r       }\r       headA = headA -> next;\r       headB = headB -> next;\r \r       if (headA == NULL && flag1)\r       {\r \theadA = q;\r \tflag1 = false;\r       }\r       if (headB == NULL && flag2)\r       {\r \theadB = p;\r \tflag2 = false;\r       }\r       cout << \"headA:\" << headA -> val << endl;\r       cout << \"headB:\" << headB -> val << endl;\r     }\r \r     return NULL;\r   }",
    "f": [],
    "path_fm": "D:\\py\\test\\folder_20\\solution160.cpp\\Solution\\getIntersectionNode(ListNode*,ListNode*)",
    "c": [
      ""
    ],
    "fc": "class Solution {\r public:\r   ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {\r \r     ListNode *p = headA;\r     ListNode *q = headB;\r \r     bool flag1 = true;\r     bool flag2 = true;\r     \r     while (headA != NULL && headB != NULL)\r     {\r       if (headA == headB)\r       {\r \treturn headA;\r       }\r       headA = headA -> next;\r       headB = headB -> next;\r \r       if (headA == NULL && flag1)\r       {\r \theadA = q;\r \tflag1 = false;\r       }\r       if (headB == NULL && flag2)\r       {\r \theadB = p;\r \tflag2 = false;\r       }\r       cout << \"headA:\" << headA -> val << endl;\r       cout << \"headB:\" << headB -> val << endl;\r     }\r \r     return NULL;\r   }\r };",
    "m": [],
    "datatest": [
      {
        "id": 0,
        "dt": {},
        "td": [
          "void AKA_TEST_Solution_getIntersectionNode_ListNodemul_ListNodemul_random_4(void) {\n{\nAKA_test_case_name=\"Solution_getIntersectionNode_ListNodemul_ListNodemul_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution160.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_headA;\n\n\n/* SubStructDataNode headA */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint headA0_x=-1585910975;\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution160.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution160.cpp\\\\getIntersectionNode(ListNode*,ListNode*)\\\\headA\\\\AKA_VECTOR_INIT_headA_0\\\\headA\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_headA_0 = new ::ListNode(headA0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_headA_0).val=-1669442472;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_headA_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint headA0_next0_x=-1118633513;\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution160.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution160.cpp\\\\getIntersectionNode(ListNode*,ListNode*)\\\\headA\\\\AKA_VECTOR_INIT_headA_0\\\\headA\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_headA_0_DOT_next_0 = new ::ListNode(headA0_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_headA_0_DOT_next_0).val=-1252676984;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_headA_0_DOT_next_0).next;\nAKA_VECTOR_INIT_headA_0_DOT_next.push_back(AKA_VECTOR_INIT_headA_0_DOT_next_0);\n(*AKA_VECTOR_INIT_headA_0).next = AKA_VECTOR_INIT_headA_0_DOT_next[0];\n\nAKA_VECTOR_INIT_headA.push_back(AKA_VECTOR_INIT_headA_0);\n\n\n/* SubStructDataNode headA */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint headA1_x=78972570;\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution160.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution160.cpp\\\\getIntersectionNode(ListNode*,ListNode*)\\\\headA\\\\AKA_VECTOR_INIT_headA_1\\\\headA\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_headA_1 = new ::ListNode(headA1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_headA_1).val=1768937001;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_headA_1_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint headA1_next0_x=-1100516976;\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution160.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution160.cpp\\\\getIntersectionNode(ListNode*,ListNode*)\\\\headA\\\\AKA_VECTOR_INIT_headA_1\\\\headA\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_headA_1_DOT_next_0 = new ::ListNode(headA1_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_headA_1_DOT_next_0).val=652253366;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_headA_1_DOT_next_0).next;\nAKA_VECTOR_INIT_headA_1_DOT_next.push_back(AKA_VECTOR_INIT_headA_1_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint headA1_next1_x=-1968024872;\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution160.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution160.cpp\\\\getIntersectionNode(ListNode*,ListNode*)\\\\headA\\\\AKA_VECTOR_INIT_headA_1\\\\headA\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_headA_1_DOT_next_1 = new ::ListNode(headA1_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_headA_1_DOT_next_1).val=2060653046;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_headA_1_DOT_next_1).next;\nAKA_VECTOR_INIT_headA_1_DOT_next.push_back(AKA_VECTOR_INIT_headA_1_DOT_next_1);\n(*AKA_VECTOR_INIT_headA_1).next = AKA_VECTOR_INIT_headA_1_DOT_next[0];\n\nAKA_VECTOR_INIT_headA.push_back(AKA_VECTOR_INIT_headA_1);\n\n\n/* SubStructDataNode headA */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint headA2_x=719556565;\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution160.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution160.cpp\\\\getIntersectionNode(ListNode*,ListNode*)\\\\headA\\\\AKA_VECTOR_INIT_headA_2\\\\headA\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_headA_2 = new ::ListNode(headA2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_headA_2).val=-142501210;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_headA_2_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint headA2_next0_x=1376382967;\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution160.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution160.cpp\\\\getIntersectionNode(ListNode*,ListNode*)\\\\headA\\\\AKA_VECTOR_INIT_headA_2\\\\headA\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_headA_2_DOT_next_0 = new ::ListNode(headA2_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_headA_2_DOT_next_0).val=379677480;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_headA_2_DOT_next_0).next;\nAKA_VECTOR_INIT_headA_2_DOT_next.push_back(AKA_VECTOR_INIT_headA_2_DOT_next_0);\n(*AKA_VECTOR_INIT_headA_2).next = AKA_VECTOR_INIT_headA_2_DOT_next[0];\n\nAKA_VECTOR_INIT_headA.push_back(AKA_VECTOR_INIT_headA_2);\n\nListNode* headA = AKA_VECTOR_INIT_headA[0];\nstd::vector<ListNode*> AKA_VECTOR_INIT_headB;\n\n\n/* SubStructDataNode headB */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint headB0_x=-5261989;\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution160.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution160.cpp\\\\getIntersectionNode(ListNode*,ListNode*)\\\\headB\\\\AKA_VECTOR_INIT_headB_0\\\\headB\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_headB_0 = new ::ListNode(headB0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_headB_0).val=-1675583875;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_headB_0).next;\n\nAKA_VECTOR_INIT_headB.push_back(AKA_VECTOR_INIT_headB_0);\n\nListNode* headB = AKA_VECTOR_INIT_headB[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode headA */\n/* PointerStructureDataNode headB */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_getIntersectionNode_ListNodemul_ListNodemul_random_4\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->getIntersectionNode(headA,headB);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_20\\\\solution160.cpp\\\\Solution\\\\getIntersectionNode(ListNode*,ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n"
        ],
        "simplified_t": [
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution160.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_headA;\n\n\n/* SubStructDataNode headA */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint headA0_x=-1585910975;\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution160.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution160.cpp\\\\getIntersectionNode(ListNode*,ListNode*)\\\\headA\\\\AKA_VECTOR_INIT_headA_0\\\\headA\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_headA_0 = new ::ListNode(headA0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_headA_0).val=-1669442472;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_headA_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint headA0_next0_x=-1118633513;\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution160.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution160.cpp\\\\getIntersectionNode(ListNode*,ListNode*)\\\\headA\\\\AKA_VECTOR_INIT_headA_0\\\\headA\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_headA_0_DOT_next_0 = new ::ListNode(headA0_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_headA_0_DOT_next_0).val=-1252676984;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_headA_0_DOT_next_0).next;\nAKA_VECTOR_INIT_headA_0_DOT_next.push_back(AKA_VECTOR_INIT_headA_0_DOT_next_0);\n(*AKA_VECTOR_INIT_headA_0).next = AKA_VECTOR_INIT_headA_0_DOT_next[0];\n\nAKA_VECTOR_INIT_headA.push_back(AKA_VECTOR_INIT_headA_0);\n\n\n/* SubStructDataNode headA */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint headA1_x=78972570;\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution160.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution160.cpp\\\\getIntersectionNode(ListNode*,ListNode*)\\\\headA\\\\AKA_VECTOR_INIT_headA_1\\\\headA\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_headA_1 = new ::ListNode(headA1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_headA_1).val=1768937001;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_headA_1_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint headA1_next0_x=-1100516976;\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution160.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution160.cpp\\\\getIntersectionNode(ListNode*,ListNode*)\\\\headA\\\\AKA_VECTOR_INIT_headA_1\\\\headA\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_headA_1_DOT_next_0 = new ::ListNode(headA1_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_headA_1_DOT_next_0).val=652253366;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_headA_1_DOT_next_0).next;\nAKA_VECTOR_INIT_headA_1_DOT_next.push_back(AKA_VECTOR_INIT_headA_1_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint headA1_next1_x=-1968024872;\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution160.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution160.cpp\\\\getIntersectionNode(ListNode*,ListNode*)\\\\headA\\\\AKA_VECTOR_INIT_headA_1\\\\headA\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_headA_1_DOT_next_1 = new ::ListNode(headA1_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_headA_1_DOT_next_1).val=2060653046;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_headA_1_DOT_next_1).next;\nAKA_VECTOR_INIT_headA_1_DOT_next.push_back(AKA_VECTOR_INIT_headA_1_DOT_next_1);\n(*AKA_VECTOR_INIT_headA_1).next = AKA_VECTOR_INIT_headA_1_DOT_next[0];\n\nAKA_VECTOR_INIT_headA.push_back(AKA_VECTOR_INIT_headA_1);\n\n\n/* SubStructDataNode headA */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint headA2_x=719556565;\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution160.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution160.cpp\\\\getIntersectionNode(ListNode*,ListNode*)\\\\headA\\\\AKA_VECTOR_INIT_headA_2\\\\headA\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_headA_2 = new ::ListNode(headA2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_headA_2).val=-142501210;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_headA_2_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint headA2_next0_x=1376382967;\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution160.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution160.cpp\\\\getIntersectionNode(ListNode*,ListNode*)\\\\headA\\\\AKA_VECTOR_INIT_headA_2\\\\headA\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_headA_2_DOT_next_0 = new ::ListNode(headA2_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_headA_2_DOT_next_0).val=379677480;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_headA_2_DOT_next_0).next;\nAKA_VECTOR_INIT_headA_2_DOT_next.push_back(AKA_VECTOR_INIT_headA_2_DOT_next_0);\n(*AKA_VECTOR_INIT_headA_2).next = AKA_VECTOR_INIT_headA_2_DOT_next[0];\n\nAKA_VECTOR_INIT_headA.push_back(AKA_VECTOR_INIT_headA_2);\n\nListNode* headA = AKA_VECTOR_INIT_headA[0];\nstd::vector<ListNode*> AKA_VECTOR_INIT_headB;\n\n\n/* SubStructDataNode headB */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint headB0_x=-5261989;\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution160.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution160.cpp\\\\getIntersectionNode(ListNode*,ListNode*)\\\\headB\\\\AKA_VECTOR_INIT_headB_0\\\\headB\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_headB_0 = new ::ListNode(headB0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_headB_0).val=-1675583875;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_headB_0).next;\n\nAKA_VECTOR_INIT_headB.push_back(AKA_VECTOR_INIT_headB_0);\n\nListNode* headB = AKA_VECTOR_INIT_headB[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode headA */\n/* PointerStructureDataNode headB */\n/* PointerStructureDataNode RETURN */\n\n"
        ],
        "isAutomated": true
      }
    ]
  },
  {
    "fm": "int findPeakElement(vector<int>& nums) {\r     if (nums.size() <= 1) return 0;\r     \r     int l = 0, r = nums.size() -1;\r \r     while (l < r)\r     {\r       int mid = (l + r) >> 1;\r \r       if (nums[mid] > nums[mid + 1])\r       {\r \tr = mid;\r       }\r       else if (nums[mid] < nums[mid + 1])\r       {\r \tl = mid + 1;\r       }\r     }\r     return l;\r   }",
    "f": [],
    "path_fm": "D:\\py\\test\\folder_20\\solution162.cpp\\Solution\\findPeakElement(vector<int>&)",
    "c": [
      ""
    ],
    "fc": "class Solution {\r public:\r   int findPeakElement(vector<int>& nums) {\r     if (nums.size() <= 1) return 0;\r     \r     int l = 0, r = nums.size() -1;\r \r     while (l < r)\r     {\r       int mid = (l + r) >> 1;\r \r       if (nums[mid] > nums[mid + 1])\r       {\r \tr = mid;\r       }\r       else if (nums[mid] < nums[mid + 1])\r       {\r \tl = mid + 1;\r       }\r     }\r     return l;\r   }\r };",
    "m": [],
    "datatest": [
      {
        "id": 0,
        "dt": {},
        "td": [
          "void AKA_TEST_Solution_findPeakElement_vector_int_random_10(void) {\n{\nAKA_test_case_name=\"Solution_findPeakElement_vector_int_random_10\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution162.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=1871223044;\nnums.push_back(nums_element0);\nint nums_element1=490172130;\nnums.push_back(nums_element1);\nint nums_element2=-2068889573;\nnums.push_back(nums_element2);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findPeakElement_vector_int_random_10\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findPeakElement(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_20\\\\solution162.cpp\\\\Solution\\\\findPeakElement(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
          "void AKA_TEST_Solution_findPeakElement_vector_int_random_7(void) {\n{\nAKA_test_case_name=\"Solution_findPeakElement_vector_int_random_7\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution162.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-83997193;\nnums.push_back(nums_element0);\nint nums_element1=1159652454;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findPeakElement_vector_int_random_7\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findPeakElement(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_20\\\\solution162.cpp\\\\Solution\\\\findPeakElement(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
          "void AKA_TEST_Solution_findPeakElement_vector_int_random_9(void) {\n{\nAKA_test_case_name=\"Solution_findPeakElement_vector_int_random_9\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution162.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-2082020038;\nnums.push_back(nums_element0);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findPeakElement_vector_int_random_9\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findPeakElement(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_20\\\\solution162.cpp\\\\Solution\\\\findPeakElement(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n"
        ],
        "simplified_t": [
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution162.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=1871223044;\nnums.push_back(nums_element0);\nint nums_element1=490172130;\nnums.push_back(nums_element1);\nint nums_element2=-2068889573;\nnums.push_back(nums_element2);\n/* NormalNumberDataNode RETURN */\n\n",
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution162.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-83997193;\nnums.push_back(nums_element0);\nint nums_element1=1159652454;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode RETURN */\n\n",
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution162.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-2082020038;\nnums.push_back(nums_element0);\n/* NormalNumberDataNode RETURN */\n\n"
        ],
        "isAutomated": true
      }
    ]
  },
  {
    "fm": "vector<int> twoSum(vector<int>& numbers, int target) {\r     int i = 0, j = numbers.size() - 1;\r     vector<int> ret;\r     \r     while (i < j)\r     {\r       int sum = numbers[i] + numbers[j];\r       if (sum == target)\r       {\r \tret.push_back(i + 1);\r \tret.push_back(j + 1);\r \tbreak;\r       }\r       else if (sum < target)\r       {\r \ti ++;\r       }\r       else\r       {\r \tj --;\r       }\r     }\r     return ret;\r   }",
    "f": [],
    "path_fm": "D:\\py\\test\\folder_20\\solution167.cpp\\Solution\\twoSum(vector<int>&,int)",
    "c": [
      ""
    ],
    "fc": "class Solution {\r public:\r   vector<int> twoSum(vector<int>& numbers, int target) {\r     int i = 0, j = numbers.size() - 1;\r     vector<int> ret;\r     \r     while (i < j)\r     {\r       int sum = numbers[i] + numbers[j];\r       if (sum == target)\r       {\r \tret.push_back(i + 1);\r \tret.push_back(j + 1);\r \tbreak;\r       }\r       else if (sum < target)\r       {\r \ti ++;\r       }\r       else\r       {\r \tj --;\r       }\r     }\r     return ret;\r   }\r };",
    "m": [],
    "datatest": [
      {
        "id": 0,
        "dt": {},
        "td": [
          "void AKA_TEST_Solution_twoSum_vector_int_int_random_10(void) {\n{\nAKA_test_case_name=\"Solution_twoSum_vector_int_int_random_10\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution167.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> numbers;\n\n\nint target=-713229301;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode numbers */\nint numbers_element0=1100793460;\nnumbers.push_back(numbers_element0);\nint numbers_element1=-1041128772;\nnumbers.push_back(numbers_element1);\n/* NormalNumberDataNode target */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_twoSum_vector_int_int_random_10\");vector<int> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->twoSum(numbers,target);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_20\\\\solution167.cpp\\\\Solution\\\\twoSum(vector<int>&,int)\");\n\n\nvector<int> EXPECTED_numbers;\n\n\n\n// tear down\n;\n}\n}\n"
        ],
        "simplified_t": [
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution167.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> numbers;\n\n\nint target=-713229301;\nvector<int> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode numbers */\nint numbers_element0=1100793460;\nnumbers.push_back(numbers_element0);\nint numbers_element1=-1041128772;\nnumbers.push_back(numbers_element1);\n/* NormalNumberDataNode target */\n/* VectorDataNode RETURN */\n\n"
        ],
        "isAutomated": true
      }
    ]
  },
  {
    "fm": "int majorityElement(vector<int>& nums) {\r     unordered_map<int, int> umap;\r \r     for (int i = 0; i < nums.size(); i ++)\r     {\r       umap[nums[i]] ++;\r       if (umap[nums[i]] > nums.size() / 2)\r       {\r \treturn nums[i];\r       }\r     }\r     return -1;\r   }",
    "f": [],
    "path_fm": "D:\\py\\test\\folder_20\\solution169.cpp\\Solution\\majorityElement(vector<int>&)",
    "c": [
      ""
    ],
    "fc": "class Solution {\r public:\r   int majorityElement(vector<int>& nums) {\r     unordered_map<int, int> umap;\r \r     for (int i = 0; i < nums.size(); i ++)\r     {\r       umap[nums[i]] ++;\r       if (umap[nums[i]] > nums.size() / 2)\r       {\r \treturn nums[i];\r       }\r     }\r     return -1;\r   }\r };",
    "m": [],
    "datatest": [
      {
        "id": 0,
        "dt": {},
        "td": [
          "void AKA_TEST_Solution_majorityElement_vector_int_random_5(void) {\n{\nAKA_test_case_name=\"Solution_majorityElement_vector_int_random_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution169.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-439775267;\nnums.push_back(nums_element0);\nint nums_element1=1616795667;\nnums.push_back(nums_element1);\nint nums_element2=1190024298;\nnums.push_back(nums_element2);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_majorityElement_vector_int_random_5\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->majorityElement(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_20\\\\solution169.cpp\\\\Solution\\\\majorityElement(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n",
          "void AKA_TEST_Solution_majorityElement_vector_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_majorityElement_vector_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution169.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-106760870;\nnums.push_back(nums_element0);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_majorityElement_vector_int_random_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->majorityElement(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_20\\\\solution169.cpp\\\\Solution\\\\majorityElement(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n"
        ],
        "simplified_t": [
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution169.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-439775267;\nnums.push_back(nums_element0);\nint nums_element1=1616795667;\nnums.push_back(nums_element1);\nint nums_element2=1190024298;\nnums.push_back(nums_element2);\n/* NormalNumberDataNode RETURN */\n\n",
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution169.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-106760870;\nnums.push_back(nums_element0);\n/* NormalNumberDataNode RETURN */\n\n"
        ],
        "isAutomated": true
      }
    ]
  },
  {
    "fm": "bool hasNext() {\r     return !st.empty();\r   }",
    "f": [
      "stack<TreeNode *> st;"
    ],
    "path_fm": "D:\\py\\test\\folder_20\\solution173.cpp\\BSTIterator\\hasNext()",
    "c": [
      "BSTIterator(TreeNode *root) {\r\n    while (root != NULL)\r\n    {\r\n      st.push(root);\r\n      root = root -> left;\r\n    }\r\n  }"
    ],
    "fc": "class BSTIterator {\r private:\r   stack<TreeNode *> st;\r public:\r   BSTIterator(TreeNode *root) {\r     while (root != NULL)\r     {\r       st.push(root);\r       root = root -> left;\r     }\r   }\r \r   /** @return whether we have a next smallest number */\r   bool hasNext() {\r     return !st.empty();\r   }\r \r   /** @return the next smallest number */\r   int next() {\r     TreeNode *node = st.top();\r     st.pop();\r     int ret = node -> val;\r     if (node -> right != NULL)\r     {\r       node = node -> right;\r       while (node != NULL)\r       {\r \tst.push(node);\r \tnode = node -> left;\r       }\r     }\r     return ret;\r   }\r };",
    "m": [],
    "datatest": [
      {
        "id": 0,
        "dt": {},
        "td": [
          "void AKA_TEST_BSTIterator_hasNext_random_1(void) {\n{\nAKA_test_case_name=\"BSTIterator_hasNext_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___BSTIterator */\n/* ConstructorDataNode BSTIterator(TreeNode*) */\n/* PointerStructureDataNode root */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root;\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___BSTIterator_root0_x=-530277010;\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution173.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution173.cpp\\\\GLOBAL\\\\AKA_INSTANCE___BSTIterator\\\\AKA_INSTANCE___BSTIterator\\\\BSTIterator(TreeNode*)\\\\root\\\\root[0]\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_0 = new ::TreeNode(AKA_INSTANCE___BSTIterator_root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_0).right;\nAKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root.push_back(AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_0);\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___BSTIterator_root1_x=0;\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution173.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution173.cpp\\\\GLOBAL\\\\AKA_INSTANCE___BSTIterator\\\\AKA_INSTANCE___BSTIterator\\\\BSTIterator(TreeNode*)\\\\root\\\\root[1]\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_1 = new ::TreeNode(AKA_INSTANCE___BSTIterator_root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_1).right;\nAKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root.push_back(AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_1);\nTreeNode* AKA_INSTANCE___BSTIterator_root = AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root[0];\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution173.cpp\\\\BSTIterator\\\\BSTIterator(TreeNode*)|ROOT\\\\solution173.cpp\\\\GLOBAL\\\\AKA_INSTANCE___BSTIterator\\\\AKA_INSTANCE___BSTIterator\\\\BSTIterator(TreeNode*)\");AKA_fCall++;AKA_INSTANCE___BSTIterator = new ::BSTIterator(AKA_INSTANCE___BSTIterator_root);\n/* StackDataNode st */\n\n\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test BSTIterator_hasNext_random_1\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___BSTIterator->hasNext();\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_20\\\\solution173.cpp\\\\BSTIterator\\\\hasNext()\");\n\n\n\n\n// tear down\n;\n}\n}\n"
        ],
        "simplified_t": [
          "\n\n/* SubClassDataNode AKA_INSTANCE___BSTIterator */\n/* ConstructorDataNode BSTIterator(TreeNode*) */\n/* PointerStructureDataNode root */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root;\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___BSTIterator_root0_x=-530277010;\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution173.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution173.cpp\\\\GLOBAL\\\\AKA_INSTANCE___BSTIterator\\\\AKA_INSTANCE___BSTIterator\\\\BSTIterator(TreeNode*)\\\\root\\\\root[0]\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_0 = new ::TreeNode(AKA_INSTANCE___BSTIterator_root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_0).right;\nAKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root.push_back(AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_0);\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___BSTIterator_root1_x=0;\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution173.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution173.cpp\\\\GLOBAL\\\\AKA_INSTANCE___BSTIterator\\\\AKA_INSTANCE___BSTIterator\\\\BSTIterator(TreeNode*)\\\\root\\\\root[1]\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_1 = new ::TreeNode(AKA_INSTANCE___BSTIterator_root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_1).right;\nAKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root.push_back(AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_1);\nTreeNode* AKA_INSTANCE___BSTIterator_root = AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root[0];\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution173.cpp\\\\BSTIterator\\\\BSTIterator(TreeNode*)|ROOT\\\\solution173.cpp\\\\GLOBAL\\\\AKA_INSTANCE___BSTIterator\\\\AKA_INSTANCE___BSTIterator\\\\BSTIterator(TreeNode*)\");AKA_fCall++;AKA_INSTANCE___BSTIterator = new ::BSTIterator(AKA_INSTANCE___BSTIterator_root);\n/* StackDataNode st */\n\n\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode RETURN */\n\n"
        ],
        "isAutomated": true
      }
    ]
  },
  {
    "fm": "int next() {\r     TreeNode *node = st.top();\r     st.pop();\r     int ret = node -> val;\r     if (node -> right != NULL)\r     {\r       node = node -> right;\r       while (node != NULL)\r       {\r \tst.push(node);\r \tnode = node -> left;\r       }\r     }\r     return ret;\r   }",
    "f": [
      "stack<TreeNode *> st;"
    ],
    "path_fm": "D:\\py\\test\\folder_20\\solution173.cpp\\BSTIterator\\next()",
    "c": [
      "BSTIterator(TreeNode *root) {\r\n    while (root != NULL)\r\n    {\r\n      st.push(root);\r\n      root = root -> left;\r\n    }\r\n  }"
    ],
    "fc": "class BSTIterator {\r private:\r   stack<TreeNode *> st;\r public:\r   BSTIterator(TreeNode *root) {\r     while (root != NULL)\r     {\r       st.push(root);\r       root = root -> left;\r     }\r   }\r \r   /** @return whether we have a next smallest number */\r   bool hasNext() {\r     return !st.empty();\r   }\r \r   /** @return the next smallest number */\r   int next() {\r     TreeNode *node = st.top();\r     st.pop();\r     int ret = node -> val;\r     if (node -> right != NULL)\r     {\r       node = node -> right;\r       while (node != NULL)\r       {\r \tst.push(node);\r \tnode = node -> left;\r       }\r     }\r     return ret;\r   }\r };",
    "m": [
      "int next() {\r\n    TreeNode *node = st.top();\r\n    st.pop();\r\n    int ret = node -> val;\r\n    if (node -> right != NULL)\r\n    {\r\n      node = node -> right;\r\n      while (node != NULL)\r\n      {\r\n\tst.push(node);\r\n\tnode = node -> left;\r\n      }\r\n    }\r\n    return ret;\r\n  }"
    ],
    "datatest": [
      {
        "id": 0,
        "dt": {},
        "td": [
          "void AKA_TEST_BSTIterator_next_random_3(void) {\n{\nAKA_test_case_name=\"BSTIterator_next_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___BSTIterator */\n/* ConstructorDataNode BSTIterator(TreeNode*) */\n/* PointerStructureDataNode root */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root;\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___BSTIterator_root0_x=-1742187578;\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution173.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution173.cpp\\\\GLOBAL\\\\AKA_INSTANCE___BSTIterator\\\\AKA_INSTANCE___BSTIterator\\\\BSTIterator(TreeNode*)\\\\root\\\\root[0]\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_0 = new ::TreeNode(AKA_INSTANCE___BSTIterator_root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_0).right;\nAKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root.push_back(AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_0);\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___BSTIterator_root1_x=0;\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution173.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution173.cpp\\\\GLOBAL\\\\AKA_INSTANCE___BSTIterator\\\\AKA_INSTANCE___BSTIterator\\\\BSTIterator(TreeNode*)\\\\root\\\\root[1]\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_1 = new ::TreeNode(AKA_INSTANCE___BSTIterator_root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_1).right;\nAKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root.push_back(AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_1);\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___BSTIterator_root2_x=0;\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution173.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution173.cpp\\\\GLOBAL\\\\AKA_INSTANCE___BSTIterator\\\\AKA_INSTANCE___BSTIterator\\\\BSTIterator(TreeNode*)\\\\root\\\\root[2]\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_2 = new ::TreeNode(AKA_INSTANCE___BSTIterator_root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_2).right;\nAKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root.push_back(AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_2);\nTreeNode* AKA_INSTANCE___BSTIterator_root = AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root[0];\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution173.cpp\\\\BSTIterator\\\\BSTIterator(TreeNode*)|ROOT\\\\solution173.cpp\\\\GLOBAL\\\\AKA_INSTANCE___BSTIterator\\\\AKA_INSTANCE___BSTIterator\\\\BSTIterator(TreeNode*)\");AKA_fCall++;AKA_INSTANCE___BSTIterator = new ::BSTIterator(AKA_INSTANCE___BSTIterator_root);\n/* StackDataNode st */\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test BSTIterator_next_random_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___BSTIterator->next();\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_20\\\\solution173.cpp\\\\BSTIterator\\\\next()\");\n\n\n\n\n// tear down\n;\n}\n}\n"
        ],
        "simplified_t": [
          "\n\n/* SubClassDataNode AKA_INSTANCE___BSTIterator */\n/* ConstructorDataNode BSTIterator(TreeNode*) */\n/* PointerStructureDataNode root */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root;\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___BSTIterator_root0_x=-1742187578;\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution173.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution173.cpp\\\\GLOBAL\\\\AKA_INSTANCE___BSTIterator\\\\AKA_INSTANCE___BSTIterator\\\\BSTIterator(TreeNode*)\\\\root\\\\root[0]\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_0 = new ::TreeNode(AKA_INSTANCE___BSTIterator_root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_0).right;\nAKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root.push_back(AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_0);\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___BSTIterator_root1_x=0;\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution173.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution173.cpp\\\\GLOBAL\\\\AKA_INSTANCE___BSTIterator\\\\AKA_INSTANCE___BSTIterator\\\\BSTIterator(TreeNode*)\\\\root\\\\root[1]\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_1 = new ::TreeNode(AKA_INSTANCE___BSTIterator_root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_1).right;\nAKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root.push_back(AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_1);\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint AKA_INSTANCE___BSTIterator_root2_x=0;\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution173.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution173.cpp\\\\GLOBAL\\\\AKA_INSTANCE___BSTIterator\\\\AKA_INSTANCE___BSTIterator\\\\BSTIterator(TreeNode*)\\\\root\\\\root[2]\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_2 = new ::TreeNode(AKA_INSTANCE___BSTIterator_root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_2).right;\nAKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root.push_back(AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root_2);\nTreeNode* AKA_INSTANCE___BSTIterator_root = AKA_VECTOR_INIT_AKA_INSTANCE___BSTIterator_root[0];\nAKA_mark(\"Calling: .\\\\folder_20\\\\solution173.cpp\\\\BSTIterator\\\\BSTIterator(TreeNode*)|ROOT\\\\solution173.cpp\\\\GLOBAL\\\\AKA_INSTANCE___BSTIterator\\\\AKA_INSTANCE___BSTIterator\\\\BSTIterator(TreeNode*)\");AKA_fCall++;AKA_INSTANCE___BSTIterator = new ::BSTIterator(AKA_INSTANCE___BSTIterator_root);\n/* StackDataNode st */\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode RETURN */\n\n"
        ],
        "isAutomated": true
      }
    ]
  }
]