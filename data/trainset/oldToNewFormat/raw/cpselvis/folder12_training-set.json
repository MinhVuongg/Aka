[
  {
    "fm": "bool searchMatrix(vector<vector<int> >& matrix, int target) {\r     if (matrix.empty()) return false;\r \r     int lower = 0, upper = matrix.size() - 1;\r     while (lower <= upper)\r     {\r       int mid = (lower + upper) >> 1;\r       if (matrix[mid][0] == target) return true;\r       else if (matrix[mid][0] < target)\r       {\r \tlower = mid + 1;\r       }\r       else\r       {\r \tupper = mid - 1;\r       }\r     }\r \r     int row = upper;\r     if (row < 0 || row > matrix.size() - 1) return false;\r     lower = 0;\r     upper = matrix[row].size() - 1;\r \r     while (lower <= upper)\r     {\r       int mid = (lower + upper) >> 1;\r       if (matrix[row][mid] == target) return true;\r       else if (matrix[row][mid] < target)\r       {\r \tlower = mid + 1;\r       }\r       else\r       {\r \tupper = mid - 1;\r       }\r     }\r     return false;\r   }",
    "f": [],
    "path_fm": "D:\\py\\test\\folder_12\\solution074.cpp\\Solution\\searchMatrix(vector<vector<int>>&,int)",
    "c": [
      ""
    ],
    "fc": "class Solution {\r public:\r   bool searchMatrix(vector<vector<int> >& matrix, int target) {\r     if (matrix.empty()) return false;\r \r     int lower = 0, upper = matrix.size() - 1;\r     while (lower <= upper)\r     {\r       int mid = (lower + upper) >> 1;\r       if (matrix[mid][0] == target) return true;\r       else if (matrix[mid][0] < target)\r       {\r \tlower = mid + 1;\r       }\r       else\r       {\r \tupper = mid - 1;\r       }\r     }\r \r     int row = upper;\r     if (row < 0 || row > matrix.size() - 1) return false;\r     lower = 0;\r     upper = matrix[row].size() - 1;\r \r     while (lower <= upper)\r     {\r       int mid = (lower + upper) >> 1;\r       if (matrix[row][mid] == target) return true;\r       else if (matrix[row][mid] < target)\r       {\r \tlower = mid + 1;\r       }\r       else\r       {\r \tupper = mid - 1;\r       }\r     }\r     return false;\r   }\r };",
    "m": [],
    "datatest": [
      {
        "id": 0,
        "dt": {},
        "td": [
          "void AKA_TEST_Solution_searchMatrix_vector_vector_int_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_searchMatrix_vector_vector_int_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution074.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> matrix;\n\n\nint target=1597612599;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode matrix */\nvector<int> matrix_element0;\nint matrix_element0_element0=1662082902;\nmatrix_element0.push_back(matrix_element0_element0);\nmatrix.push_back(matrix_element0);\nvector<int> matrix_element1;\nint matrix_element1_element0=945047;\nmatrix_element1.push_back(matrix_element1_element0);\nint matrix_element1_element1=529942969;\nmatrix_element1.push_back(matrix_element1_element1);\nmatrix.push_back(matrix_element1);\n/* NormalNumberDataNode target */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_searchMatrix_vector_vector_int_int_random_1\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->searchMatrix(matrix,target);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_12\\\\solution074.cpp\\\\Solution\\\\searchMatrix(vector<vector<int>>&,int)\");\n\n\nvector<vector<int>> EXPECTED_matrix;\n\n\n\n// tear down\n;\n}\n}\n",
          "void AKA_TEST_Solution_searchMatrix_vector_vector_int_int_random_6(void) {\n{\nAKA_test_case_name=\"Solution_searchMatrix_vector_vector_int_int_random_6\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution074.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> matrix;\n\n\nint target=1583795664;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode matrix */\nvector<int> matrix_element0;\nint matrix_element0_element0=350674548;\nmatrix_element0.push_back(matrix_element0_element0);\nmatrix.push_back(matrix_element0);\nvector<int> matrix_element1;\nint matrix_element1_element0=593574142;\nmatrix_element1.push_back(matrix_element1_element0);\nint matrix_element1_element1=1608295758;\nmatrix_element1.push_back(matrix_element1_element1);\nmatrix.push_back(matrix_element1);\nvector<int> matrix_element2;\nint matrix_element2_element0=1676078593;\nmatrix_element2.push_back(matrix_element2_element0);\nint matrix_element2_element1=24272128;\nmatrix_element2.push_back(matrix_element2_element1);\nint matrix_element2_element2=755280315;\nmatrix_element2.push_back(matrix_element2_element2);\nmatrix.push_back(matrix_element2);\n/* NormalNumberDataNode target */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_searchMatrix_vector_vector_int_int_random_6\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->searchMatrix(matrix,target);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_12\\\\solution074.cpp\\\\Solution\\\\searchMatrix(vector<vector<int>>&,int)\");\n\n\nvector<vector<int>> EXPECTED_matrix;\n\n\n\n// tear down\n;\n}\n}\n"
        ],
        "simplified_t": [
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution074.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> matrix;\n\n\nint target=1597612599;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode matrix */\nvector<int> matrix_element0;\nint matrix_element0_element0=1662082902;\nmatrix_element0.push_back(matrix_element0_element0);\nmatrix.push_back(matrix_element0);\nvector<int> matrix_element1;\nint matrix_element1_element0=945047;\nmatrix_element1.push_back(matrix_element1_element0);\nint matrix_element1_element1=529942969;\nmatrix_element1.push_back(matrix_element1_element1);\nmatrix.push_back(matrix_element1);\n/* NormalNumberDataNode target */\n/* NormalNumberDataNode RETURN */\n\n",
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution074.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<vector<int>> matrix;\n\n\nint target=1583795664;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode matrix */\nvector<int> matrix_element0;\nint matrix_element0_element0=350674548;\nmatrix_element0.push_back(matrix_element0_element0);\nmatrix.push_back(matrix_element0);\nvector<int> matrix_element1;\nint matrix_element1_element0=593574142;\nmatrix_element1.push_back(matrix_element1_element0);\nint matrix_element1_element1=1608295758;\nmatrix_element1.push_back(matrix_element1_element1);\nmatrix.push_back(matrix_element1);\nvector<int> matrix_element2;\nint matrix_element2_element0=1676078593;\nmatrix_element2.push_back(matrix_element2_element0);\nint matrix_element2_element1=24272128;\nmatrix_element2.push_back(matrix_element2_element1);\nint matrix_element2_element2=755280315;\nmatrix_element2.push_back(matrix_element2_element2);\nmatrix.push_back(matrix_element2);\n/* NormalNumberDataNode target */\n/* NormalNumberDataNode RETURN */\n\n"
        ],
        "isAutomated": true
      }
    ]
  },
  {
    "fm": "vector<vector<int> > combine(int n, int k) {\r     vector<vector<int> > ret;\r     vector<int> sub;\r \r     backtack(n, k, 1, ret, sub);\r     return ret;\r   }",
    "f": [],
    "path_fm": "D:\\py\\test\\folder_12\\solution077.cpp\\Solution\\combine(int,int)",
    "c": [
      ""
    ],
    "fc": "class Solution {\r public:\r   vector<vector<int> > combine(int n, int k) {\r     vector<vector<int> > ret;\r     vector<int> sub;\r \r     backtack(n, k, 1, ret, sub);\r     return ret;\r   }\r   void backtack(int n, int k, int index, vector<vector<int> > &ret, vector<int> &sub)\r   {\r     if (k == 0)\r     {\r       ret.push_back(sub);\r     }\r \r     for (int i = index, j = k; i <= n; i ++, j = k)\r     {\r       sub.push_back(i);\r       backtack(n, -- j, i + 1, ret, sub);\r       sub.pop_back();\r     }\r   }\r };",
    "m": [
      "void backtack(int n, int k, int index, vector<vector<int> > &ret, vector<int> &sub)\r\n  {\r\n    if (k == 0)\r\n    {\r\n      ret.push_back(sub);\r\n    }\r\n\r\n    for (int i = index, j = k; i <= n; i ++, j = k)\r\n    {\r\n      sub.push_back(i);\r\n      backtack(n, -- j, i + 1, ret, sub);\r\n      sub.pop_back();\r\n    }\r\n  }"
    ],
    "datatest": [
      {
        "id": 0,
        "dt": {},
        "td": [],
        "simplified_t": [],
        "isAutomated": true
      }
    ]
  },
  {
    "fm": "void backtack(int n, int k, int index, vector<vector<int> > &ret, vector<int> &sub)\r   {\r     if (k == 0)\r     {\r       ret.push_back(sub);\r     }\r \r     for (int i = index, j = k; i <= n; i ++, j = k)\r     {\r       sub.push_back(i);\r       backtack(n, -- j, i + 1, ret, sub);\r       sub.pop_back();\r     }\r   }",
    "f": [],
    "path_fm": "D:\\py\\test\\folder_12\\solution077.cpp\\Solution\\backtack(int,int,int,vector<vector<int>>&,vector<int>&)",
    "c": [
      ""
    ],
    "fc": "class Solution {\r public:\r   vector<vector<int> > combine(int n, int k) {\r     vector<vector<int> > ret;\r     vector<int> sub;\r \r     backtack(n, k, 1, ret, sub);\r     return ret;\r   }\r   void backtack(int n, int k, int index, vector<vector<int> > &ret, vector<int> &sub)\r   {\r     if (k == 0)\r     {\r       ret.push_back(sub);\r     }\r \r     for (int i = index, j = k; i <= n; i ++, j = k)\r     {\r       sub.push_back(i);\r       backtack(n, -- j, i + 1, ret, sub);\r       sub.pop_back();\r     }\r   }\r };",
    "m": [
      "vector<vector<int> > combine(int n, int k) {\r\n    vector<vector<int> > ret;\r\n    vector<int> sub;\r\n\r\n    backtack(n, k, 1, ret, sub);\r\n    return ret;\r\n  }",
      "void backtack(int n, int k, int index, vector<vector<int> > &ret, vector<int> &sub)\r\n  {\r\n    if (k == 0)\r\n    {\r\n      ret.push_back(sub);\r\n    }\r\n\r\n    for (int i = index, j = k; i <= n; i ++, j = k)\r\n    {\r\n      sub.push_back(i);\r\n      backtack(n, -- j, i + 1, ret, sub);\r\n      sub.pop_back();\r\n    }\r\n  }"
    ],
    "datatest": [
      {
        "id": 0,
        "dt": {},
        "td": [
          "void AKA_TEST_Solution_backtack_int_int_int_vector_vector_int_vector_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_backtack_int_int_int_vector_vector_int_vector_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution077.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=6;\n\n\nint k=1222381626;\n\n\nint index=4;\nvector<vector<int>> ret;\nvector<int> sub;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode index */\n/* VectorDataNode ret */\nvector<int> ret_element0;\nint ret_element0_element0=488230685;\nret_element0.push_back(ret_element0_element0);\nret.push_back(ret_element0);\n/* VectorDataNode sub */\nint sub_element0=-190748949;\nsub.push_back(sub_element0);\nint sub_element1=602225299;\nsub.push_back(sub_element1);\nint sub_element2=-1495085103;\nsub.push_back(sub_element2);\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_backtack_int_int_int_vector_vector_int_vector_int_random_3\");AKA_INSTANCE___Solution->backtack(n,k,index,ret,sub);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_12\\\\solution077.cpp\\\\Solution\\\\backtack(int,int,int,vector<vector<int>>&,vector<int>&)\");\n\n/* error assertion */\nvector<vector<int>> EXPECTED_ret;\n\nvector<int> EXPECTED_sub;\n\n\n\n// tear down\n;\n}\n}\n"
        ],
        "simplified_t": [
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution077.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=6;\n\n\nint k=1222381626;\n\n\nint index=4;\nvector<vector<int>> ret;\nvector<int> sub;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode index */\n/* VectorDataNode ret */\nvector<int> ret_element0;\nint ret_element0_element0=488230685;\nret_element0.push_back(ret_element0_element0);\nret.push_back(ret_element0);\n/* VectorDataNode sub */\nint sub_element0=-190748949;\nsub.push_back(sub_element0);\nint sub_element1=602225299;\nsub.push_back(sub_element1);\nint sub_element2=-1495085103;\nsub.push_back(sub_element2);\n\n"
        ],
        "isAutomated": true
      }
    ]
  },
  {
    "fm": "vector<vector<int> > subsets(vector<int>& nums) {\r     vector<vector<int> > ret;\r     vector<int> sub;\r     \r     backtack(nums, sub, ret, 0);\r     return ret;\r   }",
    "f": [],
    "path_fm": "D:\\py\\test\\folder_12\\solution078.cpp\\Solution\\subsets(vector<int>&)",
    "c": [
      ""
    ],
    "fc": "class Solution {\r public:\r   vector<vector<int> > subsets(vector<int>& nums) {\r     vector<vector<int> > ret;\r     vector<int> sub;\r     \r     backtack(nums, sub, ret, 0);\r     return ret;\r   }\r \r   void backtack(vector<int> &nums, vector<int> &sub,  vector<vector<int> > &ret, int index)\r   {\r     ret.push_back(sub);\r     for (int i = index; i < nums.size(); i ++)\r     {\r       sub.push_back(nums[i]);\r       backtack(nums, sub, ret, i + 1);\r       sub.pop_back();\r     }\r   }\r };",
    "m": [
      "void backtack(vector<int> &nums, vector<int> &sub,  vector<vector<int> > &ret, int index)\r\n  {\r\n    ret.push_back(sub);\r\n    for (int i = index; i < nums.size(); i ++)\r\n    {\r\n      sub.push_back(nums[i]);\r\n      backtack(nums, sub, ret, i + 1);\r\n      sub.pop_back();\r\n    }\r\n  }"
    ],
    "datatest": [
      {
        "id": 0,
        "dt": {},
        "td": [
          "void AKA_TEST_Solution_subsets_vector_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_subsets_vector_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution078.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=1733100607;\nnums.push_back(nums_element0);\nint nums_element1=-1524835163;\nnums.push_back(nums_element1);\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_subsets_vector_int_random_3\");vector<vector<int>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->subsets(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_12\\\\solution078.cpp\\\\Solution\\\\subsets(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n"
        ],
        "simplified_t": [
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution078.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=1733100607;\nnums.push_back(nums_element0);\nint nums_element1=-1524835163;\nnums.push_back(nums_element1);\n/* VectorDataNode RETURN */\n\n"
        ],
        "isAutomated": true
      }
    ]
  },
  {
    "fm": "void backtack(vector<int> &nums, vector<int> &sub,  vector<vector<int> > &ret, int index)\r   {\r     ret.push_back(sub);\r     for (int i = index; i < nums.size(); i ++)\r     {\r       sub.push_back(nums[i]);\r       backtack(nums, sub, ret, i + 1);\r       sub.pop_back();\r     }\r   }",
    "f": [],
    "path_fm": "D:\\py\\test\\folder_12\\solution078.cpp\\Solution\\backtack(vector<int>&,vector<int>&,vector<vector<int>>&,int)",
    "c": [
      ""
    ],
    "fc": "class Solution {\r public:\r   vector<vector<int> > subsets(vector<int>& nums) {\r     vector<vector<int> > ret;\r     vector<int> sub;\r     \r     backtack(nums, sub, ret, 0);\r     return ret;\r   }\r \r   void backtack(vector<int> &nums, vector<int> &sub,  vector<vector<int> > &ret, int index)\r   {\r     ret.push_back(sub);\r     for (int i = index; i < nums.size(); i ++)\r     {\r       sub.push_back(nums[i]);\r       backtack(nums, sub, ret, i + 1);\r       sub.pop_back();\r     }\r   }\r };",
    "m": [
      "vector<vector<int> > subsets(vector<int>& nums) {\r\n    vector<vector<int> > ret;\r\n    vector<int> sub;\r\n    \r\n    backtack(nums, sub, ret, 0);\r\n    return ret;\r\n  }",
      "void backtack(vector<int> &nums, vector<int> &sub,  vector<vector<int> > &ret, int index)\r\n  {\r\n    ret.push_back(sub);\r\n    for (int i = index; i < nums.size(); i ++)\r\n    {\r\n      sub.push_back(nums[i]);\r\n      backtack(nums, sub, ret, i + 1);\r\n      sub.pop_back();\r\n    }\r\n  }"
    ],
    "datatest": [
      {
        "id": 0,
        "dt": {},
        "td": [
          "void AKA_TEST_Solution_backtack_vector_int_vector_int_vector_vector_int_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_backtack_vector_int_vector_int_vector_vector_int_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution078.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nvector<int> sub;\nvector<vector<int>> ret;\n\n\nint index=8;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-2058300954;\nnums.push_back(nums_element0);\nint nums_element1=1469431773;\nnums.push_back(nums_element1);\nint nums_element2=-1245544164;\nnums.push_back(nums_element2);\n/* VectorDataNode sub */\nint sub_element0=-1755120522;\nsub.push_back(sub_element0);\n/* VectorDataNode ret */\nvector<int> ret_element0;\nint ret_element0_element0=368198552;\nret_element0.push_back(ret_element0_element0);\nret.push_back(ret_element0);\n/* NormalNumberDataNode index */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_backtack_vector_int_vector_int_vector_vector_int_int_random_3\");AKA_INSTANCE___Solution->backtack(nums,sub,ret,index);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_12\\\\solution078.cpp\\\\Solution\\\\backtack(vector<int>&,vector<int>&,vector<vector<int>>&,int)\");\n\n/* error assertion */\nvector<int> EXPECTED_nums;\n\nvector<int> EXPECTED_sub;\n\nvector<vector<int>> EXPECTED_ret;\n\n\n\n// tear down\n;\n}\n}\n"
        ],
        "simplified_t": [
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution078.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nvector<int> sub;\nvector<vector<int>> ret;\n\n\nint index=8;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-2058300954;\nnums.push_back(nums_element0);\nint nums_element1=1469431773;\nnums.push_back(nums_element1);\nint nums_element2=-1245544164;\nnums.push_back(nums_element2);\n/* VectorDataNode sub */\nint sub_element0=-1755120522;\nsub.push_back(sub_element0);\n/* VectorDataNode ret */\nvector<int> ret_element0;\nint ret_element0_element0=368198552;\nret_element0.push_back(ret_element0_element0);\nret.push_back(ret_element0);\n/* NormalNumberDataNode index */\n\n"
        ],
        "isAutomated": true
      }
    ]
  },
  {
    "fm": "int removeDuplicates(vector<int>& nums) {\r     unordered_map<int, int> umap;\r \r     int ret = nums.size();\r     for (int i = 0; i < nums.size(); )\r     {\r       if (umap[nums[i]] < 2)\r       {\r         umap[nums[i]] ++;\r \ti ++;\r       }\r       else\r       {\r \tnums.erase(nums.begin() + i);\r \tret --;\r       }\r     }\r     return ret;\r   }",
    "f": [],
    "path_fm": "D:\\py\\test\\folder_12\\solution080.cpp\\Solution\\removeDuplicates(vector<int>&)",
    "c": [
      ""
    ],
    "fc": "class Solution {\r public:\r   int removeDuplicates(vector<int>& nums) {\r     unordered_map<int, int> umap;\r \r     int ret = nums.size();\r     for (int i = 0; i < nums.size(); )\r     {\r       if (umap[nums[i]] < 2)\r       {\r         umap[nums[i]] ++;\r \ti ++;\r       }\r       else\r       {\r \tnums.erase(nums.begin() + i);\r \tret --;\r       }\r     }\r     return ret;\r   }\r };",
    "m": [],
    "datatest": [
      {
        "id": 0,
        "dt": {},
        "td": [
          "void AKA_TEST_Solution_removeDuplicates_vector_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_removeDuplicates_vector_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution080.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-1249010771;\nnums.push_back(nums_element0);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_removeDuplicates_vector_int_random_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->removeDuplicates(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_12\\\\solution080.cpp\\\\Solution\\\\removeDuplicates(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n"
        ],
        "simplified_t": [
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution080.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-1249010771;\nnums.push_back(nums_element0);\n/* NormalNumberDataNode RETURN */\n\n"
        ],
        "isAutomated": true
      }
    ]
  },
  {
    "fm": "ListNode* deleteDuplicates(ListNode* head) {\r     if (head == NULL || head -> next == NULL) return head;\r     \r     ListNode *dummy = new ListNode(-1);\r     dummy -> next = head;\r     head = dummy;\r \r     while (head -> next != NULL && head -> next -> next != NULL)\r     {\r       if (head -> next -> val == head -> next -> next -> val)\r       {\r \tint val = head -> next -> val;\r \twhile (head -> next != NULL && head -> next -> val == val)\r \t{\r \t  head -> next = head -> next -> next;\r \t}\r       }\r       else\r       {\r \thead = head -> next;\r       }\r     }\r     return dummy -> next;\r   }",
    "f": [],
    "path_fm": "D:\\py\\test\\folder_12\\solution082.cpp\\Solution\\deleteDuplicates(ListNode*)",
    "c": [
      ""
    ],
    "fc": "class Solution {\r public:\r   ListNode* deleteDuplicates(ListNode* head) {\r     if (head == NULL || head -> next == NULL) return head;\r     \r     ListNode *dummy = new ListNode(-1);\r     dummy -> next = head;\r     head = dummy;\r \r     while (head -> next != NULL && head -> next -> next != NULL)\r     {\r       if (head -> next -> val == head -> next -> next -> val)\r       {\r \tint val = head -> next -> val;\r \twhile (head -> next != NULL && head -> next -> val == val)\r \t{\r \t  head -> next = head -> next -> next;\r \t}\r       }\r       else\r       {\r \thead = head -> next;\r       }\r     }\r     return dummy -> next;\r   }\r };",
    "m": [
      "ListNode* deleteDuplicates(ListNode* head) {\r\n    if (head == NULL || head -> next == NULL) return head;\r\n    \r\n    ListNode *dummy = new ListNode(-1);\r\n    dummy -> next = head;\r\n    head = dummy;\r\n\r\n    while (head -> next != NULL && head -> next -> next != NULL)\r\n    {\r\n      if (head -> next -> val == head -> next -> next -> val)\r\n      {\r\n\tint val = head -> next -> val;\r\n\twhile (head -> next != NULL && head -> next -> val == val)\r\n\t{\r\n\t  head -> next = head -> next -> next;\r\n\t}\r\n      }\r\n      else\r\n      {\r\n\thead = head -> next;\r\n      }\r\n    }\r\n    return dummy -> next;\r\n  }"
    ],
    "datatest": [
      {
        "id": 0,
        "dt": {},
        "td": [
          "void AKA_TEST_Solution_deleteDuplicates_ListNodemul_random_2(void) {\n{\nAKA_test_case_name=\"Solution_deleteDuplicates_ListNodemul_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution082.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=-526228767;\nAKA_mark(\"Calling: .\\\\folder_12\\\\solution082.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution082.cpp\\\\deleteDuplicates(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_0).val=-997610846;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next0_x=1300528055;\nAKA_mark(\"Calling: .\\\\folder_12\\\\solution082.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution082.cpp\\\\deleteDuplicates(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_0 = new ::ListNode(head0_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).val=1414346991;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next1_x=153496884;\nAKA_mark(\"Calling: .\\\\folder_12\\\\solution082.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution082.cpp\\\\deleteDuplicates(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_1 = new ::ListNode(head0_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_0_DOT_next_1).val=-178893240;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_1).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_1);\n(*AKA_VECTOR_INIT_head_0).next = AKA_VECTOR_INIT_head_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=-1459742839;\nAKA_mark(\"Calling: .\\\\folder_12\\\\solution082.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution082.cpp\\\\deleteDuplicates(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_1).val=1575555631;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_1_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_next0_x=1127267561;\nAKA_mark(\"Calling: .\\\\folder_12\\\\solution082.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution082.cpp\\\\deleteDuplicates(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1_DOT_next_0 = new ::ListNode(head1_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_1_DOT_next_0).val=1315051641;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1_DOT_next_0).next;\nAKA_VECTOR_INIT_head_1_DOT_next.push_back(AKA_VECTOR_INIT_head_1_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_next1_x=-782767004;\nAKA_mark(\"Calling: .\\\\folder_12\\\\solution082.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution082.cpp\\\\deleteDuplicates(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1_DOT_next_1 = new ::ListNode(head1_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_1_DOT_next_1).val=-851666324;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1_DOT_next_1).next;\nAKA_VECTOR_INIT_head_1_DOT_next.push_back(AKA_VECTOR_INIT_head_1_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_next2_x=844273601;\nAKA_mark(\"Calling: .\\\\folder_12\\\\solution082.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution082.cpp\\\\deleteDuplicates(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\next\\\\next[2]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1_DOT_next_2 = new ::ListNode(head1_next2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_1_DOT_next_2).val=-1801245362;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1_DOT_next_2).next;\nAKA_VECTOR_INIT_head_1_DOT_next.push_back(AKA_VECTOR_INIT_head_1_DOT_next_2);\n(*AKA_VECTOR_INIT_head_1).next = AKA_VECTOR_INIT_head_1_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_deleteDuplicates_ListNodemul_random_2\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->deleteDuplicates(head);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_12\\\\solution082.cpp\\\\Solution\\\\deleteDuplicates(ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n",
          "void AKA_TEST_Solution_deleteDuplicates_ListNodemul_random_3(void) {\n{\nAKA_test_case_name=\"Solution_deleteDuplicates_ListNodemul_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution082.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=1947255430;\nAKA_mark(\"Calling: .\\\\folder_12\\\\solution082.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution082.cpp\\\\deleteDuplicates(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_0).val=-112748914;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=1535187081;\nAKA_mark(\"Calling: .\\\\folder_12\\\\solution082.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution082.cpp\\\\deleteDuplicates(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_1).val=-1612506210;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_1_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_next0_x=1564012934;\nAKA_mark(\"Calling: .\\\\folder_12\\\\solution082.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution082.cpp\\\\deleteDuplicates(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1_DOT_next_0 = new ::ListNode(head1_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_1_DOT_next_0).val=-492091458;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1_DOT_next_0).next;\nAKA_VECTOR_INIT_head_1_DOT_next.push_back(AKA_VECTOR_INIT_head_1_DOT_next_0);\n(*AKA_VECTOR_INIT_head_1).next = AKA_VECTOR_INIT_head_1_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head2_x=-1898467609;\nAKA_mark(\"Calling: .\\\\folder_12\\\\solution082.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution082.cpp\\\\deleteDuplicates(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_2\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_2 = new ::ListNode(head2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_2).val=-1428339365;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_2_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head2_next0_x=566142667;\nAKA_mark(\"Calling: .\\\\folder_12\\\\solution082.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution082.cpp\\\\deleteDuplicates(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_2\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_2_DOT_next_0 = new ::ListNode(head2_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_2_DOT_next_0).val=-2086742423;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_2_DOT_next_0).next;\nAKA_VECTOR_INIT_head_2_DOT_next.push_back(AKA_VECTOR_INIT_head_2_DOT_next_0);\n(*AKA_VECTOR_INIT_head_2).next = AKA_VECTOR_INIT_head_2_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_2);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_deleteDuplicates_ListNodemul_random_3\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->deleteDuplicates(head);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_12\\\\solution082.cpp\\\\Solution\\\\deleteDuplicates(ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n"
        ],
        "simplified_t": [
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution082.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=-526228767;\nAKA_mark(\"Calling: .\\\\folder_12\\\\solution082.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution082.cpp\\\\deleteDuplicates(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_0).val=-997610846;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next0_x=1300528055;\nAKA_mark(\"Calling: .\\\\folder_12\\\\solution082.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution082.cpp\\\\deleteDuplicates(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_0 = new ::ListNode(head0_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).val=1414346991;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next1_x=153496884;\nAKA_mark(\"Calling: .\\\\folder_12\\\\solution082.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution082.cpp\\\\deleteDuplicates(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_1 = new ::ListNode(head0_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_0_DOT_next_1).val=-178893240;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_1).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_1);\n(*AKA_VECTOR_INIT_head_0).next = AKA_VECTOR_INIT_head_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=-1459742839;\nAKA_mark(\"Calling: .\\\\folder_12\\\\solution082.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution082.cpp\\\\deleteDuplicates(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_1).val=1575555631;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_1_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_next0_x=1127267561;\nAKA_mark(\"Calling: .\\\\folder_12\\\\solution082.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution082.cpp\\\\deleteDuplicates(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1_DOT_next_0 = new ::ListNode(head1_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_1_DOT_next_0).val=1315051641;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1_DOT_next_0).next;\nAKA_VECTOR_INIT_head_1_DOT_next.push_back(AKA_VECTOR_INIT_head_1_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_next1_x=-782767004;\nAKA_mark(\"Calling: .\\\\folder_12\\\\solution082.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution082.cpp\\\\deleteDuplicates(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1_DOT_next_1 = new ::ListNode(head1_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_1_DOT_next_1).val=-851666324;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1_DOT_next_1).next;\nAKA_VECTOR_INIT_head_1_DOT_next.push_back(AKA_VECTOR_INIT_head_1_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_next2_x=844273601;\nAKA_mark(\"Calling: .\\\\folder_12\\\\solution082.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution082.cpp\\\\deleteDuplicates(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\next\\\\next[2]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1_DOT_next_2 = new ::ListNode(head1_next2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_1_DOT_next_2).val=-1801245362;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1_DOT_next_2).next;\nAKA_VECTOR_INIT_head_1_DOT_next.push_back(AKA_VECTOR_INIT_head_1_DOT_next_2);\n(*AKA_VECTOR_INIT_head_1).next = AKA_VECTOR_INIT_head_1_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* PointerStructureDataNode RETURN */\n\n",
          "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution082.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=1947255430;\nAKA_mark(\"Calling: .\\\\folder_12\\\\solution082.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution082.cpp\\\\deleteDuplicates(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_0).val=-112748914;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=1535187081;\nAKA_mark(\"Calling: .\\\\folder_12\\\\solution082.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution082.cpp\\\\deleteDuplicates(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_1).val=-1612506210;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_1_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_next0_x=1564012934;\nAKA_mark(\"Calling: .\\\\folder_12\\\\solution082.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution082.cpp\\\\deleteDuplicates(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1_DOT_next_0 = new ::ListNode(head1_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_1_DOT_next_0).val=-492091458;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1_DOT_next_0).next;\nAKA_VECTOR_INIT_head_1_DOT_next.push_back(AKA_VECTOR_INIT_head_1_DOT_next_0);\n(*AKA_VECTOR_INIT_head_1).next = AKA_VECTOR_INIT_head_1_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head2_x=-1898467609;\nAKA_mark(\"Calling: .\\\\folder_12\\\\solution082.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution082.cpp\\\\deleteDuplicates(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_2\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_2 = new ::ListNode(head2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_2).val=-1428339365;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_2_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head2_next0_x=566142667;\nAKA_mark(\"Calling: .\\\\folder_12\\\\solution082.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution082.cpp\\\\deleteDuplicates(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_2\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_2_DOT_next_0 = new ::ListNode(head2_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_2_DOT_next_0).val=-2086742423;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_2_DOT_next_0).next;\nAKA_VECTOR_INIT_head_2_DOT_next.push_back(AKA_VECTOR_INIT_head_2_DOT_next_0);\n(*AKA_VECTOR_INIT_head_2).next = AKA_VECTOR_INIT_head_2_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_2);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* PointerStructureDataNode RETURN */\n\n"
        ],
        "isAutomated": true
      }
    ]
  }
]