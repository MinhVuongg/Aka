[
  {   "fc" : "class Solution {\r public:\r     \r     int findMiddleIndex(vector<int>& a) {\r     \r         int n = a.size();\r         \r         vector<int> left(n), right(n);\r         \r         // left[] is the cumulative sum from left to right\r         // right[] is the cumulative sum from right to left\r         \r         left[0] = a[0];\r         for(int i=1; i<n; i++)                          left[i] = a[i] + left[i-1];\r         \r         right[n-1] = a[n-1];\r         for(int i=n-2; i>=0; i--)                       right[i] = a[i] + right[i+1];\r         \r         for(int i=0; i<n; i++) {\r             if(left[i] == right[i])                     return i;\r         }\r         \r         return -1;\r     }\r     \r };",   "m" : [ ],   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1952-three-divisors.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=8;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1952-three-divisors.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=0;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1957-delete-characters-to-make-fancy-string.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName918908 = new char[2];akaRandomName918908[0] = -119;akaRandomName918908[1] = '\\0';string s=akaRandomName918908;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1962-remove-stones-to-minimize-the-total.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> piles;\n\n\nint k=-1143472062;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode piles */\nint piles_element0=-1800284779;\npiles.push_back(piles_element0);\nint piles_element1=-339404523;\npiles.push_back(piles_element1);\nint piles_element2=2039455640;\npiles.push_back(piles_element2);\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1963-minimum-number-of-swaps-to-make-the-string-balanced.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName52818 = new char[2];akaRandomName52818[0] = -124;akaRandomName52818[1] = '\\0';string s=akaRandomName52818;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1967-number-of-strings-that-appear-as-substrings-in-word.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> pat;\nchar* akaRandomName915910 = new char[2];akaRandomName915910[0] = -108;akaRandomName915910[1] = '\\0';string word=akaRandomName915910;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode pat */\nchar* akaRandomName365931 = new char[2];akaRandomName365931[0] = -82;akaRandomName365931[1] = '\\0';string pat_element0=akaRandomName365931;\npat.push_back(pat_element0);\nchar* akaRandomName441874 = new char[2];akaRandomName441874[0] = -115;akaRandomName441874[1] = '\\0';string pat_element1=akaRandomName441874;\npat.push_back(pat_element1);\nchar* akaRandomName345673 = new char[2];akaRandomName345673[0] = -128;akaRandomName345673[1] = '\\0';string pat_element2=akaRandomName345673;\npat.push_back(pat_element2);\n/* NormalStringDataNode word */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1971-find-if-path-exists-in-graph.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint node=-293185664;\n\n\nint dest=291541447;\nunordered_map<int, vector<int>> adj;\n\n\nbool flag=false;\nvector<int> vis;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode node */\n/* NormalNumberDataNode dest */\n/* UnorderedMapDataNode adj */\n/* NormalNumberDataNode flag */\n/* VectorDataNode vis */\nint vis_element0=769537449;\nvis.push_back(vis_element0);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1971-find-if-path-exists-in-graph.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint node=-1263709874;\n\n\nint dest=-173073675;\nunordered_map<int, vector<int>> adj;\n\n\nbool flag=true;\nvector<int> vis;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode node */\n/* NormalNumberDataNode dest */\n/* UnorderedMapDataNode adj */\n/* NormalNumberDataNode flag */\n/* VectorDataNode vis */\nint vis_element0=1454054793;\nvis.push_back(vis_element0);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1971-find-if-path-exists-in-graph.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=-405933005;\nvector<vector<int>> edges;\n\n\nint src=944653216;\n\n\nint dest=-550125427;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode edges */\nvector<int> edges_element0;\nint edges_element0_element0=-643580237;\nedges_element0.push_back(edges_element0_element0);\nint edges_element0_element1=-222715954;\nedges_element0.push_back(edges_element0_element1);\nint edges_element0_element2=-1058118460;\nedges_element0.push_back(edges_element0_element2);\nedges.push_back(edges_element0);\n/* NormalNumberDataNode src */\n/* NormalNumberDataNode dest */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-857041488;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-980675011;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=572155171;\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-571941411;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=1649144696;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-292098304;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-1522534972;\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=125278342;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=814077351;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right1_x=-47080498;\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_1 = new ::TreeNode(root1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).val=958595437;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_1);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint res=1400321350;\n\n\nlong AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode res */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1338371764;\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\equalToDescendants(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\equalToDescendants(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\equalToDescendants(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\equalToDescendants(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1974-minimum-time-to-type-word-using-special-typewriter.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName107014 = new char[2];akaRandomName107014[0] = -92;akaRandomName107014[1] = '\\0';string word=akaRandomName107014;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode word */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1976-number-of-ways-to-arrive-at-destination.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n/* NormalNumberDataNode mod */\nAKA_INSTANCE___Solution->mod=25118588;\n\n\n\n\nint n=1;\nvector<vector<int>> roads;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode roads */\nvector<int> roads_element0;\nint roads_element0_element0=183701676;\nroads_element0.push_back(roads_element0_element0);\nint roads_element0_element1=1072938127;\nroads_element0.push_back(roads_element0_element1);\nint roads_element0_element2=1190287331;\nroads_element0.push_back(roads_element0_element2);\nroads.push_back(roads_element0);\nvector<int> roads_element1;\nint roads_element1_element0=440094655;\nroads_element1.push_back(roads_element1_element0);\nroads.push_back(roads_element1);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1979-find-greatest-common-divisor-of-array.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint a=2;\n\n\nint b=10;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode b */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1979-find-greatest-common-divisor-of-array.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=-1442691032;\nv.push_back(v_element0);\nint v_element1=1401151266;\nv.push_back(v_element1);\nint v_element2=-1728472283;\nv.push_back(v_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1984-minimum-difference-between-highest-and-lowest-of-k-scores.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint k=8;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=1965148962;\nnums.push_back(nums_element0);\nint nums_element1=1784736108;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1985-find-the-kth-largest-integer-in-the-array.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> v;\n\n\nint k=-1444781568;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nchar* akaRandomName3453 = new char[2];akaRandomName3453[0] = 80;akaRandomName3453[1] = '\\0';string v_element0=akaRandomName3453;\nv.push_back(v_element0);\nchar* akaRandomName269724 = new char[2];akaRandomName269724[0] = 15;akaRandomName269724[1] = '\\0';string v_element1=akaRandomName269724;\nv.push_back(v_element1);\nchar* akaRandomName587736 = new char[2];akaRandomName587736[0] = -123;akaRandomName587736[1] = '\\0';string v_element2=akaRandomName587736;\nv.push_back(v_element2);\n/* NormalNumberDataNode k */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1991-find-the-middle-index-in-array.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=321085167;\na.push_back(a_element0);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1991-find-the-middle-index-in-array.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-425224553;\na.push_back(a_element0);\nint a_element1=1818102135;\na.push_back(a_element1);\nint a_element2=-1701693626;\na.push_back(a_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\2-add-two-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode**> AKA_VECTOR_INIT_head;\nstd::vector<ListNode*> AKA_VECTOR_INIT_AKA_VECTOR_INIT_head_0;\n\n\n/* SubStructDataNode AKA_VECTOR_INIT_head_0_0 */\n/* ConstructorDataNode ListNode() */\nAKA_mark(\"Calling: .\\\\p59\\\\2-add-two-numbers\\\\2-add-two-numbers.cpp\\\\ListNode\\\\ListNode()|ROOT\\\\2-add-two-numbers.cpp\\\\addNodeAtLast(ListNode**,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\AKA_VECTOR_INIT_head_0_0\\\\AKA_VECTOR_INIT_head_0_0\\\\ListNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_0 = new ::ListNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_0_0).val=1091049687;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_0).next;\n\nAKA_VECTOR_INIT_AKA_VECTOR_INIT_head_0.push_back(AKA_VECTOR_INIT_head_0_0);\n\n\n/* SubStructDataNode AKA_VECTOR_INIT_head_0_1 */\n/* ConstructorDataNode ListNode(int,ListNode*) */\n/* NormalNumberDataNode x */\nint head01_x=-22645202;\n/* PointerStructureDataNode next */\nListNode* head01_next;\nAKA_mark(\"Calling: .\\\\p59\\\\2-add-two-numbers\\\\2-add-two-numbers.cpp\\\\ListNode\\\\ListNode(int,ListNode*)|ROOT\\\\2-add-two-numbers.cpp\\\\addNodeAtLast(ListNode**,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\AKA_VECTOR_INIT_head_0_1\\\\AKA_VECTOR_INIT_head_0_1\\\\ListNode(int,ListNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_1 = new ::ListNode(head01_x,head01_next);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_0_1).val=-938172056;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_1).next;\n\nAKA_VECTOR_INIT_AKA_VECTOR_INIT_head_0.push_back(AKA_VECTOR_INIT_head_0_1);\n\nauto AKA_VECTOR_INIT_head_0 = &(AKA_VECTOR_INIT_AKA_VECTOR_INIT_head_0[0]);\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\nListNode** head = AKA_VECTOR_INIT_head[0];\n\n\nint val=-94397360;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode val */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\20-valid-parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName623542 = new char[2];akaRandomName623542[0] = -73;akaRandomName623542[1] = '\\0';string s=akaRandomName623542;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n" ],   "path_fm" : "C:\\Users\\daidu\\Desktop\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p59\\1991-find-the-middle-index-in-array\\1991-find-the-middle-index-in-array.cpp\\Solution\\findMiddleIndex(vector<int>&)",   "c" : [ "" ],   "t" : [ "void AKA_TEST_Solution_findMiddleIndex_vector_int_random_4(void) {\n{\nAKA_test_case_name=\"Solution_findMiddleIndex_vector_int_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1991-find-the-middle-index-in-array.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=321085167;\na.push_back(a_element0);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findMiddleIndex_vector_int_random_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findMiddleIndex(a);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p59\\\\1991-find-the-middle-index-in-array\\\\1991-find-the-middle-index-in-array.cpp\\\\Solution\\\\findMiddleIndex(vector<int>&)\");\n\n\nvector<int> EXPECTED_a;\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_findMiddleIndex_vector_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_findMiddleIndex_vector_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1991-find-the-middle-index-in-array.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-425224553;\na.push_back(a_element0);\nint a_element1=1818102135;\na.push_back(a_element1);\nint a_element2=-1701693626;\na.push_back(a_element2);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findMiddleIndex_vector_int_random_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findMiddleIndex(a);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p59\\\\1991-find-the-middle-index-in-array\\\\1991-find-the-middle-index-in-array.cpp\\\\Solution\\\\findMiddleIndex(vector<int>&)\");\n\n\nvector<int> EXPECTED_a;\n\n\n\n// tear down\n;\n}\n}\n" ],   "f" : [ ],   "fm" : "int findMiddleIndex(vector<int>& a) {\r     \r         int n = a.size();\r         \r         vector<int> left(n), right(n);\r         \r         // left[] is the cumulative sum from left to right\r         // right[] is the cumulative sum from right to left\r         \r         left[0] = a[0];\r         for(int i=1; i<n; i++)                          left[i] = a[i] + left[i-1];\r         \r         right[n-1] = a[n-1];\r         for(int i=n-2; i>=0; i--)                       right[i] = a[i] + right[i+1];\r         \r         for(int i=0; i<n; i++) {\r             if(left[i] == right[i])                     return i;\r         }\r         \r         return -1;\r     }" },
  {   "fc" : "class Solution {\r public:\r     \r     // Add Node at Beginning of Linked List\r     void addNodeAtLast(ListNode** head, int val) {\r         \r         ListNode* temp = new ListNode(val);\r         ListNode* last = *head;\r         \r         while(last->next != NULL) {\r             last = last->next;\r         }\r \r         last->next = temp;\r         return;\r     }\r     \r     ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\r         \r        ListNode* res = NULL;\r         \r         if(l1 == NULL && l2 == NULL)                                    return NULL;\r         if(l1 == NULL)                                                  return l2;\r         if(l2 == NULL)                                                  return l1;\r         \r         // Reverse both Linked List\r         ListNode* res1 = NULL, *res2 = NULL;\r         \r         int carry = 0;\r         int i = 0;\r         \r         while(l1 != NULL && l2 != NULL) {\r             \r             int val = l1->val + l2->val + carry;\r             \r             if(val >= 10) {\r                 carry = val / 10;\r                 val = val % 10;\r             }\r             \r             else {\r                 carry = 0;\r             }\r             \r             l1 = l1->next;\r             l2 = l2->next;\r             \r             if(i == 0)                                                  res = new ListNode(val);\r             else                                                        addNodeAtLast(&res, val);\r             \r             i++;\r         }\r         \r         while(l1 != NULL) {\r             \r             int val = l1->val + carry;\r             \r             if(val >= 10) {\r                 carry = val / 10;\r                 val = val % 10;\r             }\r             \r             else {\r                 carry = 0;\r             }\r             \r             l1 = l1->next;\r             \r             if(i == 0)                                                  res = new ListNode(val);\r             else                                                        addNodeAtLast(&res, val);\r             \r             i++;\r         }\r         \r         while(l2 != NULL) {\r             \r             int val = l2->val + carry;\r             \r             if(val >= 10) {\r                 carry = val / 10;\r                 val = val % 10;\r             }\r             \r             else {\r                 carry = 0;\r             }\r             \r             l2 = l2->next;\r             \r             if(i == 0)                                                  res = new ListNode(val);\r             else                                                        addNodeAtLast(&res, val);\r             \r             i++;\r         }\r         \r         if(carry > 0) {\r             \r             if(i == 0)                                                  res = new ListNode(carry);\r             else                                                        addNodeAtLast(&res, carry);\r             \r             i++;\r         }\r         \r         \r         return res;\r     }\r     \r };",   "m" : [ "ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\r\n        \r\n       ListNode* res = NULL;\r\n        \r\n        if(l1 == NULL && l2 == NULL)                                    return NULL;\r\n        if(l1 == NULL)                                                  return l2;\r\n        if(l2 == NULL)                                                  return l1;\r\n        \r\n        // Reverse both Linked List\r\n        ListNode* res1 = NULL, *res2 = NULL;\r\n        \r\n        int carry = 0;\r\n        int i = 0;\r\n        \r\n        while(l1 != NULL && l2 != NULL) {\r\n            \r\n            int val = l1->val + l2->val + carry;\r\n            \r\n            if(val >= 10) {\r\n                carry = val / 10;\r\n                val = val % 10;\r\n            }\r\n            \r\n            else {\r\n                carry = 0;\r\n            }\r\n            \r\n            l1 = l1->next;\r\n            l2 = l2->next;\r\n            \r\n            if(i == 0)                                                  res = new ListNode(val);\r\n            else                                                        addNodeAtLast(&res, val);\r\n            \r\n            i++;\r\n        }\r\n        \r\n        while(l1 != NULL) {\r\n            \r\n            int val = l1->val + carry;\r\n            \r\n            if(val >= 10) {\r\n                carry = val / 10;\r\n                val = val % 10;\r\n            }\r\n            \r\n            else {\r\n                carry = 0;\r\n            }\r\n            \r\n            l1 = l1->next;\r\n            \r\n            if(i == 0)                                                  res = new ListNode(val);\r\n            else                                                        addNodeAtLast(&res, val);\r\n            \r\n            i++;\r\n        }\r\n        \r\n        while(l2 != NULL) {\r\n            \r\n            int val = l2->val + carry;\r\n            \r\n            if(val >= 10) {\r\n                carry = val / 10;\r\n                val = val % 10;\r\n            }\r\n            \r\n            else {\r\n                carry = 0;\r\n            }\r\n            \r\n            l2 = l2->next;\r\n            \r\n            if(i == 0)                                                  res = new ListNode(val);\r\n            else                                                        addNodeAtLast(&res, val);\r\n            \r\n            i++;\r\n        }\r\n        \r\n        if(carry > 0) {\r\n            \r\n            if(i == 0)                                                  res = new ListNode(carry);\r\n            else                                                        addNodeAtLast(&res, carry);\r\n            \r\n            i++;\r\n        }\r\n        \r\n        \r\n        return res;\r\n    }" ],   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1952-three-divisors.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=8;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1952-three-divisors.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=0;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1957-delete-characters-to-make-fancy-string.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName918908 = new char[2];akaRandomName918908[0] = -119;akaRandomName918908[1] = '\\0';string s=akaRandomName918908;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1962-remove-stones-to-minimize-the-total.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> piles;\n\n\nint k=-1143472062;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode piles */\nint piles_element0=-1800284779;\npiles.push_back(piles_element0);\nint piles_element1=-339404523;\npiles.push_back(piles_element1);\nint piles_element2=2039455640;\npiles.push_back(piles_element2);\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1963-minimum-number-of-swaps-to-make-the-string-balanced.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName52818 = new char[2];akaRandomName52818[0] = -124;akaRandomName52818[1] = '\\0';string s=akaRandomName52818;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1967-number-of-strings-that-appear-as-substrings-in-word.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> pat;\nchar* akaRandomName915910 = new char[2];akaRandomName915910[0] = -108;akaRandomName915910[1] = '\\0';string word=akaRandomName915910;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode pat */\nchar* akaRandomName365931 = new char[2];akaRandomName365931[0] = -82;akaRandomName365931[1] = '\\0';string pat_element0=akaRandomName365931;\npat.push_back(pat_element0);\nchar* akaRandomName441874 = new char[2];akaRandomName441874[0] = -115;akaRandomName441874[1] = '\\0';string pat_element1=akaRandomName441874;\npat.push_back(pat_element1);\nchar* akaRandomName345673 = new char[2];akaRandomName345673[0] = -128;akaRandomName345673[1] = '\\0';string pat_element2=akaRandomName345673;\npat.push_back(pat_element2);\n/* NormalStringDataNode word */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1971-find-if-path-exists-in-graph.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint node=-293185664;\n\n\nint dest=291541447;\nunordered_map<int, vector<int>> adj;\n\n\nbool flag=false;\nvector<int> vis;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode node */\n/* NormalNumberDataNode dest */\n/* UnorderedMapDataNode adj */\n/* NormalNumberDataNode flag */\n/* VectorDataNode vis */\nint vis_element0=769537449;\nvis.push_back(vis_element0);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1971-find-if-path-exists-in-graph.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint node=-1263709874;\n\n\nint dest=-173073675;\nunordered_map<int, vector<int>> adj;\n\n\nbool flag=true;\nvector<int> vis;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode node */\n/* NormalNumberDataNode dest */\n/* UnorderedMapDataNode adj */\n/* NormalNumberDataNode flag */\n/* VectorDataNode vis */\nint vis_element0=1454054793;\nvis.push_back(vis_element0);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1971-find-if-path-exists-in-graph.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=-405933005;\nvector<vector<int>> edges;\n\n\nint src=944653216;\n\n\nint dest=-550125427;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode edges */\nvector<int> edges_element0;\nint edges_element0_element0=-643580237;\nedges_element0.push_back(edges_element0_element0);\nint edges_element0_element1=-222715954;\nedges_element0.push_back(edges_element0_element1);\nint edges_element0_element2=-1058118460;\nedges_element0.push_back(edges_element0_element2);\nedges.push_back(edges_element0);\n/* NormalNumberDataNode src */\n/* NormalNumberDataNode dest */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-857041488;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-980675011;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=572155171;\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-571941411;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=1649144696;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-292098304;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-1522534972;\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=125278342;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=814077351;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right1_x=-47080498;\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_1 = new ::TreeNode(root1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).val=958595437;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_1);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint res=1400321350;\n\n\nlong AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode res */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1338371764;\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\equalToDescendants(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\equalToDescendants(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\equalToDescendants(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\equalToDescendants(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1974-minimum-time-to-type-word-using-special-typewriter.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName107014 = new char[2];akaRandomName107014[0] = -92;akaRandomName107014[1] = '\\0';string word=akaRandomName107014;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode word */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1976-number-of-ways-to-arrive-at-destination.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n/* NormalNumberDataNode mod */\nAKA_INSTANCE___Solution->mod=25118588;\n\n\n\n\nint n=1;\nvector<vector<int>> roads;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode roads */\nvector<int> roads_element0;\nint roads_element0_element0=183701676;\nroads_element0.push_back(roads_element0_element0);\nint roads_element0_element1=1072938127;\nroads_element0.push_back(roads_element0_element1);\nint roads_element0_element2=1190287331;\nroads_element0.push_back(roads_element0_element2);\nroads.push_back(roads_element0);\nvector<int> roads_element1;\nint roads_element1_element0=440094655;\nroads_element1.push_back(roads_element1_element0);\nroads.push_back(roads_element1);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1979-find-greatest-common-divisor-of-array.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint a=2;\n\n\nint b=10;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode b */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1979-find-greatest-common-divisor-of-array.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=-1442691032;\nv.push_back(v_element0);\nint v_element1=1401151266;\nv.push_back(v_element1);\nint v_element2=-1728472283;\nv.push_back(v_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1984-minimum-difference-between-highest-and-lowest-of-k-scores.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint k=8;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=1965148962;\nnums.push_back(nums_element0);\nint nums_element1=1784736108;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1985-find-the-kth-largest-integer-in-the-array.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> v;\n\n\nint k=-1444781568;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nchar* akaRandomName3453 = new char[2];akaRandomName3453[0] = 80;akaRandomName3453[1] = '\\0';string v_element0=akaRandomName3453;\nv.push_back(v_element0);\nchar* akaRandomName269724 = new char[2];akaRandomName269724[0] = 15;akaRandomName269724[1] = '\\0';string v_element1=akaRandomName269724;\nv.push_back(v_element1);\nchar* akaRandomName587736 = new char[2];akaRandomName587736[0] = -123;akaRandomName587736[1] = '\\0';string v_element2=akaRandomName587736;\nv.push_back(v_element2);\n/* NormalNumberDataNode k */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1991-find-the-middle-index-in-array.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=321085167;\na.push_back(a_element0);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1991-find-the-middle-index-in-array.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-425224553;\na.push_back(a_element0);\nint a_element1=1818102135;\na.push_back(a_element1);\nint a_element2=-1701693626;\na.push_back(a_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\2-add-two-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode**> AKA_VECTOR_INIT_head;\nstd::vector<ListNode*> AKA_VECTOR_INIT_AKA_VECTOR_INIT_head_0;\n\n\n/* SubStructDataNode AKA_VECTOR_INIT_head_0_0 */\n/* ConstructorDataNode ListNode() */\nAKA_mark(\"Calling: .\\\\p59\\\\2-add-two-numbers\\\\2-add-two-numbers.cpp\\\\ListNode\\\\ListNode()|ROOT\\\\2-add-two-numbers.cpp\\\\addNodeAtLast(ListNode**,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\AKA_VECTOR_INIT_head_0_0\\\\AKA_VECTOR_INIT_head_0_0\\\\ListNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_0 = new ::ListNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_0_0).val=1091049687;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_0).next;\n\nAKA_VECTOR_INIT_AKA_VECTOR_INIT_head_0.push_back(AKA_VECTOR_INIT_head_0_0);\n\n\n/* SubStructDataNode AKA_VECTOR_INIT_head_0_1 */\n/* ConstructorDataNode ListNode(int,ListNode*) */\n/* NormalNumberDataNode x */\nint head01_x=-22645202;\n/* PointerStructureDataNode next */\nListNode* head01_next;\nAKA_mark(\"Calling: .\\\\p59\\\\2-add-two-numbers\\\\2-add-two-numbers.cpp\\\\ListNode\\\\ListNode(int,ListNode*)|ROOT\\\\2-add-two-numbers.cpp\\\\addNodeAtLast(ListNode**,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\AKA_VECTOR_INIT_head_0_1\\\\AKA_VECTOR_INIT_head_0_1\\\\ListNode(int,ListNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_1 = new ::ListNode(head01_x,head01_next);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_0_1).val=-938172056;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_1).next;\n\nAKA_VECTOR_INIT_AKA_VECTOR_INIT_head_0.push_back(AKA_VECTOR_INIT_head_0_1);\n\nauto AKA_VECTOR_INIT_head_0 = &(AKA_VECTOR_INIT_AKA_VECTOR_INIT_head_0[0]);\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\nListNode** head = AKA_VECTOR_INIT_head[0];\n\n\nint val=-94397360;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode val */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\20-valid-parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName623542 = new char[2];akaRandomName623542[0] = -73;akaRandomName623542[1] = '\\0';string s=akaRandomName623542;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n" ],   "path_fm" : "C:\\Users\\daidu\\Desktop\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p59\\2-add-two-numbers\\2-add-two-numbers.cpp\\Solution\\addNodeAtLast(ListNode**,int)",   "c" : [ "" ],   "t" : [ "void AKA_TEST_Solution_addNodeAtLast_ListNodemulmul_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_addNodeAtLast_ListNodemulmul_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\2-add-two-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode**> AKA_VECTOR_INIT_head;\nstd::vector<ListNode*> AKA_VECTOR_INIT_AKA_VECTOR_INIT_head_0;\n\n\n/* SubStructDataNode AKA_VECTOR_INIT_head_0_0 */\n/* ConstructorDataNode ListNode() */\nAKA_mark(\"Calling: .\\\\p59\\\\2-add-two-numbers\\\\2-add-two-numbers.cpp\\\\ListNode\\\\ListNode()|ROOT\\\\2-add-two-numbers.cpp\\\\addNodeAtLast(ListNode**,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\AKA_VECTOR_INIT_head_0_0\\\\AKA_VECTOR_INIT_head_0_0\\\\ListNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_0 = new ::ListNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_0_0).val=1091049687;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_0).next;\n\nAKA_VECTOR_INIT_AKA_VECTOR_INIT_head_0.push_back(AKA_VECTOR_INIT_head_0_0);\n\n\n/* SubStructDataNode AKA_VECTOR_INIT_head_0_1 */\n/* ConstructorDataNode ListNode(int,ListNode*) */\n/* NormalNumberDataNode x */\nint head01_x=-22645202;\n/* PointerStructureDataNode next */\nListNode* head01_next;\nAKA_mark(\"Calling: .\\\\p59\\\\2-add-two-numbers\\\\2-add-two-numbers.cpp\\\\ListNode\\\\ListNode(int,ListNode*)|ROOT\\\\2-add-two-numbers.cpp\\\\addNodeAtLast(ListNode**,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\AKA_VECTOR_INIT_head_0_1\\\\AKA_VECTOR_INIT_head_0_1\\\\ListNode(int,ListNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_1 = new ::ListNode(head01_x,head01_next);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_0_1).val=-938172056;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_1).next;\n\nAKA_VECTOR_INIT_AKA_VECTOR_INIT_head_0.push_back(AKA_VECTOR_INIT_head_0_1);\n\nauto AKA_VECTOR_INIT_head_0 = &(AKA_VECTOR_INIT_AKA_VECTOR_INIT_head_0[0]);\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\nListNode** head = AKA_VECTOR_INIT_head[0];\n\n\nint val=-94397360;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode val */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_addNodeAtLast_ListNodemulmul_int_random_0\");AKA_INSTANCE___Solution->addNodeAtLast(head,val);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p59\\\\2-add-two-numbers\\\\2-add-two-numbers.cpp\\\\Solution\\\\addNodeAtLast(ListNode**,int)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n" ],   "f" : [ ],   "fm" : "void addNodeAtLast(ListNode** head, int val) {\r         \r         ListNode* temp = new ListNode(val);\r         ListNode* last = *head;\r         \r         while(last->next != NULL) {\r             last = last->next;\r         }\r \r         last->next = temp;\r         return;\r     }" },
  {   "fc" : "class Solution {\r public:\r    \r     bool isValid(string s) {\r     \r         int n = s.length();\r         \r         if(n == 0)                                  return true;\r         \r         stack<char> w;\r         \r         for(int i=n-1; i>=0; i--) {\r             \r             char x = s[i];\r             \r             if(x == ')' || x == ']' || x == '}')         w.push(x);\r             \r             else {\r                 \r                 if(w.size() == 0)                       return false;\r                 \r                 char temp = w.top();\r \r                 if(x == '(' && temp == ')')              w.pop();  \r                 else if(x == '{' && temp == '}')         w.pop();  \r                 else if(x == '[' && temp == ']')         w.pop();  \r                 else                                     return false;\r             }\r         }\r         \r         return (w.size() == 0);\r     }\r     \r };",   "m" : [ ],   "simplified_t" : [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1952-three-divisors.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=8;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1952-three-divisors.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=0;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1957-delete-characters-to-make-fancy-string.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName918908 = new char[2];akaRandomName918908[0] = -119;akaRandomName918908[1] = '\\0';string s=akaRandomName918908;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1962-remove-stones-to-minimize-the-total.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> piles;\n\n\nint k=-1143472062;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode piles */\nint piles_element0=-1800284779;\npiles.push_back(piles_element0);\nint piles_element1=-339404523;\npiles.push_back(piles_element1);\nint piles_element2=2039455640;\npiles.push_back(piles_element2);\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1963-minimum-number-of-swaps-to-make-the-string-balanced.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName52818 = new char[2];akaRandomName52818[0] = -124;akaRandomName52818[1] = '\\0';string s=akaRandomName52818;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1967-number-of-strings-that-appear-as-substrings-in-word.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> pat;\nchar* akaRandomName915910 = new char[2];akaRandomName915910[0] = -108;akaRandomName915910[1] = '\\0';string word=akaRandomName915910;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode pat */\nchar* akaRandomName365931 = new char[2];akaRandomName365931[0] = -82;akaRandomName365931[1] = '\\0';string pat_element0=akaRandomName365931;\npat.push_back(pat_element0);\nchar* akaRandomName441874 = new char[2];akaRandomName441874[0] = -115;akaRandomName441874[1] = '\\0';string pat_element1=akaRandomName441874;\npat.push_back(pat_element1);\nchar* akaRandomName345673 = new char[2];akaRandomName345673[0] = -128;akaRandomName345673[1] = '\\0';string pat_element2=akaRandomName345673;\npat.push_back(pat_element2);\n/* NormalStringDataNode word */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1971-find-if-path-exists-in-graph.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint node=-293185664;\n\n\nint dest=291541447;\nunordered_map<int, vector<int>> adj;\n\n\nbool flag=false;\nvector<int> vis;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode node */\n/* NormalNumberDataNode dest */\n/* UnorderedMapDataNode adj */\n/* NormalNumberDataNode flag */\n/* VectorDataNode vis */\nint vis_element0=769537449;\nvis.push_back(vis_element0);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1971-find-if-path-exists-in-graph.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint node=-1263709874;\n\n\nint dest=-173073675;\nunordered_map<int, vector<int>> adj;\n\n\nbool flag=true;\nvector<int> vis;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode node */\n/* NormalNumberDataNode dest */\n/* UnorderedMapDataNode adj */\n/* NormalNumberDataNode flag */\n/* VectorDataNode vis */\nint vis_element0=1454054793;\nvis.push_back(vis_element0);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1971-find-if-path-exists-in-graph.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=-405933005;\nvector<vector<int>> edges;\n\n\nint src=944653216;\n\n\nint dest=-550125427;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode edges */\nvector<int> edges_element0;\nint edges_element0_element0=-643580237;\nedges_element0.push_back(edges_element0_element0);\nint edges_element0_element1=-222715954;\nedges_element0.push_back(edges_element0_element1);\nint edges_element0_element2=-1058118460;\nedges_element0.push_back(edges_element0_element2);\nedges.push_back(edges_element0);\n/* NormalNumberDataNode src */\n/* NormalNumberDataNode dest */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=-857041488;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-980675011;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=572155171;\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-571941411;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=1649144696;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-292098304;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-1522534972;\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=125278342;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).val=814077351;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_0).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_right1_x=-47080498;\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\dfs(TreeNode*,int&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_right_1 = new ::TreeNode(root1_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).val=958595437;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_right_1).right;\nAKA_VECTOR_INIT_root_1_DOT_right.push_back(AKA_VECTOR_INIT_root_1_DOT_right_1);\n(*AKA_VECTOR_INIT_root_1).right = AKA_VECTOR_INIT_root_1_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint res=1400321350;\n\n\nlong AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode res */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1338371764;\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\equalToDescendants(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\equalToDescendants(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\equalToDescendants(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode() */\nAKA_mark(\"Calling: .\\\\p57\\\\1973-count-nodes-equal-to-sum-of-descendants\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\TreeNode\\\\TreeNode()|ROOT\\\\1973-count-nodes-equal-to-sum-of-descendants.cpp\\\\equalToDescendants(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode();\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1974-minimum-time-to-type-word-using-special-typewriter.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName107014 = new char[2];akaRandomName107014[0] = -92;akaRandomName107014[1] = '\\0';string word=akaRandomName107014;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode word */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1976-number-of-ways-to-arrive-at-destination.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n/* NormalNumberDataNode mod */\nAKA_INSTANCE___Solution->mod=25118588;\n\n\n\n\nint n=1;\nvector<vector<int>> roads;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* VectorDataNode roads */\nvector<int> roads_element0;\nint roads_element0_element0=183701676;\nroads_element0.push_back(roads_element0_element0);\nint roads_element0_element1=1072938127;\nroads_element0.push_back(roads_element0_element1);\nint roads_element0_element2=1190287331;\nroads_element0.push_back(roads_element0_element2);\nroads.push_back(roads_element0);\nvector<int> roads_element1;\nint roads_element1_element0=440094655;\nroads_element1.push_back(roads_element1_element0);\nroads.push_back(roads_element1);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1979-find-greatest-common-divisor-of-array.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint a=2;\n\n\nint b=10;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode a */\n/* NormalNumberDataNode b */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1979-find-greatest-common-divisor-of-array.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> v;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nint v_element0=-1442691032;\nv.push_back(v_element0);\nint v_element1=1401151266;\nv.push_back(v_element1);\nint v_element2=-1728472283;\nv.push_back(v_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1984-minimum-difference-between-highest-and-lowest-of-k-scores.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint k=8;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=1965148962;\nnums.push_back(nums_element0);\nint nums_element1=1784736108;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1985-find-the-kth-largest-integer-in-the-array.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> v;\n\n\nint k=-1444781568;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* VectorDataNode v */\nchar* akaRandomName3453 = new char[2];akaRandomName3453[0] = 80;akaRandomName3453[1] = '\\0';string v_element0=akaRandomName3453;\nv.push_back(v_element0);\nchar* akaRandomName269724 = new char[2];akaRandomName269724[0] = 15;akaRandomName269724[1] = '\\0';string v_element1=akaRandomName269724;\nv.push_back(v_element1);\nchar* akaRandomName587736 = new char[2];akaRandomName587736[0] = -123;akaRandomName587736[1] = '\\0';string v_element2=akaRandomName587736;\nv.push_back(v_element2);\n/* NormalNumberDataNode k */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1991-find-the-middle-index-in-array.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=321085167;\na.push_back(a_element0);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\1991-find-the-middle-index-in-array.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> a;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode a */\nint a_element0=-425224553;\na.push_back(a_element0);\nint a_element1=1818102135;\na.push_back(a_element1);\nint a_element2=-1701693626;\na.push_back(a_element2);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\2-add-two-numbers.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode**> AKA_VECTOR_INIT_head;\nstd::vector<ListNode*> AKA_VECTOR_INIT_AKA_VECTOR_INIT_head_0;\n\n\n/* SubStructDataNode AKA_VECTOR_INIT_head_0_0 */\n/* ConstructorDataNode ListNode() */\nAKA_mark(\"Calling: .\\\\p59\\\\2-add-two-numbers\\\\2-add-two-numbers.cpp\\\\ListNode\\\\ListNode()|ROOT\\\\2-add-two-numbers.cpp\\\\addNodeAtLast(ListNode**,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\AKA_VECTOR_INIT_head_0_0\\\\AKA_VECTOR_INIT_head_0_0\\\\ListNode()\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_0 = new ::ListNode();\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_0_0).val=1091049687;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_0).next;\n\nAKA_VECTOR_INIT_AKA_VECTOR_INIT_head_0.push_back(AKA_VECTOR_INIT_head_0_0);\n\n\n/* SubStructDataNode AKA_VECTOR_INIT_head_0_1 */\n/* ConstructorDataNode ListNode(int,ListNode*) */\n/* NormalNumberDataNode x */\nint head01_x=-22645202;\n/* PointerStructureDataNode next */\nListNode* head01_next;\nAKA_mark(\"Calling: .\\\\p59\\\\2-add-two-numbers\\\\2-add-two-numbers.cpp\\\\ListNode\\\\ListNode(int,ListNode*)|ROOT\\\\2-add-two-numbers.cpp\\\\addNodeAtLast(ListNode**,int)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\AKA_VECTOR_INIT_head_0_1\\\\AKA_VECTOR_INIT_head_0_1\\\\ListNode(int,ListNode*)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_1 = new ::ListNode(head01_x,head01_next);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_0_1).val=-938172056;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_1).next;\n\nAKA_VECTOR_INIT_AKA_VECTOR_INIT_head_0.push_back(AKA_VECTOR_INIT_head_0_1);\n\nauto AKA_VECTOR_INIT_head_0 = &(AKA_VECTOR_INIT_AKA_VECTOR_INIT_head_0[0]);\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\nListNode** head = AKA_VECTOR_INIT_head[0];\n\n\nint val=-94397360;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode val */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\20-valid-parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName623542 = new char[2];akaRandomName623542[0] = -73;akaRandomName623542[1] = '\\0';string s=akaRandomName623542;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n" ],   "path_fm" : "C:\\Users\\daidu\\Desktop\\Projects\\AKAUT\\prj-data\\Amanhacker_Aman-Barnwal-Leetcode-Solutions\\p59\\20-valid-parentheses\\20-valid-parentheses.cpp\\Solution\\isValid(string)",   "c" : [ "" ],   "t" : [ "void AKA_TEST_Solution_isValid_string_random_4(void) {\n{\nAKA_test_case_name=\"Solution_isValid_string_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\20-valid-parentheses.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName980172 = new char[2];akaRandomName980172[0] = -73;akaRandomName980172[1] = '\\0';string s=akaRandomName980172;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isValid_string_random_4\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isValid(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\p59\\\\20-valid-parentheses\\\\20-valid-parentheses.cpp\\\\Solution\\\\isValid(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],   "f" : [ ],   "fm" : "bool isValid(string s) {\r     \r         int n = s.length();\r         \r         if(n == 0)                                  return true;\r         \r         stack<char> w;\r         \r         for(int i=n-1; i>=0; i--) {\r             \r             char x = s[i];\r             \r             if(x == ')' || x == ']' || x == '}')         w.push(x);\r             \r             else {\r                 \r                 if(w.size() == 0)                       return false;\r                 \r                 char temp = w.top();\r \r                 if(x == '(' && temp == ')')              w.pop();  \r                 else if(x == '{' && temp == '}')         w.pop();  \r                 else if(x == '[' && temp == ']')         w.pop();  \r                 else                                     return false;\r             }\r         }\r         \r         return (w.size() == 0);\r     }" }
]
