[
  {
    "fc": "class Solution {\r public:\r   int kthSmallest(TreeNode* root, int k) {\r     if (root == NULL) return 0;\r     stack<TreeNode *> st;\r     TreeNode *pnode = root;\r     int count = 0;\r     \r     while (pnode != NULL || !st.empty())\r     {\r       if (pnode != NULL)\r       {\r \tst.push(pnode);\r \tpnode = pnode -> left;\r       }\r       else\r       {\r \tpnode = st.top();\r \tst.pop();\r \tcount ++;\r \tif (count == k)\r \t{\r \t  return pnode -> val;\r \t}\r \tpnode = pnode -> right;\r       }\r     }\r     return 0;\r   }\r };",
    "m": [ ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution230.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-912185670;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution230.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution230.cpp\\\\kthSmallest(TreeNode*,int)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=798017542;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution230.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution230.cpp\\\\kthSmallest(TreeNode*,int)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint k=-360956214;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode RETURN */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_24\\solution230.cpp\\Solution\\kthSmallest(TreeNode*,int)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_kthSmallest_TreeNodemul_int_random_5(void) {\n{\nAKA_test_case_name=\"Solution_kthSmallest_TreeNodemul_int_random_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution230.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-912185670;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution230.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution230.cpp\\\\kthSmallest(TreeNode*,int)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=798017542;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution230.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution230.cpp\\\\kthSmallest(TreeNode*,int)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\n\n\nint k=-360956214;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalNumberDataNode k */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_kthSmallest_TreeNodemul_int_random_5\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->kthSmallest(root,k);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_24\\\\solution230.cpp\\\\Solution\\\\kthSmallest(TreeNode*,int)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ],
    "fm": "int kthSmallest(TreeNode* root, int k) {\r     if (root == NULL) return 0;\r     stack<TreeNode *> st;\r     TreeNode *pnode = root;\r     int count = 0;\r     \r     while (pnode != NULL || !st.empty())\r     {\r       if (pnode != NULL)\r       {\r \tst.push(pnode);\r \tpnode = pnode -> left;\r       }\r       else\r       {\r \tpnode = st.top();\r \tst.pop();\r \tcount ++;\r \tif (count == k)\r \t{\r \t  return pnode -> val;\r \t}\r \tpnode = pnode -> right;\r       }\r     }\r     return 0;\r   }"
  },
  {
    "fc": "class Solution {\r public:\r   bool isPowerOfTwo(int n) {\r     int cnt = 0;\r \r     while (n > 0)\r     {\r       cnt += n & 1;\r       n >>= 1;\r     }\r     return cnt == 1;\r   }\r };",
    "m": [ ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution231.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=9;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_24\\solution231.cpp\\Solution\\isPowerOfTwo(int)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_isPowerOfTwo_int_random_7(void) {\n{\nAKA_test_case_name=\"Solution_isPowerOfTwo_int_random_7\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution231.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint n=9;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode n */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPowerOfTwo_int_random_7\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPowerOfTwo(n);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_24\\\\solution231.cpp\\\\Solution\\\\isPowerOfTwo(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ],
    "fm": "bool isPowerOfTwo(int n) {\r     int cnt = 0;\r \r     while (n > 0)\r     {\r       cnt += n & 1;\r       n >>= 1;\r     }\r     return cnt == 1;\r   }"
  },
  {
    "fc": "class Queue {\r private:\r   stack<int> st;\r   stack<int> tmp;\r public:\r   // Push element x to the back of queue.\r   void push(int x) {\r     while (!st.empty())\r     {\r       tmp.push(st.top());\r       st.pop();\r     }\r     st.push(x);\r     while (!tmp.empty())\r     {\r       st.push(tmp.top());\r       tmp.pop();\r     }\r   }\r \r   // Removes the element from in front of queue.\r   void pop(void) {\r     st.pop();\r   }\r \r   // Get the front element.\r   int peek(void) {\r     return st.top();\r   }\r \r   // Return whether the queue is empty.\r   bool empty(void) {\r     return st.empty();\r   }\r };",
    "m": [ ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Queue */\n/* ConstructorDataNode Queue() */\nAKA_mark(\"Calling: \\\\Queue()|ROOT\\\\solution232.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Queue\\\\AKA_INSTANCE___Queue\\\\Queue()\");AKA_fCall++;AKA_INSTANCE___Queue = new ::Queue();\n\n\n\n\nint x=-1978674515;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode x */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_24\\solution232.cpp\\Queue\\push(int)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Queue_push_int_random_6(void) {\n{\nAKA_test_case_name=\"Queue_push_int_random_6\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Queue */\n/* ConstructorDataNode Queue() */\nAKA_mark(\"Calling: \\\\Queue()|ROOT\\\\solution232.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Queue\\\\AKA_INSTANCE___Queue\\\\Queue()\");AKA_fCall++;AKA_INSTANCE___Queue = new ::Queue();\n\n\n\n\nint x=-1978674515;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode x */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Queue_push_int_random_6\");AKA_INSTANCE___Queue->push(x);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_24\\\\solution232.cpp\\\\Queue\\\\push(int)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ "stack<int> st;", "stack<int> tmp;" ],
    "fm": "void push(int x) {\r     while (!st.empty())\r     {\r       tmp.push(st.top());\r       st.pop();\r     }\r     st.push(x);\r     while (!tmp.empty())\r     {\r       st.push(tmp.top());\r       tmp.pop();\r     }\r   }"
  },
  {
    "fc": "class Queue {\r private:\r   stack<int> st;\r   stack<int> tmp;\r public:\r   // Push element x to the back of queue.\r   void push(int x) {\r     while (!st.empty())\r     {\r       tmp.push(st.top());\r       st.pop();\r     }\r     st.push(x);\r     while (!tmp.empty())\r     {\r       st.push(tmp.top());\r       tmp.pop();\r     }\r   }\r \r   // Removes the element from in front of queue.\r   void pop(void) {\r     st.pop();\r   }\r \r   // Get the front element.\r   int peek(void) {\r     return st.top();\r   }\r \r   // Return whether the queue is empty.\r   bool empty(void) {\r     return st.empty();\r   }\r };",
    "m": [ ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Queue */\n/* ConstructorDataNode Queue() */\nAKA_mark(\"Calling: \\\\Queue()|ROOT\\\\solution232.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Queue\\\\AKA_INSTANCE___Queue\\\\Queue()\");AKA_fCall++;AKA_INSTANCE___Queue = new ::Queue();\n\n\n\n/* RootDataNode STATIC */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_24\\solution232.cpp\\Queue\\pop()",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Queue_pop_random_1(void) {\n{\nAKA_test_case_name=\"Queue_pop_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Queue */\n/* ConstructorDataNode Queue() */\nAKA_mark(\"Calling: \\\\Queue()|ROOT\\\\solution232.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Queue\\\\AKA_INSTANCE___Queue\\\\Queue()\");AKA_fCall++;AKA_INSTANCE___Queue = new ::Queue();\n\n\n\n/* RootDataNode STATIC */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Queue_pop_random_1\");AKA_INSTANCE___Queue->pop();\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_24\\\\solution232.cpp\\\\Queue\\\\pop()\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ "stack<int> st;", "stack<int> tmp;" ],
    "fm": "void pop(void) {\r     st.pop();\r   }"
  },
  {
    "fc": "class Queue {\r private:\r   stack<int> st;\r   stack<int> tmp;\r public:\r   // Push element x to the back of queue.\r   void push(int x) {\r     while (!st.empty())\r     {\r       tmp.push(st.top());\r       st.pop();\r     }\r     st.push(x);\r     while (!tmp.empty())\r     {\r       st.push(tmp.top());\r       tmp.pop();\r     }\r   }\r \r   // Removes the element from in front of queue.\r   void pop(void) {\r     st.pop();\r   }\r \r   // Get the front element.\r   int peek(void) {\r     return st.top();\r   }\r \r   // Return whether the queue is empty.\r   bool empty(void) {\r     return st.empty();\r   }\r };",
    "m": [ ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Queue */\n/* ConstructorDataNode Queue() */\nAKA_mark(\"Calling: \\\\Queue()|ROOT\\\\solution232.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Queue\\\\AKA_INSTANCE___Queue\\\\Queue()\");AKA_fCall++;AKA_INSTANCE___Queue = new ::Queue();\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode RETURN */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_24\\solution232.cpp\\Queue\\peek()",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Queue_peek_random_1(void) {\n{\nAKA_test_case_name=\"Queue_peek_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Queue */\n/* ConstructorDataNode Queue() */\nAKA_mark(\"Calling: \\\\Queue()|ROOT\\\\solution232.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Queue\\\\AKA_INSTANCE___Queue\\\\Queue()\");AKA_fCall++;AKA_INSTANCE___Queue = new ::Queue();\n\n\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Queue_peek_random_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Queue->peek();\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_24\\\\solution232.cpp\\\\Queue\\\\peek()\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ "stack<int> st;", "stack<int> tmp;" ],
    "fm": "int peek(void) {\r     return st.top();\r   }"
  },
  {
    "fc": "class Queue {\r private:\r   stack<int> st;\r   stack<int> tmp;\r public:\r   // Push element x to the back of queue.\r   void push(int x) {\r     while (!st.empty())\r     {\r       tmp.push(st.top());\r       st.pop();\r     }\r     st.push(x);\r     while (!tmp.empty())\r     {\r       st.push(tmp.top());\r       tmp.pop();\r     }\r   }\r \r   // Removes the element from in front of queue.\r   void pop(void) {\r     st.pop();\r   }\r \r   // Get the front element.\r   int peek(void) {\r     return st.top();\r   }\r \r   // Return whether the queue is empty.\r   bool empty(void) {\r     return st.empty();\r   }\r };",
    "m": [ ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Queue */\n/* ConstructorDataNode Queue() */\nAKA_mark(\"Calling: \\\\Queue()|ROOT\\\\solution232.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Queue\\\\AKA_INSTANCE___Queue\\\\Queue()\");AKA_fCall++;AKA_INSTANCE___Queue = new ::Queue();\n\n\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode RETURN */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_24\\solution232.cpp\\Queue\\empty()",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Queue_empty_random_1(void) {\n{\nAKA_test_case_name=\"Queue_empty_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Queue */\n/* ConstructorDataNode Queue() */\nAKA_mark(\"Calling: \\\\Queue()|ROOT\\\\solution232.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Queue\\\\AKA_INSTANCE___Queue\\\\Queue()\");AKA_fCall++;AKA_INSTANCE___Queue = new ::Queue();\n\n\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Queue_empty_random_1\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Queue->empty();\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_24\\\\solution232.cpp\\\\Queue\\\\empty()\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ "stack<int> st;", "stack<int> tmp;" ],
    "fm": "bool empty(void) {\r     return st.empty();\r   }"
  },
  {
    "fc": "class Solution {\r public:\r   bool isPalindrome(ListNode* head) {\r     if (head == NULL || head -> next == NULL)\r     {\r       return true;\r     }\r \r     ListNode *fast = head, *slow = head;\r     while (fast != NULL && fast -> next != NULL)\r     {\r       fast = fast -> next -> next;\r       slow = slow -> next;\r     }\r \r     // Reverse partion list from middle to end of list.\r     ListNode *newHead = reverseList(slow);\r     while (newHead != NULL)\r     {\r       if (head -> val != newHead -> val)\r       {\r \treturn false;\r       }\r       newHead = newHead -> next;\r       head = head -> next;\r     }\r     return true;\r   }\r   ListNode *reverseList(ListNode *node)\r   {\r     ListNode *newHead = NULL;\r     while (node != NULL)\r     {\r       ListNode *next = node -> next;\r       node -> next = newHead;\r       newHead = node;\r       node = next;\r     }\r     return newHead;\r   }\r };",
    "m": [ "ListNode *reverseList(ListNode *node)\r\n  {\r\n    ListNode *newHead = NULL;\r\n    while (node != NULL)\r\n    {\r\n      ListNode *next = node -> next;\r\n      node -> next = newHead;\r\n      newHead = node;\r\n      node = next;\r\n    }\r\n    return newHead;\r\n  }", "bool isPalindrome(ListNode* head) {\r\n    if (head == NULL || head -> next == NULL)\r\n    {\r\n      return true;\r\n    }\r\n\r\n    ListNode *fast = head, *slow = head;\r\n    while (fast != NULL && fast -> next != NULL)\r\n    {\r\n      fast = fast -> next -> next;\r\n      slow = slow -> next;\r\n    }\r\n\r\n    // Reverse partion list from middle to end of list.\r\n    ListNode *newHead = reverseList(slow);\r\n    while (newHead != NULL)\r\n    {\r\n      if (head -> val != newHead -> val)\r\n      {\r\n\treturn false;\r\n      }\r\n      newHead = newHead -> next;\r\n      head = head -> next;\r\n    }\r\n    return true;\r\n  }" ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution234.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=-1112817860;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution234.cpp\\\\isPalindrome(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_0).val=-436266742;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next0_x=-952060021;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution234.cpp\\\\isPalindrome(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_0 = new ::ListNode(head0_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).val=-872210059;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next1_x=730251186;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution234.cpp\\\\isPalindrome(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_1 = new ::ListNode(head0_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_0_DOT_next_1).val=1693079043;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_1).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next2_x=-472676530;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution234.cpp\\\\isPalindrome(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[2]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_2 = new ::ListNode(head0_next2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_0_DOT_next_2).val=204809491;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_2).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_2);\n(*AKA_VECTOR_INIT_head_0).next = AKA_VECTOR_INIT_head_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode RETURN */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_24\\solution234.cpp\\Solution\\isPalindrome(ListNode*)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_isPalindrome_ListNodemul_random_6(void) {\n{\nAKA_test_case_name=\"Solution_isPalindrome_ListNodemul_random_6\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution234.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=-1112817860;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution234.cpp\\\\isPalindrome(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_0).val=-436266742;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next0_x=-952060021;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution234.cpp\\\\isPalindrome(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_0 = new ::ListNode(head0_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).val=-872210059;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next1_x=730251186;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution234.cpp\\\\isPalindrome(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_1 = new ::ListNode(head0_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_0_DOT_next_1).val=1693079043;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_1).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next2_x=-472676530;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution234.cpp\\\\isPalindrome(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[2]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_2 = new ::ListNode(head0_next2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head_0_DOT_next_2).val=204809491;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_2).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_2);\n(*AKA_VECTOR_INIT_head_0).next = AKA_VECTOR_INIT_head_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isPalindrome_ListNodemul_random_6\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isPalindrome(head);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_24\\\\solution234.cpp\\\\Solution\\\\isPalindrome(ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ],
    "fm": "bool isPalindrome(ListNode* head) {\r     if (head == NULL || head -> next == NULL)\r     {\r       return true;\r     }\r \r     ListNode *fast = head, *slow = head;\r     while (fast != NULL && fast -> next != NULL)\r     {\r       fast = fast -> next -> next;\r       slow = slow -> next;\r     }\r \r     // Reverse partion list from middle to end of list.\r     ListNode *newHead = reverseList(slow);\r     while (newHead != NULL)\r     {\r       if (head -> val != newHead -> val)\r       {\r \treturn false;\r       }\r       newHead = newHead -> next;\r       head = head -> next;\r     }\r     return true;\r   }"
  },
  {
    "fc": "class Solution {\r public:\r   bool isPalindrome(ListNode* head) {\r     if (head == NULL || head -> next == NULL)\r     {\r       return true;\r     }\r \r     ListNode *fast = head, *slow = head;\r     while (fast != NULL && fast -> next != NULL)\r     {\r       fast = fast -> next -> next;\r       slow = slow -> next;\r     }\r \r     // Reverse partion list from middle to end of list.\r     ListNode *newHead = reverseList(slow);\r     while (newHead != NULL)\r     {\r       if (head -> val != newHead -> val)\r       {\r \treturn false;\r       }\r       newHead = newHead -> next;\r       head = head -> next;\r     }\r     return true;\r   }\r   ListNode *reverseList(ListNode *node)\r   {\r     ListNode *newHead = NULL;\r     while (node != NULL)\r     {\r       ListNode *next = node -> next;\r       node -> next = newHead;\r       newHead = node;\r       node = next;\r     }\r     return newHead;\r   }\r };",
    "m": [ "bool isPalindrome(ListNode* head) {\r\n    if (head == NULL || head -> next == NULL)\r\n    {\r\n      return true;\r\n    }\r\n\r\n    ListNode *fast = head, *slow = head;\r\n    while (fast != NULL && fast -> next != NULL)\r\n    {\r\n      fast = fast -> next -> next;\r\n      slow = slow -> next;\r\n    }\r\n\r\n    // Reverse partion list from middle to end of list.\r\n    ListNode *newHead = reverseList(slow);\r\n    while (newHead != NULL)\r\n    {\r\n      if (head -> val != newHead -> val)\r\n      {\r\n\treturn false;\r\n      }\r\n      newHead = newHead -> next;\r\n      head = head -> next;\r\n    }\r\n    return true;\r\n  }" ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution234.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=2068898482;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution234.cpp\\\\reverseList(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::ListNode(node0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_node_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node0_next0_x=1778873363;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution234.cpp\\\\reverseList(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_next_0 = new ::ListNode(node0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_0_DOT_next_0).next;\nAKA_VECTOR_INIT_node_0_DOT_next.push_back(AKA_VECTOR_INIT_node_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node0_next1_x=0;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution234.cpp\\\\reverseList(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_next_1 = new ::ListNode(node0_next1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_0_DOT_next_1).next;\nAKA_VECTOR_INIT_node_0_DOT_next.push_back(AKA_VECTOR_INIT_node_0_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node0_next2_x=0;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution234.cpp\\\\reverseList(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\next\\\\next[2]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_next_2 = new ::ListNode(node0_next2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_0_DOT_next_2).next;\nAKA_VECTOR_INIT_node_0_DOT_next.push_back(AKA_VECTOR_INIT_node_0_DOT_next_2);\n(*AKA_VECTOR_INIT_node_0).next = AKA_VECTOR_INIT_node_0_DOT_next[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node1_x=-668347591;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution234.cpp\\\\reverseList(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::ListNode(node1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_1).next;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node2_x=797718486;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution234.cpp\\\\reverseList(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_2\\\\node\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_2 = new ::ListNode(node2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_2).next;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_2);\n\nListNode* node = AKA_VECTOR_INIT_node[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* PointerStructureDataNode RETURN */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_24\\solution234.cpp\\Solution\\reverseList(ListNode*)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_reverseList_ListNodemul_random_2(void) {\n{\nAKA_test_case_name=\"Solution_reverseList_ListNodemul_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution234.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=2068898482;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution234.cpp\\\\reverseList(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::ListNode(node0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_node_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node0_next0_x=1778873363;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution234.cpp\\\\reverseList(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_next_0 = new ::ListNode(node0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_0_DOT_next_0).next;\nAKA_VECTOR_INIT_node_0_DOT_next.push_back(AKA_VECTOR_INIT_node_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node0_next1_x=0;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution234.cpp\\\\reverseList(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_next_1 = new ::ListNode(node0_next1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_0_DOT_next_1).next;\nAKA_VECTOR_INIT_node_0_DOT_next.push_back(AKA_VECTOR_INIT_node_0_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node0_next2_x=0;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution234.cpp\\\\reverseList(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\next\\\\next[2]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_next_2 = new ::ListNode(node0_next2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_0_DOT_next_2).next;\nAKA_VECTOR_INIT_node_0_DOT_next.push_back(AKA_VECTOR_INIT_node_0_DOT_next_2);\n(*AKA_VECTOR_INIT_node_0).next = AKA_VECTOR_INIT_node_0_DOT_next[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node1_x=-668347591;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution234.cpp\\\\reverseList(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::ListNode(node1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_1).next;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node2_x=797718486;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution234.cpp\\\\reverseList(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_2\\\\node\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_2 = new ::ListNode(node2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_2).next;\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_2);\n\nListNode* node = AKA_VECTOR_INIT_node[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_reverseList_ListNodemul_random_2\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->reverseList(node);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_24\\\\solution234.cpp\\\\Solution\\\\reverseList(ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ],
    "fm": "ListNode *reverseList(ListNode *node)\r   {\r     ListNode *newHead = NULL;\r     while (node != NULL)\r     {\r       ListNode *next = node -> next;\r       node -> next = newHead;\r       newHead = node;\r       node = next;\r     }\r     return newHead;\r   }"
  },
  {
    "fc": "class Solution {\r public:\r   void deleteNode(ListNode* node) {\r     if (node != NULL)\r       {\r \tnode -> val = node -> next -> val;\r \tnode -> next = node -> next -> next;\r       }\r   }\r };",
    "m": [ ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution237.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=-1546819827;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution237.cpp\\\\deleteNode(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::ListNode(node0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-436315051;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_node_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node0_next0_x=-46297779;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution237.cpp\\\\deleteNode(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_next_0 = new ::ListNode(node0_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_next_0).val=1050822882;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_0_DOT_next_0).next;\nAKA_VECTOR_INIT_node_0_DOT_next.push_back(AKA_VECTOR_INIT_node_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node0_next1_x=-1342619513;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution237.cpp\\\\deleteNode(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_next_1 = new ::ListNode(node0_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_next_1).val=1805938237;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_0_DOT_next_1).next;\nAKA_VECTOR_INIT_node_0_DOT_next.push_back(AKA_VECTOR_INIT_node_0_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node0_next2_x=-1877362419;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution237.cpp\\\\deleteNode(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\next\\\\next[2]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_next_2 = new ::ListNode(node0_next2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_next_2).val=-1881993767;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_0_DOT_next_2).next;\nAKA_VECTOR_INIT_node_0_DOT_next.push_back(AKA_VECTOR_INIT_node_0_DOT_next_2);\n(*AKA_VECTOR_INIT_node_0).next = AKA_VECTOR_INIT_node_0_DOT_next[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node1_x=242278071;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution237.cpp\\\\deleteNode(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::ListNode(node1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-1548233576;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_node_1_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node1_next0_x=-1765811130;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution237.cpp\\\\deleteNode(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_next_0 = new ::ListNode(node1_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_next_0).val=1747173727;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_1_DOT_next_0).next;\nAKA_VECTOR_INIT_node_1_DOT_next.push_back(AKA_VECTOR_INIT_node_1_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node1_next1_x=737202431;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution237.cpp\\\\deleteNode(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_next_1 = new ::ListNode(node1_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_next_1).val=991064229;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_1_DOT_next_1).next;\nAKA_VECTOR_INIT_node_1_DOT_next.push_back(AKA_VECTOR_INIT_node_1_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node1_next2_x=-144180654;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution237.cpp\\\\deleteNode(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\next\\\\next[2]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_next_2 = new ::ListNode(node1_next2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_next_2).val=1222715951;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_1_DOT_next_2).next;\nAKA_VECTOR_INIT_node_1_DOT_next.push_back(AKA_VECTOR_INIT_node_1_DOT_next_2);\n(*AKA_VECTOR_INIT_node_1).next = AKA_VECTOR_INIT_node_1_DOT_next[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node2_x=1068355974;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution237.cpp\\\\deleteNode(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_2\\\\node\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_2 = new ::ListNode(node2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_2).val=-1802400542;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_node_2_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node2_next0_x=-1385139902;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution237.cpp\\\\deleteNode(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_2\\\\node\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_2_DOT_next_0 = new ::ListNode(node2_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_2_DOT_next_0).val=-807542119;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_2_DOT_next_0).next;\nAKA_VECTOR_INIT_node_2_DOT_next.push_back(AKA_VECTOR_INIT_node_2_DOT_next_0);\n(*AKA_VECTOR_INIT_node_2).next = AKA_VECTOR_INIT_node_2_DOT_next[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_2);\n\nListNode* node = AKA_VECTOR_INIT_node[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_24\\solution237.cpp\\Solution\\deleteNode(ListNode*)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_deleteNode_ListNodemul_random_2(void) {\n{\nAKA_test_case_name=\"Solution_deleteNode_ListNodemul_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution237.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_node;\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node0_x=-1546819827;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution237.cpp\\\\deleteNode(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0 = new ::ListNode(node0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0).val=-436315051;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_node_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node0_next0_x=-46297779;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution237.cpp\\\\deleteNode(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_next_0 = new ::ListNode(node0_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_next_0).val=1050822882;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_0_DOT_next_0).next;\nAKA_VECTOR_INIT_node_0_DOT_next.push_back(AKA_VECTOR_INIT_node_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node0_next1_x=-1342619513;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution237.cpp\\\\deleteNode(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_next_1 = new ::ListNode(node0_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_next_1).val=1805938237;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_0_DOT_next_1).next;\nAKA_VECTOR_INIT_node_0_DOT_next.push_back(AKA_VECTOR_INIT_node_0_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node0_next2_x=-1877362419;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution237.cpp\\\\deleteNode(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_0\\\\node\\\\next\\\\next[2]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_0_DOT_next_2 = new ::ListNode(node0_next2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_0_DOT_next_2).val=-1881993767;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_0_DOT_next_2).next;\nAKA_VECTOR_INIT_node_0_DOT_next.push_back(AKA_VECTOR_INIT_node_0_DOT_next_2);\n(*AKA_VECTOR_INIT_node_0).next = AKA_VECTOR_INIT_node_0_DOT_next[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_0);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node1_x=242278071;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution237.cpp\\\\deleteNode(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1 = new ::ListNode(node1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1).val=-1548233576;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_node_1_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node1_next0_x=-1765811130;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution237.cpp\\\\deleteNode(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_next_0 = new ::ListNode(node1_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_next_0).val=1747173727;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_1_DOT_next_0).next;\nAKA_VECTOR_INIT_node_1_DOT_next.push_back(AKA_VECTOR_INIT_node_1_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node1_next1_x=737202431;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution237.cpp\\\\deleteNode(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_next_1 = new ::ListNode(node1_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_next_1).val=991064229;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_1_DOT_next_1).next;\nAKA_VECTOR_INIT_node_1_DOT_next.push_back(AKA_VECTOR_INIT_node_1_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node1_next2_x=-144180654;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution237.cpp\\\\deleteNode(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_1\\\\node\\\\next\\\\next[2]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_1_DOT_next_2 = new ::ListNode(node1_next2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_1_DOT_next_2).val=1222715951;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_1_DOT_next_2).next;\nAKA_VECTOR_INIT_node_1_DOT_next.push_back(AKA_VECTOR_INIT_node_1_DOT_next_2);\n(*AKA_VECTOR_INIT_node_1).next = AKA_VECTOR_INIT_node_1_DOT_next[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_1);\n\n\n/* SubStructDataNode node */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node2_x=1068355974;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution237.cpp\\\\deleteNode(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_2\\\\node\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_2 = new ::ListNode(node2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_2).val=-1802400542;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_node_2_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint node2_next0_x=-1385139902;\nAKA_mark(\"Calling: .\\\\folder_24\\\\solution234.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution237.cpp\\\\deleteNode(ListNode*)\\\\node\\\\AKA_VECTOR_INIT_node_2\\\\node\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_node_2_DOT_next_0 = new ::ListNode(node2_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_node_2_DOT_next_0).val=-807542119;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_node_2_DOT_next_0).next;\nAKA_VECTOR_INIT_node_2_DOT_next.push_back(AKA_VECTOR_INIT_node_2_DOT_next_0);\n(*AKA_VECTOR_INIT_node_2).next = AKA_VECTOR_INIT_node_2_DOT_next[0];\n\nAKA_VECTOR_INIT_node.push_back(AKA_VECTOR_INIT_node_2);\n\nListNode* node = AKA_VECTOR_INIT_node[0];\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode node */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_deleteNode_ListNodemul_random_2\");AKA_INSTANCE___Solution->deleteNode(node);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_24\\\\solution237.cpp\\\\Solution\\\\deleteNode(ListNode*)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ],
    "fm": "void deleteNode(ListNode* node) {\r     if (node != NULL)\r       {\r \tnode -> val = node -> next -> val;\r \tnode -> next = node -> next -> next;\r       }\r   }"
  }
]
