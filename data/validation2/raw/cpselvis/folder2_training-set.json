[
  {
    "fm": "string convert(string s, int numRows) {\r     if (numRows == 1 || s.length() <= numRows)\r     {\r       return s;\r     }\r     string result = \"\";\r     int l = 2 * numRows - 2;\r     for (int i = 0; i < numRows; i ++)\r     {\r       for (int j = i, k = 1; j < s.length(); j += l, k ++)\r       {\r \tresult += s[j];\r \tif (i != 0 && i != numRows - 1 && l * k - i < s.length())\r \t{\r \t  result += s[l * k - i];\r \t}\r       }\t\r     }\r     return result;\r   }",
    "fc": "class Solution {\r public:\r   string convert(string s, int numRows) {\r     if (numRows == 1 || s.length() <= numRows)\r     {\r       return s;\r     }\r     string result = \"\";\r     int l = 2 * numRows - 2;\r     for (int i = 0; i < numRows; i ++)\r     {\r       for (int j = i, k = 1; j < s.length(); j += l, k ++)\r       {\r \tresult += s[j];\r \tif (i != 0 && i != numRows - 1 && l * k - i < s.length())\r \t{\r \t  result += s[l * k - i];\r \t}\r       }\t\r     }\r     return result;\r   }\r };",
    "m": [ ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution006.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring s=\"\";\n\n\nint numRows=3;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode numRows */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution006.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring s=\"\";\n\n\nint numRows=8;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode numRows */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution006.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName610410 = new char[2];akaRandomName610410[0] = 0;akaRandomName610410[1] = '\\0';string s=akaRandomName610410;\n\n\nint numRows=2;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode numRows */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution006.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring s=\"\";\n\n\nint numRows=10;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode numRows */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution006.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring s=\"\";\n\n\nint numRows=7;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode numRows */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution006.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName376196 = new char[2];akaRandomName376196[0] = -82;akaRandomName376196[1] = '\\0';string s=akaRandomName376196;\n\n\nint numRows=1;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode numRows */\n/* NormalStringDataNode RETURN */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_2\\solution006.cpp\\Solution\\convert(string,int)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_convert_string_int_directed_4(void) {\n{\nAKA_test_case_name=\"Solution_convert_string_int_directed_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution006.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring s=\"\";\n\n\nint numRows=3;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode numRows */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_convert_string_int_directed_4\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->convert(s,numRows);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_2\\\\solution006.cpp\\\\Solution\\\\convert(string,int)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_convert_string_int_directed_3(void) {\n{\nAKA_test_case_name=\"Solution_convert_string_int_directed_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution006.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring s=\"\";\n\n\nint numRows=8;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode numRows */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_convert_string_int_directed_3\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->convert(s,numRows);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_2\\\\solution006.cpp\\\\Solution\\\\convert(string,int)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_convert_string_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_convert_string_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution006.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName305628 = new char[2];akaRandomName305628[0] = 0;akaRandomName305628[1] = '\\0';string s=akaRandomName305628;\n\n\nint numRows=2;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode numRows */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_convert_string_int_directed_0\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->convert(s,numRows);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_2\\\\solution006.cpp\\\\Solution\\\\convert(string,int)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_convert_string_int_directed_2(void) {\n{\nAKA_test_case_name=\"Solution_convert_string_int_directed_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution006.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring s=\"\";\n\n\nint numRows=10;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode numRows */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_convert_string_int_directed_2\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->convert(s,numRows);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_2\\\\solution006.cpp\\\\Solution\\\\convert(string,int)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_convert_string_int_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_convert_string_int_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution006.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstring s=\"\";\n\n\nint numRows=7;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode numRows */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_convert_string_int_directed_1\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->convert(s,numRows);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_2\\\\solution006.cpp\\\\Solution\\\\convert(string,int)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_convert_string_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_convert_string_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution006.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName445305 = new char[2];akaRandomName445305[0] = -82;akaRandomName445305[1] = '\\0';string s=akaRandomName445305;\n\n\nint numRows=1;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode numRows */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_convert_string_int_random_2\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->convert(s,numRows);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_2\\\\solution006.cpp\\\\Solution\\\\convert(string,int)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ]
  },
  {
    "fm": "int reverse(int x) {\r \r     // Overflow\r     if (x <= -2147483648 || x == -1563847412 || x >= 1534236469)\r     {\r       return 0;\r     }  \r     \r     int result = 0;\r \r     while (x / 10)\r     {\r       result = result * 10 + x % 10;\r       x /= 10;\r     }\r     result = result * 10 +  x;\r     return result;\r   }",
    "fc": "class Solution {\r public:\r   int reverse(int x) {\r \r     // Overflow\r     if (x <= -2147483648 || x == -1563847412 || x >= 1534236469)\r     {\r       return 0;\r     }  \r     \r     int result = 0;\r \r     while (x / 10)\r     {\r       result = result * 10 + x % 10;\r       x /= 10;\r     }\r     result = result * 10 +  x;\r     return result;\r   }\r };",
    "m": [ ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution007.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint x=6;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode x */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution007.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint x=10;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode x */\n/* NormalNumberDataNode RETURN */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_2\\solution007.cpp\\Solution\\reverse(int)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_reverse_int_random_6(void) {\n{\nAKA_test_case_name=\"Solution_reverse_int_random_6\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution007.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint x=6;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode x */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_reverse_int_random_6\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->reverse(x);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_2\\\\solution007.cpp\\\\Solution\\\\reverse(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_reverse_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_reverse_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution007.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint x=10;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode x */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_reverse_int_random_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->reverse(x);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_2\\\\solution007.cpp\\\\Solution\\\\reverse(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ]
  },
  {
    "fm": "int myAtoi(string str) {\r     /* Filter whitespace.*/\r     int i = 0;\r     int sign = 1;\r     unsigned long long result = 0;\r \r     while (str[i] == ' ')\r     {\r       i ++;\r     }\r \r     /* Parse first non-whitespace character. */\r     if (str[i] != '+' && str[i] != '-' && !isdigit(str[i]))\r     {\r       return 0;\r     }\r \r     if (str[i] == '+')\r     {\r       sign = 1;\r       i ++;\r     }\r     else if (str[i] == '-')\r     {\r       sign = -1;\r       i ++;\r     }\r \r     while (isdigit(str[i]))\r     {\r       result = result * 10 + str[i] - '0';\r       i ++;\r       if (result > INT_MAX)\r       {\r         return (sign == 1) ? INT_MAX : INT_MIN;\r       }\r     }\r     return result * sign;\r   }",
    "fc": "class Solution {\r public:\r   int myAtoi(string str) {\r     /* Filter whitespace.*/\r     int i = 0;\r     int sign = 1;\r     unsigned long long result = 0;\r \r     while (str[i] == ' ')\r     {\r       i ++;\r     }\r \r     /* Parse first non-whitespace character. */\r     if (str[i] != '+' && str[i] != '-' && !isdigit(str[i]))\r     {\r       return 0;\r     }\r \r     if (str[i] == '+')\r     {\r       sign = 1;\r       i ++;\r     }\r     else if (str[i] == '-')\r     {\r       sign = -1;\r       i ++;\r     }\r \r     while (isdigit(str[i]))\r     {\r       result = result * 10 + str[i] - '0';\r       i ++;\r       if (result > INT_MAX)\r       {\r         return (sign == 1) ? INT_MAX : INT_MIN;\r       }\r     }\r     return result * sign;\r   }\r };",
    "m": [ ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution008.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName503826 = new char[2];akaRandomName503826[0] = 32;akaRandomName503826[1] = '\\0';string str=akaRandomName503826;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution008.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName332142 = new char[2];akaRandomName332142[0] = 32;akaRandomName332142[1] = '\\0';string str=akaRandomName332142;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution008.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName41078 = new char[2];akaRandomName41078[0] = 99;akaRandomName41078[1] = '\\0';string str=akaRandomName41078;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution008.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName703881 = new char[3];akaRandomName703881[0] = 32;akaRandomName703881[1] = 32;akaRandomName703881[2] = '\\0';string str=akaRandomName703881;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution008.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName946598 = new char[2];akaRandomName946598[0] = 32;akaRandomName946598[1] = '\\0';string str=akaRandomName946598;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution008.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName393137 = new char[2];akaRandomName393137[0] = 117;akaRandomName393137[1] = '\\0';string str=akaRandomName393137;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution008.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName685834 = new char[2];akaRandomName685834[0] = 43;akaRandomName685834[1] = '\\0';string str=akaRandomName685834;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_2\\solution008.cpp\\Solution\\myAtoi(string)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_myAtoi_string_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_myAtoi_string_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution008.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName495160 = new char[2];akaRandomName495160[0] = 32;akaRandomName495160[1] = '\\0';string str=akaRandomName495160;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_myAtoi_string_directed_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->myAtoi(str);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_2\\\\solution008.cpp\\\\Solution\\\\myAtoi(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_myAtoi_string_directed_2(void) {\n{\nAKA_test_case_name=\"Solution_myAtoi_string_directed_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution008.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName418973 = new char[2];akaRandomName418973[0] = 32;akaRandomName418973[1] = '\\0';string str=akaRandomName418973;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_myAtoi_string_directed_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->myAtoi(str);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_2\\\\solution008.cpp\\\\Solution\\\\myAtoi(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_myAtoi_string_random_3(void) {\n{\nAKA_test_case_name=\"Solution_myAtoi_string_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution008.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName289064 = new char[2];akaRandomName289064[0] = 99;akaRandomName289064[1] = '\\0';string str=akaRandomName289064;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_myAtoi_string_random_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->myAtoi(str);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_2\\\\solution008.cpp\\\\Solution\\\\myAtoi(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_myAtoi_string_directed_3(void) {\n{\nAKA_test_case_name=\"Solution_myAtoi_string_directed_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution008.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName528595 = new char[3];akaRandomName528595[0] = 32;akaRandomName528595[1] = 32;akaRandomName528595[2] = '\\0';string str=akaRandomName528595;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_myAtoi_string_directed_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->myAtoi(str);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_2\\\\solution008.cpp\\\\Solution\\\\myAtoi(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_myAtoi_string_directed_4(void) {\n{\nAKA_test_case_name=\"Solution_myAtoi_string_directed_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution008.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName755122 = new char[2];akaRandomName755122[0] = 32;akaRandomName755122[1] = '\\0';string str=akaRandomName755122;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_myAtoi_string_directed_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->myAtoi(str);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_2\\\\solution008.cpp\\\\Solution\\\\myAtoi(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_myAtoi_string_random_2(void) {\n{\nAKA_test_case_name=\"Solution_myAtoi_string_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution008.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName283776 = new char[2];akaRandomName283776[0] = 117;akaRandomName283776[1] = '\\0';string str=akaRandomName283776;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_myAtoi_string_random_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->myAtoi(str);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_2\\\\solution008.cpp\\\\Solution\\\\myAtoi(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_myAtoi_string_random_1(void) {\n{\nAKA_test_case_name=\"Solution_myAtoi_string_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution008.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName830288 = new char[2];akaRandomName830288[0] = 43;akaRandomName830288[1] = '\\0';string str=akaRandomName830288;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode str */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_myAtoi_string_random_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->myAtoi(str);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_2\\\\solution008.cpp\\\\Solution\\\\myAtoi(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ]
  },
  {
    "fm": "bool isPalindrome(int x) {\r     // negative integers\r     if( x < 0 )\r     {\r       return false;\r     }\r     if( x == 0 )\r     {\r       return true;\r     }\r \r     if (x == reverse(x))\r     {\r       return true;\r     }\r     else\r     {\r       return false;\r     }\r   }",
    "fc": "class Solution {\r public:\r   bool isPalindrome(int x) {\r     // negative integers\r     if( x < 0 )\r     {\r       return false;\r     }\r     if( x == 0 )\r     {\r       return true;\r     }\r \r     if (x == reverse(x))\r     {\r       return true;\r     }\r     else\r     {\r       return false;\r     }\r   }\r \r   int reverse(int x)\r   {\r     int result = 0;\r \r     // Overflow situation\r     if (x < INT_MIN || x > INT_MAX )\r     {\r       return 0;\r     }\r \r     while (x / 10 > 0)\r     {\r       result = result * 10 + x % 10;\r       x /= 10;\r     }\r     result = result * 10 + x;\r     return result;\r   }\r \r };",
    "m": [ "int reverse(int x)\r\n  {\r\n    int result = 0;\r\n\r\n    // Overflow situation\r\n    if (x < INT_MIN || x > INT_MAX )\r\n    {\r\n      return 0;\r\n    }\r\n\r\n    while (x / 10 > 0)\r\n    {\r\n      result = result * 10 + x % 10;\r\n      x /= 10;\r\n    }\r\n    result = result * 10 + x;\r\n    return result;\r\n  }" ],
    "simplified_t": [ ],
    "path_fm": "D:\\py\\test\\folder_2\\solution009.cpp\\Solution\\isPalindrome(int)",
    "c": [ "" ],
    "t": [ ],
    "f": [ ]
  },
  {
    "fm": "int reverse(int x)\r   {\r     int result = 0;\r \r     // Overflow situation\r     if (x < INT_MIN || x > INT_MAX )\r     {\r       return 0;\r     }\r \r     while (x / 10 > 0)\r     {\r       result = result * 10 + x % 10;\r       x /= 10;\r     }\r     result = result * 10 + x;\r     return result;\r   }",
    "fc": "class Solution {\r public:\r   bool isPalindrome(int x) {\r     // negative integers\r     if( x < 0 )\r     {\r       return false;\r     }\r     if( x == 0 )\r     {\r       return true;\r     }\r \r     if (x == reverse(x))\r     {\r       return true;\r     }\r     else\r     {\r       return false;\r     }\r   }\r \r   int reverse(int x)\r   {\r     int result = 0;\r \r     // Overflow situation\r     if (x < INT_MIN || x > INT_MAX )\r     {\r       return 0;\r     }\r \r     while (x / 10 > 0)\r     {\r       result = result * 10 + x % 10;\r       x /= 10;\r     }\r     result = result * 10 + x;\r     return result;\r   }\r \r };",
    "m": [ "bool isPalindrome(int x) {\r\n    // negative integers\r\n    if( x < 0 )\r\n    {\r\n      return false;\r\n    }\r\n    if( x == 0 )\r\n    {\r\n      return true;\r\n    }\r\n\r\n    if (x == reverse(x))\r\n    {\r\n      return true;\r\n    }\r\n    else\r\n    {\r\n      return false;\r\n    }\r\n  }" ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution009.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint x=1;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode x */\n/* NormalNumberDataNode RETURN */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_2\\solution009.cpp\\Solution\\reverse(int)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_reverse_int_random_8(void) {\n{\nAKA_test_case_name=\"Solution_reverse_int_random_8\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution009.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint x=1;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode x */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_reverse_int_random_8\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->reverse(x);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_2\\\\solution009.cpp\\\\Solution\\\\reverse(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ]
  },
  {
    "fm": "bool isMatch(const char *s, const char *p) {\r     if (s == NULL || p == NULL)\r       return false;\r \r     if (*p == '\\0')\r       return *s == '\\0';\r \r     if (*(p + 1) == '*')\r     {\r       while ((*s != '\\0' &&  *p == '.') || *s == *p)\r       {\r \tif (isMatch(s, p + 2))\r \t  return true;\r \ts ++;\r       }\r       return isMatch(s, p + 2);\r     }\r     else if ((*s != '\\0' && *p == '.') || *s == *p)\r     {\r       return isMatch(s + 1, p + 1);\r     }\r \r     return false;\r   }",
    "fc": "class Solution {\r public:\r   bool isMatch(const char *s, const char *p) {\r     if (s == NULL || p == NULL)\r       return false;\r \r     if (*p == '\\0')\r       return *s == '\\0';\r \r     if (*(p + 1) == '*')\r     {\r       while ((*s != '\\0' &&  *p == '.') || *s == *p)\r       {\r \tif (isMatch(s, p + 2))\r \t  return true;\r \ts ++;\r       }\r       return isMatch(s, p + 2);\r     }\r     else if ((*s != '\\0' && *p == '.') || *s == *p)\r     {\r       return isMatch(s + 1, p + 1);\r     }\r \r     return false;\r   }\r };",
    "m": [ "bool isMatch(const char *s, const char *p) {\r\n    if (s == NULL || p == NULL)\r\n      return false;\r\n\r\n    if (*p == '\\0')\r\n      return *s == '\\0';\r\n\r\n    if (*(p + 1) == '*')\r\n    {\r\n      while ((*s != '\\0' &&  *p == '.') || *s == *p)\r\n      {\r\n\tif (isMatch(s, p + 2))\r\n\t  return true;\r\n\ts ++;\r\n      }\r\n      return isMatch(s, p + 2);\r\n    }\r\n    else if ((*s != '\\0' && *p == '.') || *s == *p)\r\n    {\r\n      return isMatch(s + 1, p + 1);\r\n    }\r\n\r\n    return false;\r\n  }", "bool isMatch(const char *s, const char *p) {\r\n    if (s == NULL || p == NULL)\r\n      return false;\r\n\r\n    if (*p == '\\0')\r\n      return *s == '\\0';\r\n\r\n    if (*(p + 1) == '*')\r\n    {\r\n      while ((*s != '\\0' &&  *p == '.') || *s == *p)\r\n      {\r\n\tif (isMatch(s, p + 2))\r\n\t  return true;\r\n\ts ++;\r\n      }\r\n      return isMatch(s, p + 2);\r\n    }\r\n    else if ((*s != '\\0' && *p == '.') || *s == *p)\r\n    {\r\n      return isMatch(s + 1, p + 1);\r\n    }\r\n\r\n    return false;\r\n  }" ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution010.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar AKA_ARRAY_INIT_s[2];\n\nchar AKA_ARRAY_INIT_s_constantPointer_0=107;\nAKA_ARRAY_INIT_s[0] = AKA_ARRAY_INIT_s_constantPointer_0;\n\nchar AKA_ARRAY_INIT_s_constantPointer_1=8;\nAKA_ARRAY_INIT_s[1] = AKA_ARRAY_INIT_s_constantPointer_1;\n\nchar const* s = AKA_ARRAY_INIT_s;\nchar const* p;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerCharacterDataNode s */\n/* PointerCharacterDataNode p */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution010.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar AKA_ARRAY_INIT_s[2];\n\nchar AKA_ARRAY_INIT_s_constantPointer_0=-77;\nAKA_ARRAY_INIT_s[0] = AKA_ARRAY_INIT_s_constantPointer_0;\n\nchar AKA_ARRAY_INIT_s_constantPointer_1=94;\nAKA_ARRAY_INIT_s[1] = AKA_ARRAY_INIT_s_constantPointer_1;\n\nchar const* s = AKA_ARRAY_INIT_s;\nchar AKA_ARRAY_INIT_p[2];\n\nchar AKA_ARRAY_INIT_p_constantPointer_0=114;\nAKA_ARRAY_INIT_p[0] = AKA_ARRAY_INIT_p_constantPointer_0;\n\nchar AKA_ARRAY_INIT_p_constantPointer_1=0;\nAKA_ARRAY_INIT_p[1] = AKA_ARRAY_INIT_p_constantPointer_1;\n\nchar const* p = AKA_ARRAY_INIT_p;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerCharacterDataNode s */\n/* PointerCharacterDataNode p */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution010.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar AKA_ARRAY_INIT_s[2];\n\nchar AKA_ARRAY_INIT_s_constantPointer_0=-107;\nAKA_ARRAY_INIT_s[0] = AKA_ARRAY_INIT_s_constantPointer_0;\n\nchar AKA_ARRAY_INIT_s_constantPointer_1=110;\nAKA_ARRAY_INIT_s[1] = AKA_ARRAY_INIT_s_constantPointer_1;\n\nchar const* s = AKA_ARRAY_INIT_s;\nchar AKA_ARRAY_INIT_p[2];\n\nchar AKA_ARRAY_INIT_p_constantPointer_0=9;\nAKA_ARRAY_INIT_p[0] = AKA_ARRAY_INIT_p_constantPointer_0;\n\nchar AKA_ARRAY_INIT_p_constantPointer_1=0;\nAKA_ARRAY_INIT_p[1] = AKA_ARRAY_INIT_p_constantPointer_1;\n\nchar const* p = AKA_ARRAY_INIT_p;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerCharacterDataNode s */\n/* PointerCharacterDataNode p */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution010.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar AKA_ARRAY_INIT_s[2];\n\nchar AKA_ARRAY_INIT_s_constantPointer_0=118;\nAKA_ARRAY_INIT_s[0] = AKA_ARRAY_INIT_s_constantPointer_0;\n\nchar AKA_ARRAY_INIT_s_constantPointer_1=-83;\nAKA_ARRAY_INIT_s[1] = AKA_ARRAY_INIT_s_constantPointer_1;\n\nchar const* s = AKA_ARRAY_INIT_s;\nchar const* p;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerCharacterDataNode s */\n/* PointerCharacterDataNode p */\n/* NormalNumberDataNode RETURN */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_2\\solution010.cpp\\Solution\\isMatch(char const*,char const*)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_isMatch_char_constmul_char_constmul_random_5(void) {\n{\nAKA_test_case_name=\"Solution_isMatch_char_constmul_char_constmul_random_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution010.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar AKA_ARRAY_INIT_s[2];\n\nchar AKA_ARRAY_INIT_s_constantPointer_0=107;\nAKA_ARRAY_INIT_s[0] = AKA_ARRAY_INIT_s_constantPointer_0;\n\nchar AKA_ARRAY_INIT_s_constantPointer_1=8;\nAKA_ARRAY_INIT_s[1] = AKA_ARRAY_INIT_s_constantPointer_1;\n\nchar const* s = AKA_ARRAY_INIT_s;\nchar const* p;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerCharacterDataNode s */\n/* PointerCharacterDataNode p */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isMatch_char_constmul_char_constmul_random_5\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isMatch(s,p);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_2\\\\solution010.cpp\\\\Solution\\\\isMatch(char const*,char const*)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_isMatch_char_constmul_char_constmul_random_6(void) {\n{\nAKA_test_case_name=\"Solution_isMatch_char_constmul_char_constmul_random_6\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution010.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar AKA_ARRAY_INIT_s[2];\n\nchar AKA_ARRAY_INIT_s_constantPointer_0=-77;\nAKA_ARRAY_INIT_s[0] = AKA_ARRAY_INIT_s_constantPointer_0;\n\nchar AKA_ARRAY_INIT_s_constantPointer_1=94;\nAKA_ARRAY_INIT_s[1] = AKA_ARRAY_INIT_s_constantPointer_1;\n\nchar const* s = AKA_ARRAY_INIT_s;\nchar AKA_ARRAY_INIT_p[2];\n\nchar AKA_ARRAY_INIT_p_constantPointer_0=114;\nAKA_ARRAY_INIT_p[0] = AKA_ARRAY_INIT_p_constantPointer_0;\n\nchar AKA_ARRAY_INIT_p_constantPointer_1=0;\nAKA_ARRAY_INIT_p[1] = AKA_ARRAY_INIT_p_constantPointer_1;\n\nchar const* p = AKA_ARRAY_INIT_p;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerCharacterDataNode s */\n/* PointerCharacterDataNode p */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isMatch_char_constmul_char_constmul_random_6\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isMatch(s,p);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_2\\\\solution010.cpp\\\\Solution\\\\isMatch(char const*,char const*)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_isMatch_char_constmul_char_constmul_random_0(void) {\n{\nAKA_test_case_name=\"Solution_isMatch_char_constmul_char_constmul_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution010.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar AKA_ARRAY_INIT_s[2];\n\nchar AKA_ARRAY_INIT_s_constantPointer_0=-107;\nAKA_ARRAY_INIT_s[0] = AKA_ARRAY_INIT_s_constantPointer_0;\n\nchar AKA_ARRAY_INIT_s_constantPointer_1=110;\nAKA_ARRAY_INIT_s[1] = AKA_ARRAY_INIT_s_constantPointer_1;\n\nchar const* s = AKA_ARRAY_INIT_s;\nchar AKA_ARRAY_INIT_p[2];\n\nchar AKA_ARRAY_INIT_p_constantPointer_0=9;\nAKA_ARRAY_INIT_p[0] = AKA_ARRAY_INIT_p_constantPointer_0;\n\nchar AKA_ARRAY_INIT_p_constantPointer_1=0;\nAKA_ARRAY_INIT_p[1] = AKA_ARRAY_INIT_p_constantPointer_1;\n\nchar const* p = AKA_ARRAY_INIT_p;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerCharacterDataNode s */\n/* PointerCharacterDataNode p */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isMatch_char_constmul_char_constmul_random_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isMatch(s,p);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_2\\\\solution010.cpp\\\\Solution\\\\isMatch(char const*,char const*)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_isMatch_char_constmul_char_constmul_random_1(void) {\n{\nAKA_test_case_name=\"Solution_isMatch_char_constmul_char_constmul_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution010.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar AKA_ARRAY_INIT_s[2];\n\nchar AKA_ARRAY_INIT_s_constantPointer_0=118;\nAKA_ARRAY_INIT_s[0] = AKA_ARRAY_INIT_s_constantPointer_0;\n\nchar AKA_ARRAY_INIT_s_constantPointer_1=-83;\nAKA_ARRAY_INIT_s[1] = AKA_ARRAY_INIT_s_constantPointer_1;\n\nchar const* s = AKA_ARRAY_INIT_s;\nchar const* p;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerCharacterDataNode s */\n/* PointerCharacterDataNode p */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isMatch_char_constmul_char_constmul_random_1\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isMatch(s,p);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_2\\\\solution010.cpp\\\\Solution\\\\isMatch(char const*,char const*)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ]
  }
]
