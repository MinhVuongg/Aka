[
  {
    "fc": "class Solution {\r public:\r   ListNode* insertionSortList(ListNode* head) {\r     while (head == NULL || head -> next == NULL)\r     {\r       return head;\r     }\r \r     ListNode *dummy = new ListNode(-1);\r     dummy -> next = head;\r \r     ListNode *curr = head;\r     while (curr -> next != NULL)\r     {\r       if (curr -> next -> val < curr -> val)\r       {\r \tListNode *pre = dummy;\r \twhile (pre -> next -> val < curr -> next -> val)\r \t{\r \t  pre = pre -> next;\r \t}\r \tListNode *tmp = curr -> next;\r \tcurr -> next = tmp -> next;\r \ttmp -> next = pre -> next;\r \tpre -> next = tmp;\r       }\r       else\r       {\r \tcurr = curr -> next;\r       }\r     }\r     return dummy -> next;\r   }\r };",
    "m": [ "ListNode* insertionSortList(ListNode* head) {\r\n    while (head == NULL || head -> next == NULL)\r\n    {\r\n      return head;\r\n    }\r\n\r\n    ListNode *dummy = new ListNode(-1);\r\n    dummy -> next = head;\r\n\r\n    ListNode *curr = head;\r\n    while (curr -> next != NULL)\r\n    {\r\n      if (curr -> next -> val < curr -> val)\r\n      {\r\n\tListNode *pre = dummy;\r\n\twhile (pre -> next -> val < curr -> next -> val)\r\n\t{\r\n\t  pre = pre -> next;\r\n\t}\r\n\tListNode *tmp = curr -> next;\r\n\tcurr -> next = tmp -> next;\r\n\ttmp -> next = pre -> next;\r\n\tpre -> next = tmp;\r\n      }\r\n      else\r\n      {\r\n\tcurr = curr -> next;\r\n      }\r\n    }\r\n    return dummy -> next;\r\n  }" ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution147.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=-1763523601;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution147.cpp\\\\insertionSortList(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next0_x=1518157293;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution147.cpp\\\\insertionSortList(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_0 = new ::ListNode(head0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_0);\n(*AKA_VECTOR_INIT_head_0).next = AKA_VECTOR_INIT_head_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=1749089610;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution147.cpp\\\\insertionSortList(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution147.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=458325078;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution147.cpp\\\\insertionSortList(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next0_x=-922404764;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution147.cpp\\\\insertionSortList(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_0 = new ::ListNode(head0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next1_x=0;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution147.cpp\\\\insertionSortList(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_1 = new ::ListNode(head0_next1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_1).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_1);\n(*AKA_VECTOR_INIT_head_0).next = AKA_VECTOR_INIT_head_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution147.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=-330727214;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution147.cpp\\\\insertionSortList(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* PointerStructureDataNode RETURN */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_19\\solution147.cpp\\Solution\\insertionSortList(ListNode*)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_insertionSortList_ListNodemul_random_5(void) {\n{\nAKA_test_case_name=\"Solution_insertionSortList_ListNodemul_random_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution147.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=-1763523601;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution147.cpp\\\\insertionSortList(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next0_x=1518157293;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution147.cpp\\\\insertionSortList(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_0 = new ::ListNode(head0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_0);\n(*AKA_VECTOR_INIT_head_0).next = AKA_VECTOR_INIT_head_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head1_x=1749089610;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution147.cpp\\\\insertionSortList(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_1\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_1 = new ::ListNode(head1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_1).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_1);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_insertionSortList_ListNodemul_random_5\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->insertionSortList(head);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_19\\\\solution147.cpp\\\\Solution\\\\insertionSortList(ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_insertionSortList_ListNodemul_random_4(void) {\n{\nAKA_test_case_name=\"Solution_insertionSortList_ListNodemul_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution147.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=458325078;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution147.cpp\\\\insertionSortList(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next0_x=-922404764;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution147.cpp\\\\insertionSortList(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_0 = new ::ListNode(head0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next1_x=0;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution147.cpp\\\\insertionSortList(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_1 = new ::ListNode(head0_next1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_1).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_1);\n(*AKA_VECTOR_INIT_head_0).next = AKA_VECTOR_INIT_head_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_insertionSortList_ListNodemul_random_4\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->insertionSortList(head);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_19\\\\solution147.cpp\\\\Solution\\\\insertionSortList(ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_insertionSortList_ListNodemul_random_3(void) {\n{\nAKA_test_case_name=\"Solution_insertionSortList_ListNodemul_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution147.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=-330727214;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution147.cpp\\\\insertionSortList(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0).next;\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_insertionSortList_ListNodemul_random_3\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->insertionSortList(head);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_19\\\\solution147.cpp\\\\Solution\\\\insertionSortList(ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ],
    "fm": "ListNode* insertionSortList(ListNode* head) {\r     while (head == NULL || head -> next == NULL)\r     {\r       return head;\r     }\r \r     ListNode *dummy = new ListNode(-1);\r     dummy -> next = head;\r \r     ListNode *curr = head;\r     while (curr -> next != NULL)\r     {\r       if (curr -> next -> val < curr -> val)\r       {\r \tListNode *pre = dummy;\r \twhile (pre -> next -> val < curr -> next -> val)\r \t{\r \t  pre = pre -> next;\r \t}\r \tListNode *tmp = curr -> next;\r \tcurr -> next = tmp -> next;\r \ttmp -> next = pre -> next;\r \tpre -> next = tmp;\r       }\r       else\r       {\r \tcurr = curr -> next;\r       }\r     }\r     return dummy -> next;\r   }"
  },
  {
    "fc": "class Solution {\r public:\r   ListNode* sortList(ListNode* head) {\r     if (head == NULL || head -> next == NULL)\r       return head;\r     ListNode *slow = head;\r     ListNode *fast = head;\r     ListNode *pre = NULL;\r     while (fast && fast -> next)\r     {\r       pre = slow;\r       slow = slow -> next;\r       fast = fast -> next -> next;\r     }\r     pre -> next = NULL;\r     ListNode *l1 = sortList(head);\r     ListNode *l2 = sortList(slow);\r     return merge(l1, l2);\r   }\r \r   ListNode *merge(ListNode *head1, ListNode *head2)\r   {\r     if (head1 == NULL) return head2;\r     if (head2 == NULL) return head1;\r \r     ListNode *dummy = new ListNode(-1);\r     ListNode *newHead = dummy;\r     while (head1 != NULL && head2 != NULL)\r     {\r       if (head1 -> val < head2 -> val)\r       {\r \tnewHead -> next = head1;\r \thead1 = head1 -> next;\r       }\r       else\r       {\r \tnewHead -> next = head2;\r \thead2 = head2 -> next;\r       }\r       newHead = newHead -> next;\r     }\r     if (head1 != NULL)\r     {\r       newHead -> next = head1;\r     }\r     else if (head2 != NULL)\r     {\r       newHead -> next = head2;\r     }\r     return dummy -> next;\r   }\r };",
    "m": [ "ListNode* sortList(ListNode* head) {\r\n    if (head == NULL || head -> next == NULL)\r\n      return head;\r\n    ListNode *slow = head;\r\n    ListNode *fast = head;\r\n    ListNode *pre = NULL;\r\n    while (fast && fast -> next)\r\n    {\r\n      pre = slow;\r\n      slow = slow -> next;\r\n      fast = fast -> next -> next;\r\n    }\r\n    pre -> next = NULL;\r\n    ListNode *l1 = sortList(head);\r\n    ListNode *l2 = sortList(slow);\r\n    return merge(l1, l2);\r\n  }", "ListNode* sortList(ListNode* head) {\r\n    if (head == NULL || head -> next == NULL)\r\n      return head;\r\n    ListNode *slow = head;\r\n    ListNode *fast = head;\r\n    ListNode *pre = NULL;\r\n    while (fast && fast -> next)\r\n    {\r\n      pre = slow;\r\n      slow = slow -> next;\r\n      fast = fast -> next -> next;\r\n    }\r\n    pre -> next = NULL;\r\n    ListNode *l1 = sortList(head);\r\n    ListNode *l2 = sortList(slow);\r\n    return merge(l1, l2);\r\n  }", "ListNode *merge(ListNode *head1, ListNode *head2)\r\n  {\r\n    if (head1 == NULL) return head2;\r\n    if (head2 == NULL) return head1;\r\n\r\n    ListNode *dummy = new ListNode(-1);\r\n    ListNode *newHead = dummy;\r\n    while (head1 != NULL && head2 != NULL)\r\n    {\r\n      if (head1 -> val < head2 -> val)\r\n      {\r\n\tnewHead -> next = head1;\r\n\thead1 = head1 -> next;\r\n      }\r\n      else\r\n      {\r\n\tnewHead -> next = head2;\r\n\thead2 = head2 -> next;\r\n      }\r\n      newHead = newHead -> next;\r\n    }\r\n    if (head1 != NULL)\r\n    {\r\n      newHead -> next = head1;\r\n    }\r\n    else if (head2 != NULL)\r\n    {\r\n      newHead -> next = head2;\r\n    }\r\n    return dummy -> next;\r\n  }", "ListNode* sortList(ListNode* head) {\r\n    if (head == NULL || head -> next == NULL)\r\n      return head;\r\n    ListNode *slow = head;\r\n    ListNode *fast = head;\r\n    ListNode *pre = NULL;\r\n    while (fast && fast -> next)\r\n    {\r\n      pre = slow;\r\n      slow = slow -> next;\r\n      fast = fast -> next -> next;\r\n    }\r\n    pre -> next = NULL;\r\n    ListNode *l1 = sortList(head);\r\n    ListNode *l2 = sortList(slow);\r\n    return merge(l1, l2);\r\n  }" ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution148.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=-421196457;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\sortList(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next0_x=-628814890;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\sortList(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_0 = new ::ListNode(head0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_0);\n(*AKA_VECTOR_INIT_head_0).next = AKA_VECTOR_INIT_head_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* PointerStructureDataNode RETURN */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_19\\solution148.cpp\\Solution\\sortList(ListNode*)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_sortList_ListNodemul_random_0(void) {\n{\nAKA_test_case_name=\"Solution_sortList_ListNodemul_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution148.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head;\n\n\n/* SubStructDataNode head */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_x=-421196457;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\sortList(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0 = new ::ListNode(head0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head0_next0_x=-628814890;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\sortList(ListNode*)\\\\head\\\\AKA_VECTOR_INIT_head_0\\\\head\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head_0_DOT_next_0 = new ::ListNode(head0_next0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head_0_DOT_next.push_back(AKA_VECTOR_INIT_head_0_DOT_next_0);\n(*AKA_VECTOR_INIT_head_0).next = AKA_VECTOR_INIT_head_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head.push_back(AKA_VECTOR_INIT_head_0);\n\nListNode* head = AKA_VECTOR_INIT_head[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_sortList_ListNodemul_random_0\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->sortList(head);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_19\\\\solution148.cpp\\\\Solution\\\\sortList(ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ],
    "fm": "ListNode* sortList(ListNode* head) {\r     if (head == NULL || head -> next == NULL)\r       return head;\r     ListNode *slow = head;\r     ListNode *fast = head;\r     ListNode *pre = NULL;\r     while (fast && fast -> next)\r     {\r       pre = slow;\r       slow = slow -> next;\r       fast = fast -> next -> next;\r     }\r     pre -> next = NULL;\r     ListNode *l1 = sortList(head);\r     ListNode *l2 = sortList(slow);\r     return merge(l1, l2);\r   }"
  },
  {
    "fc": "class Solution {\r public:\r   ListNode* sortList(ListNode* head) {\r     if (head == NULL || head -> next == NULL)\r       return head;\r     ListNode *slow = head;\r     ListNode *fast = head;\r     ListNode *pre = NULL;\r     while (fast && fast -> next)\r     {\r       pre = slow;\r       slow = slow -> next;\r       fast = fast -> next -> next;\r     }\r     pre -> next = NULL;\r     ListNode *l1 = sortList(head);\r     ListNode *l2 = sortList(slow);\r     return merge(l1, l2);\r   }\r \r   ListNode *merge(ListNode *head1, ListNode *head2)\r   {\r     if (head1 == NULL) return head2;\r     if (head2 == NULL) return head1;\r \r     ListNode *dummy = new ListNode(-1);\r     ListNode *newHead = dummy;\r     while (head1 != NULL && head2 != NULL)\r     {\r       if (head1 -> val < head2 -> val)\r       {\r \tnewHead -> next = head1;\r \thead1 = head1 -> next;\r       }\r       else\r       {\r \tnewHead -> next = head2;\r \thead2 = head2 -> next;\r       }\r       newHead = newHead -> next;\r     }\r     if (head1 != NULL)\r     {\r       newHead -> next = head1;\r     }\r     else if (head2 != NULL)\r     {\r       newHead -> next = head2;\r     }\r     return dummy -> next;\r   }\r };",
    "m": [ "ListNode* sortList(ListNode* head) {\r\n    if (head == NULL || head -> next == NULL)\r\n      return head;\r\n    ListNode *slow = head;\r\n    ListNode *fast = head;\r\n    ListNode *pre = NULL;\r\n    while (fast && fast -> next)\r\n    {\r\n      pre = slow;\r\n      slow = slow -> next;\r\n      fast = fast -> next -> next;\r\n    }\r\n    pre -> next = NULL;\r\n    ListNode *l1 = sortList(head);\r\n    ListNode *l2 = sortList(slow);\r\n    return merge(l1, l2);\r\n  }", "ListNode *merge(ListNode *head1, ListNode *head2)\r\n  {\r\n    if (head1 == NULL) return head2;\r\n    if (head2 == NULL) return head1;\r\n\r\n    ListNode *dummy = new ListNode(-1);\r\n    ListNode *newHead = dummy;\r\n    while (head1 != NULL && head2 != NULL)\r\n    {\r\n      if (head1 -> val < head2 -> val)\r\n      {\r\n\tnewHead -> next = head1;\r\n\thead1 = head1 -> next;\r\n      }\r\n      else\r\n      {\r\n\tnewHead -> next = head2;\r\n\thead2 = head2 -> next;\r\n      }\r\n      newHead = newHead -> next;\r\n    }\r\n    if (head1 != NULL)\r\n    {\r\n      newHead -> next = head1;\r\n    }\r\n    else if (head2 != NULL)\r\n    {\r\n      newHead -> next = head2;\r\n    }\r\n    return dummy -> next;\r\n  }" ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution148.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head1;\n\n\n/* SubStructDataNode head1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head10_x=-457111775;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head1\\\\AKA_VECTOR_INIT_head1_0\\\\head1\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head1_0 = new ::ListNode(head10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head1_0).val=-595416692;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head1_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head10_next0_x=-428502283;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head1\\\\AKA_VECTOR_INIT_head1_0\\\\head1\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head1_0_DOT_next_0 = new ::ListNode(head10_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head1_0_DOT_next_0).val=-565665316;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head1_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head1_0_DOT_next.push_back(AKA_VECTOR_INIT_head1_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head10_next1_x=440765955;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head1\\\\AKA_VECTOR_INIT_head1_0\\\\head1\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head1_0_DOT_next_1 = new ::ListNode(head10_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head1_0_DOT_next_1).val=91293914;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head1_0_DOT_next_1).next;\nAKA_VECTOR_INIT_head1_0_DOT_next.push_back(AKA_VECTOR_INIT_head1_0_DOT_next_1);\n(*AKA_VECTOR_INIT_head1_0).next = AKA_VECTOR_INIT_head1_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head1.push_back(AKA_VECTOR_INIT_head1_0);\n\n\n/* SubStructDataNode head1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head11_x=1925140526;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head1\\\\AKA_VECTOR_INIT_head1_1\\\\head1\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head1_1 = new ::ListNode(head11_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head1_1).val=-925187721;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head1_1).next;\n\nAKA_VECTOR_INIT_head1.push_back(AKA_VECTOR_INIT_head1_1);\n\nListNode* head1 = AKA_VECTOR_INIT_head1[0];\nstd::vector<ListNode*> AKA_VECTOR_INIT_head2;\n\n\n/* SubStructDataNode head2 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head20_x=1604236180;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head2\\\\AKA_VECTOR_INIT_head2_0\\\\head2\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head2_0 = new ::ListNode(head20_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head2_0).val=-505553715;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head2_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head20_next0_x=1161502399;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head2\\\\AKA_VECTOR_INIT_head2_0\\\\head2\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head2_0_DOT_next_0 = new ::ListNode(head20_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head2_0_DOT_next_0).val=1661314000;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head2_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head2_0_DOT_next.push_back(AKA_VECTOR_INIT_head2_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head20_next1_x=203521716;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head2\\\\AKA_VECTOR_INIT_head2_0\\\\head2\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head2_0_DOT_next_1 = new ::ListNode(head20_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head2_0_DOT_next_1).val=913000003;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head2_0_DOT_next_1).next;\nAKA_VECTOR_INIT_head2_0_DOT_next.push_back(AKA_VECTOR_INIT_head2_0_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head20_next2_x=966259297;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head2\\\\AKA_VECTOR_INIT_head2_0\\\\head2\\\\next\\\\next[2]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head2_0_DOT_next_2 = new ::ListNode(head20_next2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head2_0_DOT_next_2).val=-834638577;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head2_0_DOT_next_2).next;\nAKA_VECTOR_INIT_head2_0_DOT_next.push_back(AKA_VECTOR_INIT_head2_0_DOT_next_2);\n(*AKA_VECTOR_INIT_head2_0).next = AKA_VECTOR_INIT_head2_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head2.push_back(AKA_VECTOR_INIT_head2_0);\n\nListNode* head2 = AKA_VECTOR_INIT_head2[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head1 */\n/* PointerStructureDataNode head2 */\n/* PointerStructureDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution148.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head1;\n\n\n/* SubStructDataNode head1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head10_x=64125942;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head1\\\\AKA_VECTOR_INIT_head1_0\\\\head1\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head1_0 = new ::ListNode(head10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head1_0).val=-1180261045;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head1_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head10_next0_x=724845865;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head1\\\\AKA_VECTOR_INIT_head1_0\\\\head1\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head1_0_DOT_next_0 = new ::ListNode(head10_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head1_0_DOT_next_0).val=-256439822;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head1_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head1_0_DOT_next.push_back(AKA_VECTOR_INIT_head1_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head10_next1_x=1432493374;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head1\\\\AKA_VECTOR_INIT_head1_0\\\\head1\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head1_0_DOT_next_1 = new ::ListNode(head10_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head1_0_DOT_next_1).val=37299809;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head1_0_DOT_next_1).next;\nAKA_VECTOR_INIT_head1_0_DOT_next.push_back(AKA_VECTOR_INIT_head1_0_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head10_next2_x=-2027795636;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head1\\\\AKA_VECTOR_INIT_head1_0\\\\head1\\\\next\\\\next[2]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head1_0_DOT_next_2 = new ::ListNode(head10_next2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head1_0_DOT_next_2).val=-1760630114;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head1_0_DOT_next_2).next;\nAKA_VECTOR_INIT_head1_0_DOT_next.push_back(AKA_VECTOR_INIT_head1_0_DOT_next_2);\n(*AKA_VECTOR_INIT_head1_0).next = AKA_VECTOR_INIT_head1_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head1.push_back(AKA_VECTOR_INIT_head1_0);\n\n\n/* SubStructDataNode head1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head11_x=354605535;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head1\\\\AKA_VECTOR_INIT_head1_1\\\\head1\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head1_1 = new ::ListNode(head11_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head1_1).val=-1545774266;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head1_1_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head11_next0_x=340160934;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head1\\\\AKA_VECTOR_INIT_head1_1\\\\head1\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head1_1_DOT_next_0 = new ::ListNode(head11_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head1_1_DOT_next_0).val=267834697;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head1_1_DOT_next_0).next;\nAKA_VECTOR_INIT_head1_1_DOT_next.push_back(AKA_VECTOR_INIT_head1_1_DOT_next_0);\n(*AKA_VECTOR_INIT_head1_1).next = AKA_VECTOR_INIT_head1_1_DOT_next[0];\n\nAKA_VECTOR_INIT_head1.push_back(AKA_VECTOR_INIT_head1_1);\n\n\n/* SubStructDataNode head1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head12_x=-997780635;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head1\\\\AKA_VECTOR_INIT_head1_2\\\\head1\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head1_2 = new ::ListNode(head12_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head1_2).val=744693423;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head1_2).next;\n\nAKA_VECTOR_INIT_head1.push_back(AKA_VECTOR_INIT_head1_2);\n\nListNode* head1 = AKA_VECTOR_INIT_head1[0];\nstd::vector<ListNode*> AKA_VECTOR_INIT_head2;\n\n\n/* SubStructDataNode head2 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head20_x=-1614521480;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head2\\\\AKA_VECTOR_INIT_head2_0\\\\head2\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head2_0 = new ::ListNode(head20_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head2_0).val=-848552339;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head2_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head20_next0_x=599227370;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head2\\\\AKA_VECTOR_INIT_head2_0\\\\head2\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head2_0_DOT_next_0 = new ::ListNode(head20_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head2_0_DOT_next_0).val=-1181523051;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head2_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head2_0_DOT_next.push_back(AKA_VECTOR_INIT_head2_0_DOT_next_0);\n(*AKA_VECTOR_INIT_head2_0).next = AKA_VECTOR_INIT_head2_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head2.push_back(AKA_VECTOR_INIT_head2_0);\n\n\n/* SubStructDataNode head2 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head21_x=-1389119961;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head2\\\\AKA_VECTOR_INIT_head2_1\\\\head2\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head2_1 = new ::ListNode(head21_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head2_1).val=1594219673;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head2_1_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head21_next0_x=1740241348;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head2\\\\AKA_VECTOR_INIT_head2_1\\\\head2\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head2_1_DOT_next_0 = new ::ListNode(head21_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head2_1_DOT_next_0).val=1663984388;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head2_1_DOT_next_0).next;\nAKA_VECTOR_INIT_head2_1_DOT_next.push_back(AKA_VECTOR_INIT_head2_1_DOT_next_0);\n(*AKA_VECTOR_INIT_head2_1).next = AKA_VECTOR_INIT_head2_1_DOT_next[0];\n\nAKA_VECTOR_INIT_head2.push_back(AKA_VECTOR_INIT_head2_1);\n\nListNode* head2 = AKA_VECTOR_INIT_head2[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head1 */\n/* PointerStructureDataNode head2 */\n/* PointerStructureDataNode RETURN */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_19\\solution148.cpp\\Solution\\merge(ListNode*,ListNode*)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_merge_ListNodemul_ListNodemul_random_1(void) {\n{\nAKA_test_case_name=\"Solution_merge_ListNodemul_ListNodemul_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution148.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head1;\n\n\n/* SubStructDataNode head1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head10_x=-457111775;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head1\\\\AKA_VECTOR_INIT_head1_0\\\\head1\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head1_0 = new ::ListNode(head10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head1_0).val=-595416692;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head1_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head10_next0_x=-428502283;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head1\\\\AKA_VECTOR_INIT_head1_0\\\\head1\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head1_0_DOT_next_0 = new ::ListNode(head10_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head1_0_DOT_next_0).val=-565665316;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head1_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head1_0_DOT_next.push_back(AKA_VECTOR_INIT_head1_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head10_next1_x=440765955;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head1\\\\AKA_VECTOR_INIT_head1_0\\\\head1\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head1_0_DOT_next_1 = new ::ListNode(head10_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head1_0_DOT_next_1).val=91293914;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head1_0_DOT_next_1).next;\nAKA_VECTOR_INIT_head1_0_DOT_next.push_back(AKA_VECTOR_INIT_head1_0_DOT_next_1);\n(*AKA_VECTOR_INIT_head1_0).next = AKA_VECTOR_INIT_head1_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head1.push_back(AKA_VECTOR_INIT_head1_0);\n\n\n/* SubStructDataNode head1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head11_x=1925140526;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head1\\\\AKA_VECTOR_INIT_head1_1\\\\head1\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head1_1 = new ::ListNode(head11_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head1_1).val=-925187721;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head1_1).next;\n\nAKA_VECTOR_INIT_head1.push_back(AKA_VECTOR_INIT_head1_1);\n\nListNode* head1 = AKA_VECTOR_INIT_head1[0];\nstd::vector<ListNode*> AKA_VECTOR_INIT_head2;\n\n\n/* SubStructDataNode head2 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head20_x=1604236180;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head2\\\\AKA_VECTOR_INIT_head2_0\\\\head2\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head2_0 = new ::ListNode(head20_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head2_0).val=-505553715;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head2_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head20_next0_x=1161502399;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head2\\\\AKA_VECTOR_INIT_head2_0\\\\head2\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head2_0_DOT_next_0 = new ::ListNode(head20_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head2_0_DOT_next_0).val=1661314000;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head2_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head2_0_DOT_next.push_back(AKA_VECTOR_INIT_head2_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head20_next1_x=203521716;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head2\\\\AKA_VECTOR_INIT_head2_0\\\\head2\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head2_0_DOT_next_1 = new ::ListNode(head20_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head2_0_DOT_next_1).val=913000003;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head2_0_DOT_next_1).next;\nAKA_VECTOR_INIT_head2_0_DOT_next.push_back(AKA_VECTOR_INIT_head2_0_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head20_next2_x=966259297;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head2\\\\AKA_VECTOR_INIT_head2_0\\\\head2\\\\next\\\\next[2]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head2_0_DOT_next_2 = new ::ListNode(head20_next2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head2_0_DOT_next_2).val=-834638577;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head2_0_DOT_next_2).next;\nAKA_VECTOR_INIT_head2_0_DOT_next.push_back(AKA_VECTOR_INIT_head2_0_DOT_next_2);\n(*AKA_VECTOR_INIT_head2_0).next = AKA_VECTOR_INIT_head2_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head2.push_back(AKA_VECTOR_INIT_head2_0);\n\nListNode* head2 = AKA_VECTOR_INIT_head2[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head1 */\n/* PointerStructureDataNode head2 */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_merge_ListNodemul_ListNodemul_random_1\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->merge(head1,head2);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_19\\\\solution148.cpp\\\\Solution\\\\merge(ListNode*,ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_merge_ListNodemul_ListNodemul_random_2(void) {\n{\nAKA_test_case_name=\"Solution_merge_ListNodemul_ListNodemul_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution148.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<ListNode*> AKA_VECTOR_INIT_head1;\n\n\n/* SubStructDataNode head1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head10_x=64125942;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head1\\\\AKA_VECTOR_INIT_head1_0\\\\head1\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head1_0 = new ::ListNode(head10_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head1_0).val=-1180261045;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head1_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head10_next0_x=724845865;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head1\\\\AKA_VECTOR_INIT_head1_0\\\\head1\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head1_0_DOT_next_0 = new ::ListNode(head10_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head1_0_DOT_next_0).val=-256439822;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head1_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head1_0_DOT_next.push_back(AKA_VECTOR_INIT_head1_0_DOT_next_0);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head10_next1_x=1432493374;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head1\\\\AKA_VECTOR_INIT_head1_0\\\\head1\\\\next\\\\next[1]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head1_0_DOT_next_1 = new ::ListNode(head10_next1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head1_0_DOT_next_1).val=37299809;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head1_0_DOT_next_1).next;\nAKA_VECTOR_INIT_head1_0_DOT_next.push_back(AKA_VECTOR_INIT_head1_0_DOT_next_1);\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head10_next2_x=-2027795636;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head1\\\\AKA_VECTOR_INIT_head1_0\\\\head1\\\\next\\\\next[2]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head1_0_DOT_next_2 = new ::ListNode(head10_next2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head1_0_DOT_next_2).val=-1760630114;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head1_0_DOT_next_2).next;\nAKA_VECTOR_INIT_head1_0_DOT_next.push_back(AKA_VECTOR_INIT_head1_0_DOT_next_2);\n(*AKA_VECTOR_INIT_head1_0).next = AKA_VECTOR_INIT_head1_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head1.push_back(AKA_VECTOR_INIT_head1_0);\n\n\n/* SubStructDataNode head1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head11_x=354605535;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head1\\\\AKA_VECTOR_INIT_head1_1\\\\head1\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head1_1 = new ::ListNode(head11_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head1_1).val=-1545774266;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head1_1_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head11_next0_x=340160934;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head1\\\\AKA_VECTOR_INIT_head1_1\\\\head1\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head1_1_DOT_next_0 = new ::ListNode(head11_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head1_1_DOT_next_0).val=267834697;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head1_1_DOT_next_0).next;\nAKA_VECTOR_INIT_head1_1_DOT_next.push_back(AKA_VECTOR_INIT_head1_1_DOT_next_0);\n(*AKA_VECTOR_INIT_head1_1).next = AKA_VECTOR_INIT_head1_1_DOT_next[0];\n\nAKA_VECTOR_INIT_head1.push_back(AKA_VECTOR_INIT_head1_1);\n\n\n/* SubStructDataNode head1 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head12_x=-997780635;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head1\\\\AKA_VECTOR_INIT_head1_2\\\\head1\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head1_2 = new ::ListNode(head12_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head1_2).val=744693423;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head1_2).next;\n\nAKA_VECTOR_INIT_head1.push_back(AKA_VECTOR_INIT_head1_2);\n\nListNode* head1 = AKA_VECTOR_INIT_head1[0];\nstd::vector<ListNode*> AKA_VECTOR_INIT_head2;\n\n\n/* SubStructDataNode head2 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head20_x=-1614521480;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head2\\\\AKA_VECTOR_INIT_head2_0\\\\head2\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head2_0 = new ::ListNode(head20_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head2_0).val=-848552339;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head2_0_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head20_next0_x=599227370;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head2\\\\AKA_VECTOR_INIT_head2_0\\\\head2\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head2_0_DOT_next_0 = new ::ListNode(head20_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head2_0_DOT_next_0).val=-1181523051;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head2_0_DOT_next_0).next;\nAKA_VECTOR_INIT_head2_0_DOT_next.push_back(AKA_VECTOR_INIT_head2_0_DOT_next_0);\n(*AKA_VECTOR_INIT_head2_0).next = AKA_VECTOR_INIT_head2_0_DOT_next[0];\n\nAKA_VECTOR_INIT_head2.push_back(AKA_VECTOR_INIT_head2_0);\n\n\n/* SubStructDataNode head2 */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head21_x=-1389119961;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head2\\\\AKA_VECTOR_INIT_head2_1\\\\head2\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head2_1 = new ::ListNode(head21_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head2_1).val=1594219673;\n/* PointerStructureDataNode next */\nstd::vector<ListNode*> AKA_VECTOR_INIT_head2_1_DOT_next;\n/* SubStructDataNode next */\n/* ConstructorDataNode ListNode(int) */\n/* NormalNumberDataNode x */\nint head21_next0_x=1740241348;\nAKA_mark(\"Calling: .\\\\folder_19\\\\solution147.cpp\\\\ListNode\\\\ListNode(int)|ROOT\\\\solution148.cpp\\\\merge(ListNode*,ListNode*)\\\\head2\\\\AKA_VECTOR_INIT_head2_1\\\\head2\\\\next\\\\next[0]\\\\next\\\\ListNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_head2_1_DOT_next_0 = new ::ListNode(head21_next0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_head2_1_DOT_next_0).val=1663984388;\n/* PointerStructureDataNode next */\n(*AKA_VECTOR_INIT_head2_1_DOT_next_0).next;\nAKA_VECTOR_INIT_head2_1_DOT_next.push_back(AKA_VECTOR_INIT_head2_1_DOT_next_0);\n(*AKA_VECTOR_INIT_head2_1).next = AKA_VECTOR_INIT_head2_1_DOT_next[0];\n\nAKA_VECTOR_INIT_head2.push_back(AKA_VECTOR_INIT_head2_1);\n\nListNode* head2 = AKA_VECTOR_INIT_head2[0];\nListNode* AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode head1 */\n/* PointerStructureDataNode head2 */\n/* PointerStructureDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_merge_ListNodemul_ListNodemul_random_2\");ListNode* AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->merge(head1,head2);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_19\\\\solution148.cpp\\\\Solution\\\\merge(ListNode*,ListNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ],
    "fm": "ListNode *merge(ListNode *head1, ListNode *head2)\r   {\r     if (head1 == NULL) return head2;\r     if (head2 == NULL) return head1;\r \r     ListNode *dummy = new ListNode(-1);\r     ListNode *newHead = dummy;\r     while (head1 != NULL && head2 != NULL)\r     {\r       if (head1 -> val < head2 -> val)\r       {\r \tnewHead -> next = head1;\r \thead1 = head1 -> next;\r       }\r       else\r       {\r \tnewHead -> next = head2;\r \thead2 = head2 -> next;\r       }\r       newHead = newHead -> next;\r     }\r     if (head1 != NULL)\r     {\r       newHead -> next = head1;\r     }\r     else if (head2 != NULL)\r     {\r       newHead -> next = head2;\r     }\r     return dummy -> next;\r   }"
  },
  {
    "fc": "class Solution {\r public:\r   int evalRPN(vector<string>& tokens) {\r     stack<int> st;\r \r     for (int i = 0; i < tokens.size(); i ++)\r     {\r       if (tokens[i] != \"+\" && tokens[i] != \"-\" && tokens[i] != \"*\" && tokens[i] != \"/\")\r       {\r \tst.push(atoi(tokens[i].c_str()));\r       }\t\r       else\r       {\r \tint num1 = st.top();\r \tst.pop();\r \tint num2 = st.top();\r \tst.pop();\r \tint tmp;\r \tif (tokens[i] == \"+\")\r \t{  \r \t  tmp = num2 + num1;\r         }\r         else if (tokens[i] == \"-\")\r \t{\r \t  tmp = num2 - num1;\r \t}\r \telse if (tokens[i] == \"*\")\r \t{  \r \t  tmp = num2 * num1;\r \t}\r \telse if (tokens[i] == \"/\")\r \t{\r           tmp = num2 / num1;\r \t}\r \tst.push(tmp);\r       }\r     }\r     return st.top();\r   }\r };",
    "m": [ ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution150.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> tokens;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode tokens */\nchar* akaRandomName258890 = new char[2];akaRandomName258890[0] = 64;akaRandomName258890[1] = '\\0';string tokens_element0=akaRandomName258890;\ntokens.push_back(tokens_element0);\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution150.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> tokens;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode tokens */\nchar* akaRandomName422888 = new char[2];akaRandomName422888[0] = 43;akaRandomName422888[1] = '\\0';string tokens_element0=akaRandomName422888;\ntokens.push_back(tokens_element0);\nchar* akaRandomName818377 = new char[2];akaRandomName818377[0] = -120;akaRandomName818377[1] = '\\0';string tokens_element1=akaRandomName818377;\ntokens.push_back(tokens_element1);\nchar* akaRandomName387681 = new char[2];akaRandomName387681[0] = 16;akaRandomName387681[1] = '\\0';string tokens_element2=akaRandomName387681;\ntokens.push_back(tokens_element2);\n/* NormalNumberDataNode RETURN */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_19\\solution150.cpp\\Solution\\evalRPN(vector<string>&)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_evalRPN_vector_string_random_3(void) {\n{\nAKA_test_case_name=\"Solution_evalRPN_vector_string_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution150.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> tokens;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode tokens */\nchar* akaRandomName439978 = new char[2];akaRandomName439978[0] = 64;akaRandomName439978[1] = '\\0';string tokens_element0=akaRandomName439978;\ntokens.push_back(tokens_element0);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_evalRPN_vector_string_random_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->evalRPN(tokens);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_19\\\\solution150.cpp\\\\Solution\\\\evalRPN(vector<string>&)\");\n\n\nvector<string> EXPECTED_tokens;\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_evalRPN_vector_string_random_5(void) {\n{\nAKA_test_case_name=\"Solution_evalRPN_vector_string_random_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution150.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> tokens;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode tokens */\nchar* akaRandomName714510 = new char[2];akaRandomName714510[0] = 43;akaRandomName714510[1] = '\\0';string tokens_element0=akaRandomName714510;\ntokens.push_back(tokens_element0);\nchar* akaRandomName913859 = new char[2];akaRandomName913859[0] = -120;akaRandomName913859[1] = '\\0';string tokens_element1=akaRandomName913859;\ntokens.push_back(tokens_element1);\nchar* akaRandomName735626 = new char[2];akaRandomName735626[0] = 16;akaRandomName735626[1] = '\\0';string tokens_element2=akaRandomName735626;\ntokens.push_back(tokens_element2);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_evalRPN_vector_string_random_5\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->evalRPN(tokens);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_19\\\\solution150.cpp\\\\Solution\\\\evalRPN(vector<string>&)\");\n\n\nvector<string> EXPECTED_tokens;\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ],
    "fm": "int evalRPN(vector<string>& tokens) {\r     stack<int> st;\r \r     for (int i = 0; i < tokens.size(); i ++)\r     {\r       if (tokens[i] != \"+\" && tokens[i] != \"-\" && tokens[i] != \"*\" && tokens[i] != \"/\")\r       {\r \tst.push(atoi(tokens[i].c_str()));\r       }\t\r       else\r       {\r \tint num1 = st.top();\r \tst.pop();\r \tint num2 = st.top();\r \tst.pop();\r \tint tmp;\r \tif (tokens[i] == \"+\")\r \t{  \r \t  tmp = num2 + num1;\r         }\r         else if (tokens[i] == \"-\")\r \t{\r \t  tmp = num2 - num1;\r \t}\r \telse if (tokens[i] == \"*\")\r \t{  \r \t  tmp = num2 * num1;\r \t}\r \telse if (tokens[i] == \"/\")\r \t{\r           tmp = num2 / num1;\r \t}\r \tst.push(tmp);\r       }\r     }\r     return st.top();\r   }"
  },
  {
    "fc": "class Solution {\r public:\r   void reverseWords(string &s) {\r     stripSpaces(s);\r     reverse(s.begin(), s.end());\r     int i, j;\r     for (i = 0, j =  0; j < s.size(); j ++ )\r     {\r       if (s[j] == ' ')\r       {\r \treverse(s.begin() + i, s.begin() + j);\r \ti = j + 1;\r       }\r     }\r     reverse(s.begin() + i, s.end());\r   }\r   void stripSpaces(string &s)\r   {\r     // Remove leading spaces before a string\r     while(s.size() > 0 && s[0] == ' ')\r     {\r       s.erase(0, 1);\r     }\r     s += ' ';\r     // Remove center space\r     for (int i = 0; i < s.size(); i ++)\r     {\r       while (s[i] == ' ' && s[i + 1] == ' ')\r       {\r \ts.erase(i, 1);\r       }\r     }\r     // Remove last space\r     s.erase(s.size() - 1, 1);\r   }\r };",
    "m": [ "void stripSpaces(string &s)\r\n  {\r\n    // Remove leading spaces before a string\r\n    while(s.size() > 0 && s[0] == ' ')\r\n    {\r\n      s.erase(0, 1);\r\n    }\r\n    s += ' ';\r\n    // Remove center space\r\n    for (int i = 0; i < s.size(); i ++)\r\n    {\r\n      while (s[i] == ' ' && s[i + 1] == ' ')\r\n      {\r\n\ts.erase(i, 1);\r\n      }\r\n    }\r\n    // Remove last space\r\n    s.erase(s.size() - 1, 1);\r\n  }" ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution151.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName436310 = new char[2];akaRandomName436310[0] = -43;akaRandomName436310[1] = '\\0';string s=akaRandomName436310;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_19\\solution151.cpp\\Solution\\reverseWords(string&)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_reverseWords_string_random_1(void) {\n{\nAKA_test_case_name=\"Solution_reverseWords_string_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution151.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName922109 = new char[2];akaRandomName922109[0] = -43;akaRandomName922109[1] = '\\0';string s=akaRandomName922109;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_reverseWords_string_random_1\");AKA_INSTANCE___Solution->reverseWords(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_19\\\\solution151.cpp\\\\Solution\\\\reverseWords(string&)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ],
    "fm": "void reverseWords(string &s) {\r     stripSpaces(s);\r     reverse(s.begin(), s.end());\r     int i, j;\r     for (i = 0, j =  0; j < s.size(); j ++ )\r     {\r       if (s[j] == ' ')\r       {\r \treverse(s.begin() + i, s.begin() + j);\r \ti = j + 1;\r       }\r     }\r     reverse(s.begin() + i, s.end());\r   }"
  },
  {
    "fc": "class Solution {\r public:\r   void reverseWords(string &s) {\r     stripSpaces(s);\r     reverse(s.begin(), s.end());\r     int i, j;\r     for (i = 0, j =  0; j < s.size(); j ++ )\r     {\r       if (s[j] == ' ')\r       {\r \treverse(s.begin() + i, s.begin() + j);\r \ti = j + 1;\r       }\r     }\r     reverse(s.begin() + i, s.end());\r   }\r   void stripSpaces(string &s)\r   {\r     // Remove leading spaces before a string\r     while(s.size() > 0 && s[0] == ' ')\r     {\r       s.erase(0, 1);\r     }\r     s += ' ';\r     // Remove center space\r     for (int i = 0; i < s.size(); i ++)\r     {\r       while (s[i] == ' ' && s[i + 1] == ' ')\r       {\r \ts.erase(i, 1);\r       }\r     }\r     // Remove last space\r     s.erase(s.size() - 1, 1);\r   }\r };",
    "m": [ "void reverseWords(string &s) {\r\n    stripSpaces(s);\r\n    reverse(s.begin(), s.end());\r\n    int i, j;\r\n    for (i = 0, j =  0; j < s.size(); j ++ )\r\n    {\r\n      if (s[j] == ' ')\r\n      {\r\n\treverse(s.begin() + i, s.begin() + j);\r\n\ti = j + 1;\r\n      }\r\n    }\r\n    reverse(s.begin() + i, s.end());\r\n  }" ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution151.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName899663 = new char[2];akaRandomName899663[0] = -72;akaRandomName899663[1] = '\\0';string s=akaRandomName899663;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_19\\solution151.cpp\\Solution\\stripSpaces(string&)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_stripSpaces_string_random_5(void) {\n{\nAKA_test_case_name=\"Solution_stripSpaces_string_random_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution151.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName233316 = new char[2];akaRandomName233316[0] = -72;akaRandomName233316[1] = '\\0';string s=akaRandomName233316;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_stripSpaces_string_random_5\");AKA_INSTANCE___Solution->stripSpaces(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_19\\\\solution151.cpp\\\\Solution\\\\stripSpaces(string&)\");\n\n/* error assertion */\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ],
    "fm": "void stripSpaces(string &s)\r   {\r     // Remove leading spaces before a string\r     while(s.size() > 0 && s[0] == ' ')\r     {\r       s.erase(0, 1);\r     }\r     s += ' ';\r     // Remove center space\r     for (int i = 0; i < s.size(); i ++)\r     {\r       while (s[i] == ' ' && s[i + 1] == ' ')\r       {\r \ts.erase(i, 1);\r       }\r     }\r     // Remove last space\r     s.erase(s.size() - 1, 1);\r   }"
  },
  {
    "fc": "class Solution {\r public:\r   int findMin(vector<int>& nums) {\r     return find(nums, 0, nums.size() - 1);\r   }\r \r   int find(vector<int> &nums, int left, int right)\r   {\r     if (nums[left] <= nums[right])\r     {\r       return nums[left];\r     }\r     int mid = (left + right) >> 1;\r \r     if (nums[mid] > nums[right])\r     {\r       return find(nums, mid + 1, right);\r     }\r     return find(nums, left, mid);\r   }\r };",
    "m": [ "int find(vector<int> &nums, int left, int right)\r\n  {\r\n    if (nums[left] <= nums[right])\r\n    {\r\n      return nums[left];\r\n    }\r\n    int mid = (left + right) >> 1;\r\n\r\n    if (nums[mid] > nums[right])\r\n    {\r\n      return find(nums, mid + 1, right);\r\n    }\r\n    return find(nums, left, mid);\r\n  }" ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution153.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=1957107378;\nnums.push_back(nums_element0);\nint nums_element1=-985302208;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode RETURN */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_19\\solution153.cpp\\Solution\\findMin(vector<int>&)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_findMin_vector_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_findMin_vector_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution153.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=1957107378;\nnums.push_back(nums_element0);\nint nums_element1=-985302208;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_findMin_vector_int_random_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->findMin(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_19\\\\solution153.cpp\\\\Solution\\\\findMin(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ],
    "fm": "int findMin(vector<int>& nums) {\r     return find(nums, 0, nums.size() - 1);\r   }"
  },
  {
    "fc": "class Solution {\r public:\r   int findMin(vector<int>& nums) {\r     return find(nums, 0, nums.size() - 1);\r   }\r \r   int find(vector<int> &nums, int left, int right)\r   {\r     if (nums[left] <= nums[right])\r     {\r       return nums[left];\r     }\r     int mid = (left + right) >> 1;\r \r     if (nums[mid] > nums[right])\r     {\r       return find(nums, mid + 1, right);\r     }\r     return find(nums, left, mid);\r   }\r };",
    "m": [ "int findMin(vector<int>& nums) {\r\n    return find(nums, 0, nums.size() - 1);\r\n  }", "int find(vector<int> &nums, int left, int right)\r\n  {\r\n    if (nums[left] <= nums[right])\r\n    {\r\n      return nums[left];\r\n    }\r\n    int mid = (left + right) >> 1;\r\n\r\n    if (nums[mid] > nums[right])\r\n    {\r\n      return find(nums, mid + 1, right);\r\n    }\r\n    return find(nums, left, mid);\r\n  }", "int find(vector<int> &nums, int left, int right)\r\n  {\r\n    if (nums[left] <= nums[right])\r\n    {\r\n      return nums[left];\r\n    }\r\n    int mid = (left + right) >> 1;\r\n\r\n    if (nums[mid] > nums[right])\r\n    {\r\n      return find(nums, mid + 1, right);\r\n    }\r\n    return find(nums, left, mid);\r\n  }" ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution153.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint left=285049627;\n\n\nint right=-2076789829;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=101807771;\nnums.push_back(nums_element0);\nint nums_element1=-1621106053;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode left */\n/* NormalNumberDataNode right */\n/* NormalNumberDataNode RETURN */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_19\\solution153.cpp\\Solution\\find(vector<int>&,int,int)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_find_vector_int_int_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_find_vector_int_int_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution153.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n\nint left=285049627;\n\n\nint right=-2076789829;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=101807771;\nnums.push_back(nums_element0);\nint nums_element1=-1621106053;\nnums.push_back(nums_element1);\n/* NormalNumberDataNode left */\n/* NormalNumberDataNode right */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_find_vector_int_int_int_random_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->find(nums,left,right);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_19\\\\solution153.cpp\\\\Solution\\\\find(vector<int>&,int,int)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ],
    "fm": "int find(vector<int> &nums, int left, int right)\r   {\r     if (nums[left] <= nums[right])\r     {\r       return nums[left];\r     }\r     int mid = (left + right) >> 1;\r \r     if (nums[mid] > nums[right])\r     {\r       return find(nums, mid + 1, right);\r     }\r     return find(nums, left, mid);\r   }"
  }
]
