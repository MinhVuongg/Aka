[
  {
    "fm": "int maxArea(vector<int>& height) {\r     int max = 0, size = height.size(), area, distance, h, min;\r \r     int i = 0, j = size - 1;\r \r     while (i < j)\r     {\r       distance = j - i;\r       if (height[i] < height[j])\r       {\r \tmin = height[i];\r \ti ++;\r       }\r       else\r       {\r \tmin = height[j];\r \tj --;\r       }\r       area = distance = distance * min;\r       max = area > max ? area : max;\r     }\r     return max;\r   }",
    "fc": "class Solution {\r public:\r   int maxArea(vector<int>& height) {\r     int max = 0, size = height.size(), area, distance, h, min;\r \r     int i = 0, j = size - 1;\r \r     while (i < j)\r     {\r       distance = j - i;\r       if (height[i] < height[j])\r       {\r \tmin = height[i];\r \ti ++;\r       }\r       else\r       {\r \tmin = height[j];\r \tj --;\r       }\r       area = distance = distance * min;\r       max = area > max ? area : max;\r     }\r     return max;\r   }\r };",
    "m": [ ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution011.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> height;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode height */\nint height_element0=-1331207166;\nheight.push_back(height_element0);\nint height_element1=876398027;\nheight.push_back(height_element1);\nint height_element2=281168828;\nheight.push_back(height_element2);\n/* NormalNumberDataNode RETURN */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_3\\solution011.cpp\\Solution\\maxArea(vector<int>&)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_maxArea_vector_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_maxArea_vector_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution011.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> height;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode height */\nint height_element0=-1331207166;\nheight.push_back(height_element0);\nint height_element1=876398027;\nheight.push_back(height_element1);\nint height_element2=281168828;\nheight.push_back(height_element2);\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_maxArea_vector_int_random_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->maxArea(height);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution011.cpp\\\\Solution\\\\maxArea(vector<int>&)\");\n\n\nvector<int> EXPECTED_height;\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ]
  },
  {
    "fm": "string intToRoman(int num) {\r     string output = \"\";\r     string roman_str[] = {\"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"};\r     int roman_int[] = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\r \r     for (int i = 0; i < 13; i ++)\r     {\r       while (num >= roman_int[i])\r       {\r \tnum -= roman_int[i];\r \toutput += roman_str[i];\r       }\r     }\r     return output;\r   }",
    "fc": "class Solution {\r public:\r   string intToRoman(int num) {\r     string output = \"\";\r     string roman_str[] = {\"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"};\r     int roman_int[] = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\r \r     for (int i = 0; i < 13; i ++)\r     {\r       while (num >= roman_int[i])\r       {\r \tnum -= roman_int[i];\r \toutput += roman_str[i];\r       }\r     }\r     return output;\r   }\r };",
    "m": [ ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution012.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=8;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalStringDataNode RETURN */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_3\\solution012.cpp\\Solution\\intToRoman(int)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_intToRoman_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_intToRoman_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution012.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=8;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_intToRoman_int_random_3\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->intToRoman(num);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution012.cpp\\\\Solution\\\\intToRoman(int)\");\n\n\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ]
  },
  {
    "fm": "int romanToInt(string s) {\r     unordered_map<char, int> umap;\r     umap.insert(make_pair('I', 1));\r     umap.insert(make_pair('V', 5));\r     umap.insert(make_pair('X', 10));\r     umap.insert(make_pair('L', 50));\r     umap.insert(make_pair('C', 100));\r     umap.insert(make_pair('D', 500));\r     umap.insert(make_pair('M', 1000));\r \r     int output = 0, last = 0, current;\r     for (int i = 0; i < s.length(); i ++)\r     {\r       if (umap.find(s[i]) != umap.end())\r       {\r \tcurrent = umap[s[i]];\r \toutput += current;\r \tif (current > last)\r \t{\r \t  output -= 2 * last;\r \t}\r \tlast = current;\r       }\r     }\r \r     return output;\r   }",
    "fc": "class Solution {\r public:\r   int romanToInt(string s) {\r     unordered_map<char, int> umap;\r     umap.insert(make_pair('I', 1));\r     umap.insert(make_pair('V', 5));\r     umap.insert(make_pair('X', 10));\r     umap.insert(make_pair('L', 50));\r     umap.insert(make_pair('C', 100));\r     umap.insert(make_pair('D', 500));\r     umap.insert(make_pair('M', 1000));\r \r     int output = 0, last = 0, current;\r     for (int i = 0; i < s.length(); i ++)\r     {\r       if (umap.find(s[i]) != umap.end())\r       {\r \tcurrent = umap[s[i]];\r \toutput += current;\r \tif (current > last)\r \t{\r \t  output -= 2 * last;\r \t}\r \tlast = current;\r       }\r     }\r \r     return output;\r   }\r };",
    "m": [ ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName238298 = new char[2];akaRandomName238298[0] = 0;akaRandomName238298[1] = '\\0';string s=akaRandomName238298;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName898420 = new char[3];akaRandomName898420[0] = 0;akaRandomName898420[1] = 0;akaRandomName898420[2] = '\\0';string s=akaRandomName898420;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName14809 = new char[2];akaRandomName14809[0] = 0;akaRandomName14809[1] = '\\0';string s=akaRandomName14809;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName437653 = new char[3];akaRandomName437653[0] = 0;akaRandomName437653[1] = 0;akaRandomName437653[2] = '\\0';string s=akaRandomName437653;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName443536 = new char[2];akaRandomName443536[0] = 0;akaRandomName443536[1] = '\\0';string s=akaRandomName443536;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName975837 = new char[2];akaRandomName975837[0] = 0;akaRandomName975837[1] = '\\0';string s=akaRandomName975837;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName547410 = new char[2];akaRandomName547410[0] = 0;akaRandomName547410[1] = '\\0';string s=akaRandomName547410;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName213786 = new char[3];akaRandomName213786[0] = 0;akaRandomName213786[1] = 0;akaRandomName213786[2] = '\\0';string s=akaRandomName213786;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName64252 = new char[2];akaRandomName64252[0] = 0;akaRandomName64252[1] = '\\0';string s=akaRandomName64252;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName600304 = new char[2];akaRandomName600304[0] = 0;akaRandomName600304[1] = '\\0';string s=akaRandomName600304;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName251383 = new char[3];akaRandomName251383[0] = 0;akaRandomName251383[1] = 0;akaRandomName251383[2] = '\\0';string s=akaRandomName251383;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName461414 = new char[3];akaRandomName461414[0] = 0;akaRandomName461414[1] = 0;akaRandomName461414[2] = '\\0';string s=akaRandomName461414;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName335561 = new char[2];akaRandomName335561[0] = 0;akaRandomName335561[1] = '\\0';string s=akaRandomName335561;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName961144 = new char[2];akaRandomName961144[0] = 0;akaRandomName961144[1] = '\\0';string s=akaRandomName961144;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName541340 = new char[2];akaRandomName541340[0] = 0;akaRandomName541340[1] = '\\0';string s=akaRandomName541340;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_3\\solution013.cpp\\Solution\\romanToInt(string)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_romanToInt_string_directed_16(void) {\n{\nAKA_test_case_name=\"Solution_romanToInt_string_directed_16\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName913622 = new char[2];akaRandomName913622[0] = 0;akaRandomName913622[1] = '\\0';string s=akaRandomName913622;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_romanToInt_string_directed_16\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->romanToInt(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution013.cpp\\\\Solution\\\\romanToInt(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_romanToInt_string_directed_17(void) {\n{\nAKA_test_case_name=\"Solution_romanToInt_string_directed_17\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName5715 = new char[3];akaRandomName5715[0] = 0;akaRandomName5715[1] = 0;akaRandomName5715[2] = '\\0';string s=akaRandomName5715;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_romanToInt_string_directed_17\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->romanToInt(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution013.cpp\\\\Solution\\\\romanToInt(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_romanToInt_string_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_romanToInt_string_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName526736 = new char[2];akaRandomName526736[0] = 0;akaRandomName526736[1] = '\\0';string s=akaRandomName526736;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_romanToInt_string_directed_0\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->romanToInt(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution013.cpp\\\\Solution\\\\romanToInt(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_romanToInt_string_directed_1(void) {\n{\nAKA_test_case_name=\"Solution_romanToInt_string_directed_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName589445 = new char[3];akaRandomName589445[0] = 0;akaRandomName589445[1] = 0;akaRandomName589445[2] = '\\0';string s=akaRandomName589445;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_romanToInt_string_directed_1\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->romanToInt(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution013.cpp\\\\Solution\\\\romanToInt(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_romanToInt_string_directed_2(void) {\n{\nAKA_test_case_name=\"Solution_romanToInt_string_directed_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName772780 = new char[2];akaRandomName772780[0] = 0;akaRandomName772780[1] = '\\0';string s=akaRandomName772780;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_romanToInt_string_directed_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->romanToInt(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution013.cpp\\\\Solution\\\\romanToInt(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_romanToInt_string_directed_3(void) {\n{\nAKA_test_case_name=\"Solution_romanToInt_string_directed_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName517618 = new char[2];akaRandomName517618[0] = 0;akaRandomName517618[1] = '\\0';string s=akaRandomName517618;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_romanToInt_string_directed_3\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->romanToInt(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution013.cpp\\\\Solution\\\\romanToInt(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_romanToInt_string_directed_14(void) {\n{\nAKA_test_case_name=\"Solution_romanToInt_string_directed_14\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName706425 = new char[2];akaRandomName706425[0] = 0;akaRandomName706425[1] = '\\0';string s=akaRandomName706425;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_romanToInt_string_directed_14\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->romanToInt(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution013.cpp\\\\Solution\\\\romanToInt(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_romanToInt_string_directed_4(void) {\n{\nAKA_test_case_name=\"Solution_romanToInt_string_directed_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName52567 = new char[3];akaRandomName52567[0] = 0;akaRandomName52567[1] = 0;akaRandomName52567[2] = '\\0';string s=akaRandomName52567;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_romanToInt_string_directed_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->romanToInt(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution013.cpp\\\\Solution\\\\romanToInt(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_romanToInt_string_directed_15(void) {\n{\nAKA_test_case_name=\"Solution_romanToInt_string_directed_15\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName945631 = new char[2];akaRandomName945631[0] = 0;akaRandomName945631[1] = '\\0';string s=akaRandomName945631;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_romanToInt_string_directed_15\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->romanToInt(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution013.cpp\\\\Solution\\\\romanToInt(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_romanToInt_string_directed_5(void) {\n{\nAKA_test_case_name=\"Solution_romanToInt_string_directed_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName26902 = new char[2];akaRandomName26902[0] = 0;akaRandomName26902[1] = '\\0';string s=akaRandomName26902;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_romanToInt_string_directed_5\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->romanToInt(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution013.cpp\\\\Solution\\\\romanToInt(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_romanToInt_string_directed_12(void) {\n{\nAKA_test_case_name=\"Solution_romanToInt_string_directed_12\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName21235 = new char[3];akaRandomName21235[0] = 0;akaRandomName21235[1] = 0;akaRandomName21235[2] = '\\0';string s=akaRandomName21235;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_romanToInt_string_directed_12\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->romanToInt(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution013.cpp\\\\Solution\\\\romanToInt(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_romanToInt_string_directed_6(void) {\n{\nAKA_test_case_name=\"Solution_romanToInt_string_directed_6\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName506707 = new char[3];akaRandomName506707[0] = 0;akaRandomName506707[1] = 0;akaRandomName506707[2] = '\\0';string s=akaRandomName506707;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_romanToInt_string_directed_6\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->romanToInt(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution013.cpp\\\\Solution\\\\romanToInt(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_romanToInt_string_directed_13(void) {\n{\nAKA_test_case_name=\"Solution_romanToInt_string_directed_13\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName387880 = new char[2];akaRandomName387880[0] = 0;akaRandomName387880[1] = '\\0';string s=akaRandomName387880;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_romanToInt_string_directed_13\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->romanToInt(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution013.cpp\\\\Solution\\\\romanToInt(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_romanToInt_string_directed_7(void) {\n{\nAKA_test_case_name=\"Solution_romanToInt_string_directed_7\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName807171 = new char[2];akaRandomName807171[0] = 0;akaRandomName807171[1] = '\\0';string s=akaRandomName807171;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_romanToInt_string_directed_7\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->romanToInt(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution013.cpp\\\\Solution\\\\romanToInt(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_romanToInt_string_directed_10(void) {\n{\nAKA_test_case_name=\"Solution_romanToInt_string_directed_10\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution013.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName813145 = new char[2];akaRandomName813145[0] = 0;akaRandomName813145[1] = '\\0';string s=akaRandomName813145;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_romanToInt_string_directed_10\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->romanToInt(s);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution013.cpp\\\\Solution\\\\romanToInt(string)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ]
  },
  {
    "fm": "string longestCommonPrefix(vector<string>& strs) {\r     if (strs.empty())\r     {\r       return \"\";\r     }\r     for (int i = 0; i < strs[0].size(); i ++)\r     {\r       for (int j = 0; j < strs.size(); j ++)\r       {\r \tif (strs[j].size() < i + 1 || strs[j][i] != strs[0][i])\r \t{\r \t  return strs[0].substr(0, i);\r \t}  \r       }\t\r     }\r     return strs[0];\r   }",
    "fc": "class Solution {\r public:\r   string longestCommonPrefix(vector<string>& strs) {\r     if (strs.empty())\r     {\r       return \"\";\r     }\r     for (int i = 0; i < strs[0].size(); i ++)\r     {\r       for (int j = 0; j < strs.size(); j ++)\r       {\r \tif (strs[j].size() < i + 1 || strs[j][i] != strs[0][i])\r \t{\r \t  return strs[0].substr(0, i);\r \t}  \r       }\t\r     }\r     return strs[0];\r   }\r };",
    "m": [ ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution014.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> strs;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution014.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> strs;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution014.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> strs;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\nchar* akaRandomName623189 = new char[2];akaRandomName623189[0] = 20;akaRandomName623189[1] = '\\0';string strs_element0=akaRandomName623189;\nstrs.push_back(strs_element0);\nchar* akaRandomName3529 = new char[2];akaRandomName3529[0] = 79;akaRandomName3529[1] = '\\0';string strs_element1=akaRandomName3529;\nstrs.push_back(strs_element1);\nchar* akaRandomName954368 = new char[2];akaRandomName954368[0] = 100;akaRandomName954368[1] = '\\0';string strs_element2=akaRandomName954368;\nstrs.push_back(strs_element2);\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution014.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> strs;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\nchar* akaRandomName168521 = new char[2];akaRandomName168521[0] = -9;akaRandomName168521[1] = '\\0';string strs_element0=akaRandomName168521;\nstrs.push_back(strs_element0);\nchar* akaRandomName330484 = new char[2];akaRandomName330484[0] = 77;akaRandomName330484[1] = '\\0';string strs_element1=akaRandomName330484;\nstrs.push_back(strs_element1);\nchar* akaRandomName101366 = new char[2];akaRandomName101366[0] = 110;akaRandomName101366[1] = '\\0';string strs_element2=akaRandomName101366;\nstrs.push_back(strs_element2);\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution014.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> strs;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\nchar* akaRandomName147462 = new char[2];akaRandomName147462[0] = 108;akaRandomName147462[1] = '\\0';string strs_element0=akaRandomName147462;\nstrs.push_back(strs_element0);\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution014.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> strs;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution014.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> strs;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution014.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> strs;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\nchar* akaRandomName92590 = new char[2];akaRandomName92590[0] = -108;akaRandomName92590[1] = '\\0';string strs_element0=akaRandomName92590;\nstrs.push_back(strs_element0);\n/* NormalStringDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution014.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> strs;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\n/* NormalStringDataNode RETURN */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_3\\solution014.cpp\\Solution\\longestCommonPrefix(vector<string>&)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_longestCommonPrefix_vector_string_directed_8(void) {\n{\nAKA_test_case_name=\"Solution_longestCommonPrefix_vector_string_directed_8\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution014.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> strs;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_longestCommonPrefix_vector_string_directed_8\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->longestCommonPrefix(strs);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution014.cpp\\\\Solution\\\\longestCommonPrefix(vector<string>&)\");\n\n\n\nvector<string> EXPECTED_strs;\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_longestCommonPrefix_vector_string_directed_7(void) {\n{\nAKA_test_case_name=\"Solution_longestCommonPrefix_vector_string_directed_7\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution014.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> strs;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_longestCommonPrefix_vector_string_directed_7\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->longestCommonPrefix(strs);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution014.cpp\\\\Solution\\\\longestCommonPrefix(vector<string>&)\");\n\n\n\nvector<string> EXPECTED_strs;\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_longestCommonPrefix_vector_string_random_6(void) {\n{\nAKA_test_case_name=\"Solution_longestCommonPrefix_vector_string_random_6\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution014.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> strs;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\nchar* akaRandomName876936 = new char[2];akaRandomName876936[0] = 20;akaRandomName876936[1] = '\\0';string strs_element0=akaRandomName876936;\nstrs.push_back(strs_element0);\nchar* akaRandomName565687 = new char[2];akaRandomName565687[0] = 79;akaRandomName565687[1] = '\\0';string strs_element1=akaRandomName565687;\nstrs.push_back(strs_element1);\nchar* akaRandomName684281 = new char[2];akaRandomName684281[0] = 100;akaRandomName684281[1] = '\\0';string strs_element2=akaRandomName684281;\nstrs.push_back(strs_element2);\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_longestCommonPrefix_vector_string_random_6\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->longestCommonPrefix(strs);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution014.cpp\\\\Solution\\\\longestCommonPrefix(vector<string>&)\");\n\n\n\nvector<string> EXPECTED_strs;\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_longestCommonPrefix_vector_string_random_4(void) {\n{\nAKA_test_case_name=\"Solution_longestCommonPrefix_vector_string_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution014.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> strs;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\nchar* akaRandomName152623 = new char[2];akaRandomName152623[0] = -9;akaRandomName152623[1] = '\\0';string strs_element0=akaRandomName152623;\nstrs.push_back(strs_element0);\nchar* akaRandomName196916 = new char[2];akaRandomName196916[0] = 77;akaRandomName196916[1] = '\\0';string strs_element1=akaRandomName196916;\nstrs.push_back(strs_element1);\nchar* akaRandomName920650 = new char[2];akaRandomName920650[0] = 110;akaRandomName920650[1] = '\\0';string strs_element2=akaRandomName920650;\nstrs.push_back(strs_element2);\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_longestCommonPrefix_vector_string_random_4\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->longestCommonPrefix(strs);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution014.cpp\\\\Solution\\\\longestCommonPrefix(vector<string>&)\");\n\n\n\nvector<string> EXPECTED_strs;\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_longestCommonPrefix_vector_string_random_2(void) {\n{\nAKA_test_case_name=\"Solution_longestCommonPrefix_vector_string_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution014.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> strs;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\nchar* akaRandomName650903 = new char[2];akaRandomName650903[0] = 108;akaRandomName650903[1] = '\\0';string strs_element0=akaRandomName650903;\nstrs.push_back(strs_element0);\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_longestCommonPrefix_vector_string_random_2\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->longestCommonPrefix(strs);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution014.cpp\\\\Solution\\\\longestCommonPrefix(vector<string>&)\");\n\n\n\nvector<string> EXPECTED_strs;\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_longestCommonPrefix_vector_string_directed_4(void) {\n{\nAKA_test_case_name=\"Solution_longestCommonPrefix_vector_string_directed_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution014.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> strs;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_longestCommonPrefix_vector_string_directed_4\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->longestCommonPrefix(strs);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution014.cpp\\\\Solution\\\\longestCommonPrefix(vector<string>&)\");\n\n\n\nvector<string> EXPECTED_strs;\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_longestCommonPrefix_vector_string_directed_3(void) {\n{\nAKA_test_case_name=\"Solution_longestCommonPrefix_vector_string_directed_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution014.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> strs;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_longestCommonPrefix_vector_string_directed_3\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->longestCommonPrefix(strs);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution014.cpp\\\\Solution\\\\longestCommonPrefix(vector<string>&)\");\n\n\n\nvector<string> EXPECTED_strs;\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_longestCommonPrefix_vector_string_random_3(void) {\n{\nAKA_test_case_name=\"Solution_longestCommonPrefix_vector_string_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution014.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> strs;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\nchar* akaRandomName490917 = new char[2];akaRandomName490917[0] = -108;akaRandomName490917[1] = '\\0';string strs_element0=akaRandomName490917;\nstrs.push_back(strs_element0);\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_longestCommonPrefix_vector_string_random_3\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->longestCommonPrefix(strs);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution014.cpp\\\\Solution\\\\longestCommonPrefix(vector<string>&)\");\n\n\n\nvector<string> EXPECTED_strs;\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_longestCommonPrefix_vector_string_directed_6(void) {\n{\nAKA_test_case_name=\"Solution_longestCommonPrefix_vector_string_directed_6\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution014.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<string> strs;\nstring AKA_EXPECTED_OUTPUT=\"\";\n\n/* RootDataNode STATIC */\n/* VectorDataNode strs */\n/* NormalStringDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_longestCommonPrefix_vector_string_directed_6\");string AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->longestCommonPrefix(strs);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution014.cpp\\\\Solution\\\\longestCommonPrefix(vector<string>&)\");\n\n\n\nvector<string> EXPECTED_strs;\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ]
  },
  {
    "fm": "vector<vector<int> > threeSum(vector<int>& nums) {\r     vector<vector<int> > ret;\r     int n = nums.size();\r \r     if (n < 3)\r     {\r       return ret;\r     }\r \r     sort(nums.begin(), nums.end());\r     for (int i = 0; i < n; i ++)\r     {\r       // Avoid repeate situation.\r       if (i > 0 && nums[i] == nums[i - 1])\r       {\r \tcontinue;\r       }\r       int l = i + 1, r = n - 1;\r \r       while (l < r)\r       {\r \tint sum = nums[i] + nums[l] + nums[r];\r \tif (sum == 0)\r \t{\r \t  ret.push_back(vector<int>{nums[i], nums[l], nums[r]});\r \r \t  // Avoid repeate elements.\r \t  while (nums[l] == nums[l + 1])\r \t  {\r \t    l ++;\r \t  }\r \t  while (nums[r] == nums[r - 1])\r \t  {\r \t    r --;\r \t  }\r \t  l ++;\r \t  r --;\r \t}\r \telse if (sum > 0)\r \t{\r \t  r --;\r \t}\r \telse\r \t{\r \t  l ++;\r \t}\r       }\r     }\r     return ret;\r   }",
    "fc": "class Solution {\r public:\r   vector<vector<int> > threeSum(vector<int>& nums) {\r     vector<vector<int> > ret;\r     int n = nums.size();\r \r     if (n < 3)\r     {\r       return ret;\r     }\r \r     sort(nums.begin(), nums.end());\r     for (int i = 0; i < n; i ++)\r     {\r       // Avoid repeate situation.\r       if (i > 0 && nums[i] == nums[i - 1])\r       {\r \tcontinue;\r       }\r       int l = i + 1, r = n - 1;\r \r       while (l < r)\r       {\r \tint sum = nums[i] + nums[l] + nums[r];\r \tif (sum == 0)\r \t{\r \t  ret.push_back(vector<int>{nums[i], nums[l], nums[r]});\r \r \t  // Avoid repeate elements.\r \t  while (nums[l] == nums[l + 1])\r \t  {\r \t    l ++;\r \t  }\r \t  while (nums[r] == nums[r - 1])\r \t  {\r \t    r --;\r \t  }\r \t  l ++;\r \t  r --;\r \t}\r \telse if (sum > 0)\r \t{\r \t  r --;\r \t}\r \telse\r \t{\r \t  l ++;\r \t}\r       }\r     }\r     return ret;\r   }\r };",
    "m": [ ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution015.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=1386279614;\nnums.push_back(nums_element0);\nint nums_element1=2147218046;\nnums.push_back(nums_element1);\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution015.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution015.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-1447162140;\nnums.push_back(nums_element0);\nint nums_element1=1676884095;\nnums.push_back(nums_element1);\nint nums_element2=-1422189910;\nnums.push_back(nums_element2);\n/* VectorDataNode RETURN */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_3\\solution015.cpp\\Solution\\threeSum(vector<int>&)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_threeSum_vector_int_random_3(void) {\n{\nAKA_test_case_name=\"Solution_threeSum_vector_int_random_3\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution015.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=1386279614;\nnums.push_back(nums_element0);\nint nums_element1=2147218046;\nnums.push_back(nums_element1);\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_threeSum_vector_int_random_3\");vector<vector<int>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->threeSum(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution015.cpp\\\\Solution\\\\threeSum(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_threeSum_vector_int_directed_0(void) {\n{\nAKA_test_case_name=\"Solution_threeSum_vector_int_directed_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution015.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_threeSum_vector_int_directed_0\");vector<vector<int>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->threeSum(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution015.cpp\\\\Solution\\\\threeSum(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_threeSum_vector_int_random_1(void) {\n{\nAKA_test_case_name=\"Solution_threeSum_vector_int_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution015.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\nvector<vector<int>> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-1447162140;\nnums.push_back(nums_element0);\nint nums_element1=1676884095;\nnums.push_back(nums_element1);\nint nums_element2=-1422189910;\nnums.push_back(nums_element2);\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_threeSum_vector_int_random_1\");vector<vector<int>> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->threeSum(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_3\\\\solution015.cpp\\\\Solution\\\\threeSum(vector<int>&)\");\n\n\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ]
  }
]
