[
  {
    "fc": "class Solution {\r public:\r   bool isAnagram(string s, string t) {\r     unordered_map<char, int> umap;\r \r     for (auto i : s)\r     {\r       umap[i] ++;\r     }\r \r     for (auto j : t)\r     {\r       if (umap.find(j) != umap.end())\r       {\r \tumap[j] --;\r       }\r       else\r       {\r \treturn false;\r       }\r     }\r \r     for (unordered_map<char, int>::iterator iter = umap.begin(); iter != umap.end(); iter ++)\r     {\r       if (iter -> second > 0)\r       {\r \treturn false;\r       }\r     }\r     return true;\r   }\r };",
    "m": [ ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution242.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName618696 = new char[2];akaRandomName618696[0] = 39;akaRandomName618696[1] = '\\0';string s=akaRandomName618696;\nchar* akaRandomName187185 = new char[2];akaRandomName187185[0] = 87;akaRandomName187185[1] = '\\0';string t=akaRandomName187185;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution242.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName528012 = new char[2];akaRandomName528012[0] = 115;akaRandomName528012[1] = '\\0';string s=akaRandomName528012;\nchar* akaRandomName295122 = new char[2];akaRandomName295122[0] = -35;akaRandomName295122[1] = '\\0';string t=akaRandomName295122;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_25\\solution242.cpp\\Solution\\isAnagram(string,string)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_isAnagram_string_string_random_5(void) {\n{\nAKA_test_case_name=\"Solution_isAnagram_string_string_random_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution242.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName943470 = new char[2];akaRandomName943470[0] = 39;akaRandomName943470[1] = '\\0';string s=akaRandomName943470;\nchar* akaRandomName947115 = new char[2];akaRandomName947115[0] = 87;akaRandomName947115[1] = '\\0';string t=akaRandomName947115;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isAnagram_string_string_random_5\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isAnagram(s,t);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_25\\\\solution242.cpp\\\\Solution\\\\isAnagram(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_isAnagram_string_string_random_0(void) {\n{\nAKA_test_case_name=\"Solution_isAnagram_string_string_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution242.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nchar* akaRandomName516577 = new char[2];akaRandomName516577[0] = 115;akaRandomName516577[1] = '\\0';string s=akaRandomName516577;\nchar* akaRandomName845426 = new char[2];akaRandomName845426[0] = -35;akaRandomName845426[1] = '\\0';string t=akaRandomName845426;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalStringDataNode s */\n/* NormalStringDataNode t */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isAnagram_string_string_random_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isAnagram(s,t);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_25\\\\solution242.cpp\\\\Solution\\\\isAnagram(string,string)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ],
    "fm": "bool isAnagram(string s, string t) {\r     unordered_map<char, int> umap;\r \r     for (auto i : s)\r     {\r       umap[i] ++;\r     }\r \r     for (auto j : t)\r     {\r       if (umap.find(j) != umap.end())\r       {\r \tumap[j] --;\r       }\r       else\r       {\r \treturn false;\r       }\r     }\r \r     for (unordered_map<char, int>::iterator iter = umap.begin(); iter != umap.end(); iter ++)\r     {\r       if (iter -> second > 0)\r       {\r \treturn false;\r       }\r     }\r     return true;\r   }"
  },
  {
    "fc": "class Solution {\r public:\r   vector<string> binaryTreePaths(TreeNode* root) {\r     vector<string> ret;\r     if (root != NULL)\r     {\r       dfs(root, \"\", ret);\r     }\r     return ret;\r   }\r \r   void dfs(TreeNode *root, string str, vector<string> &ret)\r   {\r     if (root == NULL)\r     {\r       return;\r     }\r     if (str == \"\")\r     {\r       str = to_string(root -> val);\r     }\r     else\r     {\r       str = str + \"->\" + to_string(root -> val);\r     }\r \r     if (root -> left == NULL && root -> right == NULL)\r     {\r       ret.push_back(str);\r     }\r \r     dfs(root -> left, str, ret);\r     dfs(root -> right, str, ret);\r   }\r };",
    "m": [ "void dfs(TreeNode *root, string str, vector<string> &ret)\r\n  {\r\n    if (root == NULL)\r\n    {\r\n      return;\r\n    }\r\n    if (str == \"\")\r\n    {\r\n      str = to_string(root -> val);\r\n    }\r\n    else\r\n    {\r\n      str = str + \"->\" + to_string(root -> val);\r\n    }\r\n\r\n    if (root -> left == NULL && root -> right == NULL)\r\n    {\r\n      ret.push_back(str);\r\n    }\r\n\r\n    dfs(root -> left, str, ret);\r\n    dfs(root -> right, str, ret);\r\n  }" ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution257.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution257.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1174610913;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\binaryTreePaths(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-1921597838;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\binaryTreePaths(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=0;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\binaryTreePaths(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution257.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution257.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-248166567;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\binaryTreePaths(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_25\\solution257.cpp\\Solution\\binaryTreePaths(TreeNode*)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_binaryTreePaths_TreeNodemul_random_0(void) {\n{\nAKA_test_case_name=\"Solution_binaryTreePaths_TreeNodemul_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution257.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_binaryTreePaths_TreeNodemul_random_0\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->binaryTreePaths(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_25\\\\solution257.cpp\\\\Solution\\\\binaryTreePaths(TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_binaryTreePaths_TreeNodemul_random_1(void) {\n{\nAKA_test_case_name=\"Solution_binaryTreePaths_TreeNodemul_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution257.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1174610913;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\binaryTreePaths(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=-1921597838;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\binaryTreePaths(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=0;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\binaryTreePaths(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_binaryTreePaths_TreeNodemul_random_1\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->binaryTreePaths(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_25\\\\solution257.cpp\\\\Solution\\\\binaryTreePaths(TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_binaryTreePaths_TreeNodemul_random_2(void) {\n{\nAKA_test_case_name=\"Solution_binaryTreePaths_TreeNodemul_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution257.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nTreeNode* root;\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_binaryTreePaths_TreeNodemul_random_2\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->binaryTreePaths(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_25\\\\solution257.cpp\\\\Solution\\\\binaryTreePaths(TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_binaryTreePaths_TreeNodemul_random_5(void) {\n{\nAKA_test_case_name=\"Solution_binaryTreePaths_TreeNodemul_random_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution257.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-248166567;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\binaryTreePaths(TreeNode*)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n/* val : null value -> no code */\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nvector<string> AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* VectorDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_binaryTreePaths_TreeNodemul_random_5\");vector<string> AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->binaryTreePaths(root);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_25\\\\solution257.cpp\\\\Solution\\\\binaryTreePaths(TreeNode*)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ],
    "fm": "vector<string> binaryTreePaths(TreeNode* root) {\r     vector<string> ret;\r     if (root != NULL)\r     {\r       dfs(root, \"\", ret);\r     }\r     return ret;\r   }"
  },
  {
    "fc": "class Solution {\r public:\r   vector<string> binaryTreePaths(TreeNode* root) {\r     vector<string> ret;\r     if (root != NULL)\r     {\r       dfs(root, \"\", ret);\r     }\r     return ret;\r   }\r \r   void dfs(TreeNode *root, string str, vector<string> &ret)\r   {\r     if (root == NULL)\r     {\r       return;\r     }\r     if (str == \"\")\r     {\r       str = to_string(root -> val);\r     }\r     else\r     {\r       str = str + \"->\" + to_string(root -> val);\r     }\r \r     if (root -> left == NULL && root -> right == NULL)\r     {\r       ret.push_back(str);\r     }\r \r     dfs(root -> left, str, ret);\r     dfs(root -> right, str, ret);\r   }\r };",
    "m": [ "vector<string> binaryTreePaths(TreeNode* root) {\r\n    vector<string> ret;\r\n    if (root != NULL)\r\n    {\r\n      dfs(root, \"\", ret);\r\n    }\r\n    return ret;\r\n  }", "void dfs(TreeNode *root, string str, vector<string> &ret)\r\n  {\r\n    if (root == NULL)\r\n    {\r\n      return;\r\n    }\r\n    if (str == \"\")\r\n    {\r\n      str = to_string(root -> val);\r\n    }\r\n    else\r\n    {\r\n      str = str + \"->\" + to_string(root -> val);\r\n    }\r\n\r\n    if (root -> left == NULL && root -> right == NULL)\r\n    {\r\n      ret.push_back(str);\r\n    }\r\n\r\n    dfs(root -> left, str, ret);\r\n    dfs(root -> right, str, ret);\r\n  }", "void dfs(TreeNode *root, string str, vector<string> &ret)\r\n  {\r\n    if (root == NULL)\r\n    {\r\n      return;\r\n    }\r\n    if (str == \"\")\r\n    {\r\n      str = to_string(root -> val);\r\n    }\r\n    else\r\n    {\r\n      str = str + \"->\" + to_string(root -> val);\r\n    }\r\n\r\n    if (root -> left == NULL && root -> right == NULL)\r\n    {\r\n      ret.push_back(str);\r\n    }\r\n\r\n    dfs(root -> left, str, ret);\r\n    dfs(root -> right, str, ret);\r\n  }" ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution257.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1499709319;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=979696844;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=1567115336;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-305354784;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right1_x=-1487168771;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=761632863;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1300799456;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=298428340;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left0_x=87992134;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-1956078246;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=754348592;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-304400290;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=-1438993508;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2).val=-2050915465;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_left0_x=961256274;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_left_0 = new ::TreeNode(root2_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).val=-871558001;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).right;\nAKA_VECTOR_INIT_root_2_DOT_left.push_back(AKA_VECTOR_INIT_root_2_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_left1_x=-1431210818;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_left_1 = new ::TreeNode(root2_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).val=-1820111282;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).right;\nAKA_VECTOR_INIT_root_2_DOT_left.push_back(AKA_VECTOR_INIT_root_2_DOT_left_1);\n(*AKA_VECTOR_INIT_root_2).left = AKA_VECTOR_INIT_root_2_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_right0_x=705252410;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_0 = new ::TreeNode(root2_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).val=-9397670;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_0);\n(*AKA_VECTOR_INIT_root_2).right = AKA_VECTOR_INIT_root_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nchar* akaRandomName533845 = new char[2];akaRandomName533845[0] = 11;akaRandomName533845[1] = '\\0';string str=akaRandomName533845;\nvector<string> ret;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalStringDataNode str */\n/* VectorDataNode ret */\nchar* akaRandomName441744 = new char[2];akaRandomName441744[0] = -89;akaRandomName441744[1] = '\\0';string ret_element0=akaRandomName441744;\nret.push_back(ret_element0);\nchar* akaRandomName697059 = new char[2];akaRandomName697059[0] = 3;akaRandomName697059[1] = '\\0';string ret_element1=akaRandomName697059;\nret.push_back(ret_element1);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution257.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-584223959;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=624997494;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-2109101145;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=1919688799;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1119170212;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=786532015;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left2_x=2012992974;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode(root0_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=-2124040591;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=813112450;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-1756112666;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nchar* akaRandomName459371 = new char[2];akaRandomName459371[0] = 0;akaRandomName459371[1] = '\\0';string str=akaRandomName459371;\nvector<string> ret;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalStringDataNode str */\n/* VectorDataNode ret */\nchar* akaRandomName136031 = new char[2];akaRandomName136031[0] = 108;akaRandomName136031[1] = '\\0';string ret_element0=akaRandomName136031;\nret.push_back(ret_element0);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution257.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1789230416;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=325256698;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-1603173426;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-679723682;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=184138062;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-1901355072;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1803019031;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-389544744;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right1_x=-779759412;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=792630363;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nchar* akaRandomName958389 = new char[2];akaRandomName958389[0] = 116;akaRandomName958389[1] = '\\0';string str=akaRandomName958389;\nvector<string> ret;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalStringDataNode str */\n/* VectorDataNode ret */\nchar* akaRandomName842887 = new char[2];akaRandomName842887[0] = -64;akaRandomName842887[1] = '\\0';string ret_element0=akaRandomName842887;\nret.push_back(ret_element0);\nchar* akaRandomName128299 = new char[2];akaRandomName128299[0] = 92;akaRandomName128299[1] = '\\0';string ret_element1=akaRandomName128299;\nret.push_back(ret_element1);\nchar* akaRandomName124444 = new char[2];akaRandomName124444[0] = 58;akaRandomName124444[1] = '\\0';string ret_element2=akaRandomName124444;\nret.push_back(ret_element2);\n\n" ],
    "path_fm": "D:\\py\\test\\folder_25\\solution257.cpp\\Solution\\dfs(TreeNode*,string,vector<string>&)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_dfs_TreeNodemul_string_vector_string_random_1(void) {\n{\nAKA_test_case_name=\"Solution_dfs_TreeNodemul_string_vector_string_random_1\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution257.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1499709319;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=979696844;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0).left;\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=1567115336;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-305354784;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right1_x=-1487168771;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=761632863;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_x=1300799456;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1 = new ::TreeNode(root1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1).val=298428340;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_1_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left0_x=87992134;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_0 = new ::TreeNode(root1_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).val=-1956078246;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_0).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root1_left1_x=754348592;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_1\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_1_DOT_left_1 = new ::TreeNode(root1_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).val=-304400290;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1_DOT_left_1).right;\nAKA_VECTOR_INIT_root_1_DOT_left.push_back(AKA_VECTOR_INIT_root_1_DOT_left_1);\n(*AKA_VECTOR_INIT_root_1).left = AKA_VECTOR_INIT_root_1_DOT_left[0];\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_1).right;\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_1);\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_x=-1438993508;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2 = new ::TreeNode(root2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2).val=-2050915465;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_left0_x=961256274;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_left_0 = new ::TreeNode(root2_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).val=-871558001;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_left_0).right;\nAKA_VECTOR_INIT_root_2_DOT_left.push_back(AKA_VECTOR_INIT_root_2_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_left1_x=-1431210818;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_left_1 = new ::TreeNode(root2_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).val=-1820111282;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_left_1).right;\nAKA_VECTOR_INIT_root_2_DOT_left.push_back(AKA_VECTOR_INIT_root_2_DOT_left_1);\n(*AKA_VECTOR_INIT_root_2).left = AKA_VECTOR_INIT_root_2_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_2_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root2_right0_x=705252410;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_2\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_2_DOT_right_0 = new ::TreeNode(root2_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).val=-9397670;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_2_DOT_right_0).right;\nAKA_VECTOR_INIT_root_2_DOT_right.push_back(AKA_VECTOR_INIT_root_2_DOT_right_0);\n(*AKA_VECTOR_INIT_root_2).right = AKA_VECTOR_INIT_root_2_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_2);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nchar* akaRandomName770693 = new char[2];akaRandomName770693[0] = 11;akaRandomName770693[1] = '\\0';string str=akaRandomName770693;\nvector<string> ret;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalStringDataNode str */\n/* VectorDataNode ret */\nchar* akaRandomName219323 = new char[2];akaRandomName219323[0] = -89;akaRandomName219323[1] = '\\0';string ret_element0=akaRandomName219323;\nret.push_back(ret_element0);\nchar* akaRandomName851331 = new char[2];akaRandomName851331[0] = 3;akaRandomName851331[1] = '\\0';string ret_element1=akaRandomName851331;\nret.push_back(ret_element1);\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_dfs_TreeNodemul_string_vector_string_random_1\");AKA_INSTANCE___Solution->dfs(root,str,ret);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_25\\\\solution257.cpp\\\\Solution\\\\dfs(TreeNode*,string,vector<string>&)\");\n\n/* error assertion */\nvector<string> EXPECTED_ret;\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_dfs_TreeNodemul_string_vector_string_random_2(void) {\n{\nAKA_test_case_name=\"Solution_dfs_TreeNodemul_string_vector_string_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution257.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=-584223959;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=624997494;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-2109101145;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=1919688799;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=1119170212;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=786532015;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left2_x=2012992974;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[2]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_2 = new ::TreeNode(root0_left2_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).val=-2124040591;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_2).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_2);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=813112450;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-1756112666;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nchar* akaRandomName897548 = new char[2];akaRandomName897548[0] = 0;akaRandomName897548[1] = '\\0';string str=akaRandomName897548;\nvector<string> ret;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalStringDataNode str */\n/* VectorDataNode ret */\nchar* akaRandomName863930 = new char[2];akaRandomName863930[0] = 108;akaRandomName863930[1] = '\\0';string ret_element0=akaRandomName863930;\nret.push_back(ret_element0);\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_dfs_TreeNodemul_string_vector_string_random_2\");AKA_INSTANCE___Solution->dfs(root,str,ret);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_25\\\\solution257.cpp\\\\Solution\\\\dfs(TreeNode*,string,vector<string>&)\");\n\n/* error assertion */\nvector<string> EXPECTED_ret;\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_dfs_TreeNodemul_string_vector_string_random_0(void) {\n{\nAKA_test_case_name=\"Solution_dfs_TreeNodemul_string_vector_string_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution257.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root;\n\n\n/* SubStructDataNode root */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_x=1789230416;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0 = new ::TreeNode(root0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0).val=325256698;\n/* PointerStructureDataNode left */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_left;\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left0_x=-1603173426;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[0]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_0 = new ::TreeNode(root0_left0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).val=-679723682;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_0).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_0);\n/* SubStructDataNode left */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_left1_x=184138062;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\left\\\\left[1]\\\\left\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_left_1 = new ::TreeNode(root0_left1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).val=-1901355072;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_left_1).right;\nAKA_VECTOR_INIT_root_0_DOT_left.push_back(AKA_VECTOR_INIT_root_0_DOT_left_1);\n(*AKA_VECTOR_INIT_root_0).left = AKA_VECTOR_INIT_root_0_DOT_left[0];\n/* PointerStructureDataNode right */\nstd::vector<TreeNode*> AKA_VECTOR_INIT_root_0_DOT_right;\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right0_x=-1803019031;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[0]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_0 = new ::TreeNode(root0_right0_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).val=-389544744;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_0).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_0);\n/* SubStructDataNode right */\n/* ConstructorDataNode TreeNode(int) */\n/* NormalNumberDataNode x */\nint root0_right1_x=-779759412;\nAKA_mark(\"Calling: .\\\\folder_25\\\\solution257.cpp\\\\TreeNode\\\\TreeNode(int)|ROOT\\\\solution257.cpp\\\\dfs(TreeNode*,string,vector<string>&)\\\\root\\\\AKA_VECTOR_INIT_root_0\\\\root\\\\right\\\\right[1]\\\\right\\\\TreeNode(int)\");AKA_fCall++;auto AKA_VECTOR_INIT_root_0_DOT_right_1 = new ::TreeNode(root0_right1_x);\n/* NormalNumberDataNode val */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).val=792630363;\n/* PointerStructureDataNode left */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).left;\n/* PointerStructureDataNode right */\n(*AKA_VECTOR_INIT_root_0_DOT_right_1).right;\nAKA_VECTOR_INIT_root_0_DOT_right.push_back(AKA_VECTOR_INIT_root_0_DOT_right_1);\n(*AKA_VECTOR_INIT_root_0).right = AKA_VECTOR_INIT_root_0_DOT_right[0];\n\nAKA_VECTOR_INIT_root.push_back(AKA_VECTOR_INIT_root_0);\n\nTreeNode* root = AKA_VECTOR_INIT_root[0];\nchar* akaRandomName540533 = new char[2];akaRandomName540533[0] = 116;akaRandomName540533[1] = '\\0';string str=akaRandomName540533;\nvector<string> ret;\n\n/* RootDataNode STATIC */\n/* PointerStructureDataNode root */\n/* NormalStringDataNode str */\n/* VectorDataNode ret */\nchar* akaRandomName282234 = new char[2];akaRandomName282234[0] = -64;akaRandomName282234[1] = '\\0';string ret_element0=akaRandomName282234;\nret.push_back(ret_element0);\nchar* akaRandomName253655 = new char[2];akaRandomName253655[0] = 92;akaRandomName253655[1] = '\\0';string ret_element1=akaRandomName253655;\nret.push_back(ret_element1);\nchar* akaRandomName315278 = new char[2];akaRandomName315278[0] = 58;akaRandomName315278[1] = '\\0';string ret_element2=akaRandomName315278;\nret.push_back(ret_element2);\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_dfs_TreeNodemul_string_vector_string_random_0\");AKA_INSTANCE___Solution->dfs(root,str,ret);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_25\\\\solution257.cpp\\\\Solution\\\\dfs(TreeNode*,string,vector<string>&)\");\n\n/* error assertion */\nvector<string> EXPECTED_ret;\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ],
    "fm": "void dfs(TreeNode *root, string str, vector<string> &ret)\r   {\r     if (root == NULL)\r     {\r       return;\r     }\r     if (str == \"\")\r     {\r       str = to_string(root -> val);\r     }\r     else\r     {\r       str = str + \"->\" + to_string(root -> val);\r     }\r \r     if (root -> left == NULL && root -> right == NULL)\r     {\r       ret.push_back(str);\r     }\r \r     dfs(root -> left, str, ret);\r     dfs(root -> right, str, ret);\r   }"
  },
  {
    "fc": "class Solution {\r public:\r   int addDigits(int num) {\r     while (num >= 10)\r     {\r       int sum = 0;\r       while (num)\r       {\r \tsum += num % 10;\r \tnum /= 10;\r       }\r       num = sum;\r     }\r     return num;\r   }\r };",
    "m": [ ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution258.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=10;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution258.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=10;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_25\\solution258.cpp\\Solution\\addDigits(int)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_addDigits_int_random_4(void) {\n{\nAKA_test_case_name=\"Solution_addDigits_int_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution258.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=10;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_addDigits_int_random_4\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->addDigits(num);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_25\\\\solution258.cpp\\\\Solution\\\\addDigits(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_addDigits_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_addDigits_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution258.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=10;\n\n\nint AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_addDigits_int_random_2\");int AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->addDigits(num);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_25\\\\solution258.cpp\\\\Solution\\\\addDigits(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ],
    "fm": "int addDigits(int num) {\r     while (num >= 10)\r     {\r       int sum = 0;\r       while (num)\r       {\r \tsum += num % 10;\r \tnum /= 10;\r       }\r       num = sum;\r     }\r     return num;\r   }"
  },
  {
    "fc": "class Solution {\r public:\r   bool isUgly(int num) {\r     int arr[3] = {2, 3, 5};\r \r     if (num <= 0)\r     {\r       return false;\r     }\r     \r     for (auto i : arr)\r     {\r       while (num % i == 0)\r       {\r \tnum /= i;\r       }\r     }\r     return num == 1;\r   }\r };",
    "m": [ ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution263.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=0;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution263.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=5;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution263.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=4;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n" ],
    "path_fm": "D:\\py\\test\\folder_25\\solution263.cpp\\Solution\\isUgly(int)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_isUgly_int_random_4(void) {\n{\nAKA_test_case_name=\"Solution_isUgly_int_random_4\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution263.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=0;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isUgly_int_random_4\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isUgly(num);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_25\\\\solution263.cpp\\\\Solution\\\\isUgly(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_isUgly_int_random_2(void) {\n{\nAKA_test_case_name=\"Solution_isUgly_int_random_2\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution263.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=5;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isUgly_int_random_2\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isUgly(num);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_25\\\\solution263.cpp\\\\Solution\\\\isUgly(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_isUgly_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_isUgly_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution263.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\n\n\nint num=4;\n\n\nbool AKA_EXPECTED_OUTPUT;\n\n/* RootDataNode STATIC */\n/* NormalNumberDataNode num */\n/* NormalNumberDataNode RETURN */\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_isUgly_int_random_0\");bool AKA_ACTUAL_OUTPUT=AKA_INSTANCE___Solution->isUgly(num);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_25\\\\solution263.cpp\\\\Solution\\\\isUgly(int)\");\n\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ],
    "fm": "bool isUgly(int num) {\r     int arr[3] = {2, 3, 5};\r \r     if (num <= 0)\r     {\r       return false;\r     }\r     \r     for (auto i : arr)\r     {\r       while (num % i == 0)\r       {\r \tnum /= i;\r       }\r     }\r     return num == 1;\r   }"
  },
  {
    "fc": "class Solution {\r public:\r   void moveZeroes(vector<int>& nums) {\r     int n = nums.size();\r \r     int j = 0;\r     for (int i = 0; i < n; i ++)\r     {\r       if (nums[i] != 0)\r       {\r         nums[j ++] = nums[i];\r       }\r     }\r \r     for (; j < n; j ++)\r     {\r       nums[j] = 0;\r     }\r   }\r };",
    "m": [ ],
    "simplified_t": [ "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution283.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-1816159061;\nnums.push_back(nums_element0);\nint nums_element1=431167576;\nnums.push_back(nums_element1);\nint nums_element2=-367897383;\nnums.push_back(nums_element2);\n\n", "\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution283.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-1734952468;\nnums.push_back(nums_element0);\nint nums_element1=368135374;\nnums.push_back(nums_element1);\nint nums_element2=197906346;\nnums.push_back(nums_element2);\n\n" ],
    "path_fm": "D:\\py\\test\\folder_25\\solution283.cpp\\Solution\\moveZeroes(vector<int>&)",
    "c": [ "" ],
    "t": [ "void AKA_TEST_Solution_moveZeroes_vector_int_random_0(void) {\n{\nAKA_test_case_name=\"Solution_moveZeroes_vector_int_random_0\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution283.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-1816159061;\nnums.push_back(nums_element0);\nint nums_element1=431167576;\nnums.push_back(nums_element1);\nint nums_element2=-367897383;\nnums.push_back(nums_element2);\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_moveZeroes_vector_int_random_0\");AKA_INSTANCE___Solution->moveZeroes(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_25\\\\solution283.cpp\\\\Solution\\\\moveZeroes(vector<int>&)\");\n\n/* error assertion */\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n", "void AKA_TEST_Solution_moveZeroes_vector_int_random_5(void) {\n{\nAKA_test_case_name=\"Solution_moveZeroes_vector_int_random_5\";\n\n// set up\n;\n\n\n/* SubClassDataNode AKA_INSTANCE___Solution */\n/* ConstructorDataNode Solution() */\nAKA_mark(\"Calling: \\\\Solution()|ROOT\\\\solution283.cpp\\\\GLOBAL\\\\AKA_INSTANCE___Solution\\\\AKA_INSTANCE___Solution\\\\Solution()\");AKA_fCall++;AKA_INSTANCE___Solution = new ::Solution();\n\n\nvector<int> nums;\n\n/* RootDataNode STATIC */\n/* VectorDataNode nums */\nint nums_element0=-1734952468;\nnums.push_back(nums_element0);\nint nums_element1=368135374;\nnums.push_back(nums_element1);\nint nums_element2=197906346;\nnums.push_back(nums_element2);\n\n\n\nAKA_mark(\"<<PRE-CALLING>> Test Solution_moveZeroes_vector_int_random_5\");AKA_INSTANCE___Solution->moveZeroes(nums);\nAKA_fCall++;AKA_mark(\"Return from: .\\\\folder_25\\\\solution283.cpp\\\\Solution\\\\moveZeroes(vector<int>&)\");\n\n/* error assertion */\nvector<int> EXPECTED_nums;\n\n\n\n// tear down\n;\n}\n}\n" ],
    "f": [ ],
    "fm": "void moveZeroes(vector<int>& nums) {\r     int n = nums.size();\r \r     int j = 0;\r     for (int i = 0; i < n; i ++)\r     {\r       if (nums[i] != 0)\r       {\r         nums[j ++] = nums[i];\r       }\r     }\r \r     for (; j < n; j ++)\r     {\r       nums[j] = 0;\r     }\r   }"
  }
]
